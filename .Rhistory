library("boot", lib.loc="C:/Program Files/R/R-2.13.1/library")
library("cluster", lib.loc="C:/Program Files/R/R-2.13.1/library")
library("foreign", lib.loc="C:/Program Files/R/R-2.13.1/library")
library("rstudio", lib.loc="C:/Program Files/RStudio/R/library")
install.packages("psych")
install.packages("psych")
install.packages("psych")
install.packages("psych")
install.packages("psych")
[1:10]
c(1:10)
mean(c(1:10))
std(c(1:10))
sd(c(1:10))
install.packages("psych")
install.packages("ICC")
.libpatjs
.libpaths
?.libPaths
libPaths
.libPaths
libPaths('C:/Users/s1229179/Local Documents/R/')
.libPaths('C:/Users/s1229179/Local Documents/R/')
.libPaths('C:/Users/s1229179/Local Documents/R/')
install.packages("psych")
.libPaths('C:/Users/s1229179/Local Documents/R/')
help(starup)
help(startup)
help(Startup)
help(lib)
lib
??lib
library
library(psych)
library(boot)
library(boot, verbose =TRUE
)
library(boot, verbose=TRUE)
.libPaths()
help(install.packages)
install.packages("psych")
.libpaths()
.libPaths()
.libPaths()
help(Startup)
c <- ggplot(dd, aes(y=caret, x=price)) + facet_grid(. ~ cut)
c + stat_smooth(method=lm) + geom_point()
library(ggplot2)
data(diamonds)
require(Lock5Data)
data(RestaurantTips)
fit = lm(Tip ~ Bill, data = RestaurantTips)
d = data.frame(RestaurantTips, predict(fit, interval="prediction"))
ggplot(d,aes(x=Bill,y=Tip)) + geom_point() + geom_smooth(method="lm")
ggplot(d,aes(x=Bill,y=Tip)) +
geom_smooth(aes(ymin=lwr,ymax=upr,fill='prediction'),alpha=0.3) +
geom_smooth(method="lm",aes(fill='confidence'),alpha=0.3) +
geom_smooth(method="lm",se=FALSE,color='blue') +
geom_point() +
scale_fill_manual('Interval', values = c('green', 'yellow')) +
ylab('Tip (dollars)') +
xlab('Bill (dollars)')
#  geom_point() + geom_smooth(method="lm")
library(lme4)
fit1 <- lmer(price ~ carat + depth + clarity + (1 | cut), data = diamonds)
fit2 <- lm(price ~ carat, data = diamonds)
fit3 <- lm(price ~ depth + carat, data = diamonds)
merfit = predict(fit1, newdata = diamonds)
Designmat <- model.matrix(eval(eval(fit1$call$fixed)[-2]), merfit[-ncol(merfit)])
dd = data.frame(diamonds, predict(fit1,interval='confidence'),predict(fit2,interval='confidence'),predict(fit3,interval='confidence'))
library(effects)
c <- ggplot(dd, aes(y=caret, x=price)) + facet_grid(. ~ cut)
c + stat_smooth(method=lm) + geom_point()
dd = data.frame(diamonds, predict(fit1,interval='confidence'),predict(fit2,interval='confidence'),predict(fit3,interval='confidence'))
c <- ggplot(dd, aes(y=caret, x=price)) + facet_grid(. ~ cut)
c + stat_smooth(method=lm) + geom_point()
head(dd)
c <- ggplot(dd, aes(y=carat, x=price)) + facet_grid(. ~ cut)
c + stat_smooth(method=lm) + geom_point()
# Smoothers for subsets
c <- ggplot(dd, aes(y=carat, x=price)) + facet_grid(. ~ cut)
c + stat_smooth(method=lm, fullrange = TRUE) + geom_point()
library(lme4)
install.packages(c("lme4", "mvtnorm"))
library(lme4)
library(mvtnorm)
data(diamonds)
data(Diamonds)
data(Diamond)
diamon
diamond
diamonds
diamond
Diamond
Diamonds
data()
data(insteval)
data(instEval)
data(InstEval)
head(InstEval)
data(VerbAgg)
head(VerbAgg
)
head(grouseticks)
head(grouseticks_agg)
viz.m = lmer(meanTICKS ~ height + (1 | BROOD) + (1 + BROOD | YEAR), data = grouseticks_agg)
viz.m = lmer(meanTICKS ~ HEIGHT + (1 | BROOD) + (1 + BROOD | YEAR), data = grouseticks_agg)
sVA = scale(VerbAgg)
sVA = scale(as.numeric(VerbAgg$Gender))
head(sVA)
viz.m = lmer(meanTICKS ~ HEIGHT + BROOD + (1 + HEIGHT| meanTICKS \ YEAR), data = grouseticks_agg)
viz.m = lmer(meanTICKS ~ HEIGHT + BROOD + (1 + HEIGHT| meanTICKS/YEAR), data = grouseticks_agg)
head(cake)
head(cake,50)
viz.m = lmer(angle ~ temperature + (1 + temperature|recipe/replicate), data = cake)
viz.m = lmer(angle ~ temperature + (1 + temperature|replicate/recipe), data = cake)
viz.m = lmer(angle ~ temperature + (1 |replicate/recipe), data = cake)
summary(viz.m)
install.packages("semPlot")
library(semPlot)
semPlot(viz.m)
??semPlot
semPlotModel(viz.m)
semPaths(viz.m)
install.packages("Swirl")
install.packages("swirl")
library(swirl)
install_course_zip(path="z:/Y2_Psychology_RMS1.zip")
install_course_zip(path="z:/Y2_Psychology_RMS1(2).zip")
swirl()
install_course_directory(path="z:/Y2_Psychology_RMS1/")
swirl()
install_course_directory(path="z:/Y2_Psychology_RMS1/")
swirl()
uninstall_all_courses()
install_course_directory(path="z:/Y2_Psychology_RMS1/")
swilr()
swirl()
swirl()
df
swirl()
library("swirl", lib.loc="\\\\chss.datastore.ed.ac.uk/chss/ppls/users/s1229179/R/win-library/3.2")
swirl()
rm(list = ls(all = TRUE))
library(swirl)
swirl()
swirl()
swirl()
uninstall_course(course_name = Y2 Psychology RMS1)
uninstall_course(course_name = "Y2 Psychology RMS1")
swirl()
install_course_zip(path="z")
install_course_zip(path="z:/Y2_Psychology_RMS1(2).zip")
swirl()
uninstall_course(course_name = "Y2 Psychology RMS1")
swirl()
install_course_directory(path="z:/Y2_Psychology_RMS1/")
swirl()
install_course_zip(path="C:/Users/s1229179/Downloads/Y2_Psychology_RMS1(2).zip)
)""
""
install_course_zip(path="C:/Users/s1229179/Downloads/Y2_Psychology_RMS1(2).zip")
uuninstall_all_courses()
uninstall_all_courses()
swirl()
install_course_zip(path="C:/Users/s1229179/Downloads/Y2_Psychology_RMS1(2).zip")
swirl()
swirl()
sample
0
q
info()
main()
swirl()
mean()
help("mean")
!mean
!mean?mean
?mean
main()
cor(df$anx_score_1, df$rt)
info()
cor(df$anx_score_1, df$rt, use="complete.obs")
main()
main()
getwd()
setwd(dir = "C:/Users/s1229179/GitHub/R/all PQ chimps/
")
library(adimpro)
?comment
??adimpro
tst = read.image(filename = "IR_22937.jpg")
tst = read.image(filename = "IR_22937.jpg", type='jpg')
tst = read.raw(filename = "IR_22937.jpg", type='jpg')
getwd
getwd()
setwd(dir = 'C:/Users/s1229179/GitHub/R')
tst = read.raw(filename = "IR_22937.jpg", type='jpg')
tst = read.image(filename = "IR_22937.jpg")
tst = file.info("IR_22937.jpg")
summary(tst)
files <- (Sys.glob("*.jpg"))
piclist <- NULL
for 1 in 1:length(files) {
dater = file.info(files[i])
rbind(piclist,list(files[i],dater$ctime))
}
piclist <- NULL
for i in 1:length(files) {
dater = file.info(files[i])
rbind(piclist,list(files[i],dater$ctime))
for i in 1:length(files) {
for (i in 1:length(files)) {
dater = file.info(files[i])
rbind(piclist,list(files[i],dater$ctime))
}
for (i in 1:length(files)) {
dater = file.info(files[i])
rbind(piclist,cbind(files[i],dater$ctime))
}
for (i in 1:length(files)) {
dater = file.info(files[i])
piclist = rbind(piclist,cbind(files[i],dater$ctime))
}
View(piclist)
piclist <- NULL
for (i in 1:length(files)) {
dater = file.info(files[i])
piclist = rbind(piclist,cbind(files[i],as.character(dater$ctime)))
}
View(piclist)
write.csv("imgNameDates.csv")
write.csv(piclist,"imgNameDates.csv")
files <- (Sys.glob("*.jpg"))
piclist <- NULL
for (i in 1:length(files)) {
dater = file.info(files[i])
piclist = rbind(piclist,cbind(files[i],as.character(dater$ctime)))
}
write.csv(piclist,"imgNameDates.csv")
getwd
getwd()
