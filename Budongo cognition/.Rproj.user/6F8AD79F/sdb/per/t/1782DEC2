{
    "collab_server" : "",
    "contents" : "\n\n# 1. who completed all the training, and moved onto testing\n\n\n# 2. who spent time around the apparatus, when no rewards being given out\n\n\n# 3. who continued to interact with the screen, when not rewarded\n\n\n\n\n\n\n# [1] CI, ED, FK, KL, EV, PE, LO\n\nEWpartic = as.factor(c(1,0,1,0,1,1,0,1,0,0,0,1,0,0,1,0,0,0))\n\naggPers = cbind(aggPers, EWpartic)\n\n#write.csv(aggPers, file = \"aggregatedPers.csv\")\naggPers = aggPers[,1:16]\n\n\n\nEWtm <- aggregate(aggPers, by=list(aggPers$EWpartic), FUN=mean)\nEWts <- aggregate(aggPers, by=list(aggPers$EWpartic), FUN=sd)\n\nEWp = barplot(height=as.matrix(EWtm[3:8]),beside=TRUE,\n              legend.text=c('Non-participants','Participants'),\n              ylim=c(0,7))\nsegments(c(EWp), c(t(t(EWtm[3:8] - EWts[3:8]))), c(EWp),c(t(t(EWtm[3:8] + EWts[3:8]))), lwd=2)\n\n# logit glm for seeing how pers affects this\n\nmew.gm1 = glm(EWpartic ~ dom + con + neu + ext + agr + opn, \n              data=aggPers, family=binomial(link=\"logit\"))\n\n\n# t-tests\n\nc.t = t.test(aggPers$Conscientiousness[aggPers$EWpartic==1],aggPers$Conscientiousness[aggPers$EWpartic==0])\n# the above is now borderline\nn.t = t.test(aggPers$Neuroticism[aggPers$EWpartic==1],aggPers$Neuroticism[aggPers$EWpartic==0]) # nope\n# this one doesn't actually meet the 'non-overlapping bars' criteria\n# ... exclude it?\no.t = t.test(aggPers$Openness[aggPers$EWpartic==1],aggPers$Openness[aggPers$EWpartic==0]) # yep\n\np.adjust(c(c.t$p.value, n.t$p.value, o.t$p.value), 'BH', 3)\n# none of these pass correction\n# n.t$p.value, # hmmmmm\n\n\n\n### [2] Time spent around the apparatus\n\ninPodL <- data.frame(Date=factor(),Chimp=factor(),Time=numeric(),\n                     Dominance=numeric(),Extraversion=numeric(),\n                     Conscientiousness=numeric(),\n                     Agreeableness=numeric(),\n                     Neuroticism=numeric(),Openness=numeric()\n                         )\n\n#??? inPod$Date <- tAround$Date\n\ntAround <- read.csv('EW_timeSpentInPodsFinalStage.csv', header=TRUE)\n\nfor (i in 2:19){\n  #tAround[,i] <- as.Date(tAround[,i],format=\"%H:%M:%S\",origin='00:00:00')\n  tAround[,i] <- difftime(\n    strptime(levels(tAround[,i])[tAround[,i]],format=\"%H:%M:%S\")\n    ,Sys.Date()-1/24,\n    units='secs')\n}\n\n# not needed amymore\ntoSecs <- function(u,v = (Sys.Date()-1/24)) {\n\n    difftime(\n      strptime(levels(u)[u],format=\"%H:%M:%S\")\n         ,v, # this shift works...\n         units='secs')\n}\n\n## in lieu of fixing the time conversion functions, we have a backup\n\ntAround <- tAround.bak\n\n\n# toSecs should work since changed, but we will have to check this again eventually\ninPodL = rbind(\n  cbind(Date=tAround$Date,Chimp=\"Cindy\",Time=tAround$Cindy,aggPers[1,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"David\",Time=tAround$David,aggPers[2,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Edith\",Time=tAround$Edith,aggPers[3,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Emma\",Time=tAround$Emma,aggPers[4,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Eva\",Time=tAround$Eva,aggPers[5,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Frek\",Time=tAround$Frek,aggPers[6,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Heleen\",Time=tAround$Heleen,aggPers[7,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Kilimi\",Time=tAround$Kilimi,aggPers[8,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Kindia\",Time=tAround$Kindia,aggPers[9,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Lianne\",Time=tAround$Lianne,aggPers[10,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Liberius\",Time=tAround$Liberius,aggPers[11,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Louis\",Time=tAround$Louis,aggPers[12,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Lucy\",Time=tAround$Lucy,aggPers[13,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Paul\",Time=tAround$Paul,aggPers[14,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Pearl\",Time=tAround$Pearl,aggPers[15,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Qafzeh\",Time=tAround$Qafzeh,aggPers[16,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Rene\",Time=tAround$Rene,aggPers[17,2:7]),\n  cbind(Date=tAround$Date,Chimp=\"Sophie\",Time=tAround$Sophie,aggPers[18,2:7])  \n  )\n\n\ninPodL$Time = as.numeric(inPodL$Time)\n  \n# may consider removing outliers, to be consistent\n\ninPodL$secs[outliers(tatScreen$secs,3)]\n# happy days, no outliers above 3 SDs\n\n\n## need to fix (add) the score standardizations, here:\nlevels(inPodL$Chimp)[6] <- 'Freek'\ninPodL.mcmc = merge(inPodL[,c(1:3)],aggPers[,c(1,8:13)], by.x= \"Chimp\", \"Chimp\")\n\n\n# what predicts the amount of total time spent in the pod, per day\nmew.pois.1 = glmer(Time ~ Dominance + Extraversion + Conscientiousness + Agreeableness\n                   + Neuroticism + Openness + (1 | Date) + (1 | Chimp),\n                   data=inPodL, family = poisson)\n# the above model is almost certainly meaningless\n\n# scaling needs to be done properly, from the outset\n## Update - need to see how goes GLMM respond when we just take out the zeros\nmew.pois.1s = glmer(Time ~ s(Dominance) + s(Neuroticism) + s(Agreeableness) \n                    + s(Extraversion) + s(Conscientiousness) + s(Openness)\n                    + (1 | Date) + (1 | Chimp),\n                  data=inPodL, subset = inPodL$Time!=0, family = poisson)\n\n# Ext ... but this isn't properly accounting for zeros; doesn't agree with MCMC\n\n\next.pgm1=extract(mew.pois.1, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,\n                 include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,\n                 include.groups=FALSE,include.variance=FALSE)\npgm1.tbl = htmlreg(ext.pgm1,ci.force=TRUE, custom.model.names='Time spent in pod',\n                   caption = \"\", groups=NULL, digits=3, ci.force.level = 0.95, ci.test=NULL,\n                   bold=TRUE, custom.note = '', \n                   #reorder.coef = c(1:5,8,9,6,11,10,7),\n                   custom.coef.names=c(NA,'Dominance','Neuroticism','Agreeableness','Extraversion',\n                                      'Conscientiousness','Openness')\n)\nwrite(pgm1.tbl,\"InPodPGLM.html\")\n\n\n\n\n\n\nlibrary(MCMCglmm)\n\nmew.mcmc.pZIF.1 <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                              Openness + Neuroticism + Agreeableness +\n                              Extraversion, random= ~Date + Chimp,\n                            data = inPodL, family = \"zipoisson\"\n                            , rcov=~idh(trait):units\n                            , burnin = 10000 , nitt = 90000 , verbose = FALSE\n                            )\n# Dom, Neu, Con ### NO - SEE NEW FILE\n\n# I think idh is better, if this is being done correctly\nmew.mcmc.pZIF.2 <- MCMCglmm(Time ~ dom + ext + con + agr + neu + opn, random= ~Date + Chimp,\n                            data = inPodL, family = \"zipoisson\"\n                            , rcov=~us(trait):units\n                            , burnin = 10000 , nitt = 90000 , verbose = FALSE\n)\n\n# Let's try it with a specified prior\n#prior1.1 <- list(G = list(G1 = list(V = 1, nu = 0.002)), R = list(V = 1, nu = 0.002))\nprior1.1 <- list(G = list(G1 = list(V = 1, n = 0.002), G2 = list(V = 1, n = 0.002)),\n                 R = list(V = 1, n = 0.002))\nprior1.1 = list(R=list(V=1,nu=0.002),G=list(G1=list(V=1,nu=0.002)))\n# from JH:\nprior1.1 <- list(G=list(G1=list(V=diag(2), nu=2, alpha.mu=c(0,0),  \n                           alpha.V=diag(2)*1000)), R=list(V=diag(1), nu=0.002))\n\n# Chimp random effect is degenerate so what if we remove it? (nothing much)\nmew.mcmc.pZIF.3 <- MCMCglmm(Time ~ dom + ext + con + agr + neu + opn, random= ~Date,\n                            data = inPodL, family = \"zipoisson\"\n                            , rcov=~idh(trait):units\n                            , prior = prior1.1\n                            , burnin = 10000 , nitt = 90000\n                            , verbose = FALSE\n)\n\n# Hurdle instead of ZIP\nmew.mcmc.hp <- MCMCglmm(Time ~ dom + ext + con + agr + neu + opn, random= ~Date + Chimp,\n                            data = inPodL, family = \"hupoisson\"\n                            , rcov=~idh(trait):units\n                            #, prior = prior1.1\n                            , burnin = 10000 , nitt = 90000\n                            , verbose = FALSE\n)\n\nprior1.2 = list(\n # B = list(mu = c(0, 0, 0, 0, 0, 0), V = diag(6) * 1e10),\n  R = list(V = 1, fix = 1),\n  G = list(G1 = list(V = diag(2), n = 0.002), G2 = list(V = diag(2), n = 0.002)))\n\nB.prior <- list(V=diag(6)*1e7, mu=c(0,0,0,0,0,0))\nprior2.2  <- list(B=B.prior,\n                R=list(V=diag(1), nu=0.02), G=list(G1=list(V=diag(1),\n                nu=0.02, alpha.mu=rep(0,1), alpha.V=1000*diag(1)), G2=list(V=diag(1),\n                nu=0.02, alpha.mu=rep(0,1), alpha.V=1000*diag(1))))\n\nmew.mcmc.pZIF.4 <- MCMCglmm(Time ~ dom + ext + con + agr + neu + opn, random= ~Date + Chimp,\n                            data = inPodL, family = \"zipoisson\"\n                            , rcov=~idh(trait):units\n                            , prior = prior2.2\n                            , burnin = 10000 , nitt = 90000\n                            , verbose = FALSE\n)\n\n# ugh - so the first model is what I'll use\n### we will return here later for Prior investigation\n\n\n\n\n\n# [3] Who continues to interact?\n\n\ntatScreen <- read.csv('EW_timeSpentAtScreenFinalStage.csv', header=TRUE)\n# setting up the data.frame\ntatScreen$End <- strptime(levels(tatScreen$End)[tatScreen$End],format=\"%H:%M:%S\")\ntatScreen$Start.Pressing <- strptime(levels(tatScreen$Start.Pressing)[tatScreen$Start.Pressing],format=\"%H:%M:%S\")\n\ntatScreen$secs = as.numeric(difftime(tatScreen$End,tatScreen$Start.Pressing))\n\n# should maybe so something about the Frek/Freek issue\nlevels(tatScreen$Individual)[levels(tatScreen$Individual)==\"Frek\"] <- \"Freek\"\n\ntatScreen$Dominance = numeric(1)\ntatScreen$Extraversion = numeric(1)\ntatScreen$Conscientiousness = numeric(1)\ntatScreen$Agreeableness = numeric(1)\ntatScreen$Neuroticism = numeric(1)\ntatScreen$Openness = numeric(1)\n\n\nfor (i in 1:length(tatScreen$Date)){\n  tatScreen[i,13:18] = aggPers[which(as.character(tatScreen$Individual[i])==as.character(aggPers$Chimp)),8:13]\n\n}\n\n\n# outliers...\ntatScreen$secs[outliers(tatScreen$secs,3)] <- NA\n\n\n# model time\n\n# how many approaches to screen?\ntable(tatScreen$Individual)\n#aggPers$\nEW3particip = c(1,0,15,5,9,15,0,8,0,0,2,4,0,1,9,0,1,2)\naggPers = cbind(aggPers, EW3particip)\n\nmew.3.pm <- glm(EW3particip ~ Dominance + Neuroticism + Agreeableness +\n                  Extraversion + Conscientiousness + Openness, data=aggPers, family=poisson)\n# again, need to ZIF\n# but ZIFing doesn't really work, so probably means it is unnecessary and we should stick to gm, above\n\nlibrary(pscl)\nmew.3.zpm <- zeroinfl(EW3particip ~ Dominance + Neuroticism + \n                        Agreeableness + Extraversion + \n                        Conscientiousness + Openness\n                      , data=aggPers, dist=\"poisson\")\nmew.3.hm <- hurdle(EW3particip ~ Dominance + Neuroticism + \n                     Agreeableness + Extraversion + \n                     Conscientiousness + Openness\n                   , data=aggPers, dist=\"poisson\")\n# Looks like Con doesn't figure into this one, just Agr\n\n# library(bbmle)  \n# AICtab(mew.3.pm, mew.3.hm, weights=T, delta=T, base=T, logLik=T, sort=T)\n\nconfint(mew.3.pm)\n\n\n### can this model can be done better?\n# No, well, disagreeable chimps like Frek and Edith \n# will approach the screen and lose interest, and they're\n# the ones approaching the screen lots because they don't\n# care about others around them\n#\n# but C?\n\n\n\n# MCMCglmm again ... to test robustness, or if MCMC is operating correctly\nmew.3.mcmc.zpm <- MCMCglmm(EW3particip ~ dom + ext + con + agr + neu + opn, \n                            data = aggPers, family = \"zipoisson\"\n                            , rcov=~idh(trait):units\n                           # , burnin = 10000 , nitt = 90000 \n                           , verbose = FALSE)\n# okay, well this was useless, not too surprising\n\n\n                                                \next.pm3=extract(mew.3.hm, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,\n                 include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,\n                 include.groups=FALSE,include.variance=FALSE)\npm3.tbl = htmlreg(ext.pm3,ci.force=TRUE, custom.model.names='Number of approaches to screen',\n                   caption = \"\", groups=NULL, digits=3, ci.force.level = 0.95, ci.test=NULL,\n                  # bold=TRUE, \n                  custom.note = '', \n                   #reorder.coef = c(1:5,8,9,6,11,10,7),\n                  # custom.coef.names=c(NA,'Dominance','Neuroticism','Agreeableness','Extraversion',\n                  #                    'Conscientiousness','Openness')\n)\nwrite(pm3.tbl,\"GotoScreen3PGLM.html\")\n\n\n# how much time spent at the screen?\nmew.3.pgmm <- glmer(secs ~ Dominance + Neuroticism + Agreeableness + Extraversion + Conscientiousness + \n                       Openness\n                    + (1 | Session.number) \n                    + (1 | Individual)\n                    ,data = tatScreen, family = poisson\n                    #,control=glmerControl(maxfun=10000)\n                    )\n\nmew.3.pgmm.s <- glmer(secs ~ s(Dominance) + s(Neuroticism) + s(Agreeableness) + s(Extraversion) + s(Conscientiousness) + \n                      s(Openness)\n                    + (1 | Session.number) \n                    + (1 | Individual)\n                    ,data = tatScreen, family = poisson\n                    #,control=glmerControl(maxfun=10000)\n)\nvif.mer(mew.3.pgmm)\n\n\n# MCMC test check again\nmew.3.mcmc.pgmm <- MCMCglmm(secs ~ Dominance + Neuroticism + Agreeableness + Extraversion + Conscientiousness + \n                              Openness, random= ~Session.number + Individual\n                           , data = tatScreen, family = \"poisson\"\n                           , rcov=~us(trait):units\n                           # , burnin = 10000 , nitt = 90000 \n                           #, verbose = FALSE\n                           )\n# bloody hell, still won't work\n# good thing it did work the one place it was needed\n\n\n# okay, so let's check the convergence/OPTIMIZER issues\nlibrary(optimx)\nmew.3.opt <- update(mew.3.pois,control=glmerControl(optimizer=\"optimx\",\n                                                    optCtrl=list(maxfun=1000, \n                                                                 method='nlminb'\n                                                                 #method='L-BFGS-G'\n                                                                 )))\n                                                    \n\n### regression tables\n\nlibrary(texreg)\next.pgm3=extract(mew.3.pgmm, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,\n                include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,\n                include.groups=FALSE,include.variance=FALSE)\npgm3.tbl = htmlreg(ext.pgm3,ci.force=TRUE, custom.model.names='Time spent at screen',\n                  caption = \"\", groups=NULL, digits=3, ci.force.level = 0.95, ci.test=NULL,\n                  bold=TRUE, custom.note = '', \n                  #reorder.coef = c(1:5,8,9,6,11,10,7),\n                  #custom.coef.names=c(NA,'Dominance','Neuroticism','Agreeableness','Extraversion',\n                   #                   'Conscientiousness','Openness')\n)\nwrite(pgm3.tbl,\"AtScreen3PGLM.html\")\n",
    "created" : 1433887788298.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3294777883",
    "id" : "1782DEC2",
    "lastKnownWriteTime" : 1463054132,
    "last_content_update" : 0,
    "path" : "~/GitHub/R/Budongo cognition/EW_assocs.R",
    "project_path" : "EW_assocs.R",
    "properties" : {
    },
    "relative_order" : 0,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}