{
    "collab_server" : "",
    "contents" : "### MCMCglmm Priors\n\n### figuring it out\n\nlibrary(MCMCglmm)\n\n### This is what we want to deal with, ultimately:\nmew.mcmc.pZIF.1 <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                              Openness + Neuroticism + Agreeableness +\n                              Extraversion, random= ~Date + Chimp,\n                            data = inPodL, family = \"zipoisson\"\n                            , rcov=~idh(trait):units\n                            , burnin = 10000 , nitt = 90000 , verbose = FALSE\n)\n## are the random effects specified correctly?\n\n\nplot(mew.mcmc.pZIF.2)\n\n\n\n### Building up to it\n\nprior1.1 <- list(G = list(G1 = list(V = 1, n = 0.002), \n                          G2 = list(V = 1,n = 0.002)), \n                      R = list(V = 1, n = 0.002))\n\ng.pri1 <- gelman.prior(Time ~ Dominance, data = inPodL)\n\ng.priX <- gelman.prior(Time ~ Dominance + Conscientiousness +\n                         Openness + Neuroticism + Agreeableness +\n                         Extraversion, data=inPodL)\n\n#prior1.2 <- \n\nprior1.3 <- list((R=list(V=diag(2),n=2,fix=2),\n                  \n                  )\n\n\nmcmc1 <- MCMCglmm(Time ~ Dominance, random = ~Chimp + Date,\n                  data = inPodL, family='zipoisson',\n                  , rcov=~idh(trait):units\n                  , verbose = FALSE,\n                  prior = priorB\n                  )\n\n\n### THIS ONE ###\nmcmc2 <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                    Openness + Neuroticism + Agreeableness +\n                    Extraversion, \n                  random =~ idh(trait):Chimp + idh(trait):Date,\n                  data = inPodL.mcmc, family='zipoisson',\n                  , rcov=~idh(trait):units\n                  , verbose = FALSE,\n                  burnin = 10000 , nitt = 90000,\n                  prior = priorB\n)\n\nmcmc2.0.0 <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                    Openness + Neuroticism + Agreeableness +\n                    Extraversion, \n                  random =~ idh(trait):Chimp + idh(trait):Date,\n                  data = inPodL.mcmc, family='hupoisson',\n                  , rcov=~idh(trait):units\n                  , verbose = FALSE,\n                  burnin = 10000 , nitt = 90000,\n                  prior = priorB\n)\n\n# maybe this one...\nmcmc2.1 <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                    Openness + Neuroticism + Agreeableness +\n                    Extraversion, \n                  random =~ us(trait):Chimp + us(trait):Date,\n                  data = inPodL, family='zipoisson',\n                  , rcov=~us(trait):units\n                  , verbose = FALSE,\n                  burnin = 10000 , nitt = 90000,\n                  prior = priorB\n)\n\nmcmc2.1.0 <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                      Openness + Neuroticism + Agreeableness +\n                      Extraversion, \n                    random =~ us(trait):Chimp + us(trait):Date,\n                    data = inPodL, family='hupoisson',\n                    , rcov=~us(trait):units\n                    , verbose = FALSE,\n                    burnin = 10000 , nitt = 90000,\n                    prior = priorB\n)\n\n\n\nmcmc2.2 <- MCMCglmm(Time ~ trait + Dominance + Conscientiousness +\n                    Openness + Neuroticism + Agreeableness +\n                    Extraversion, \n                  #random =~ idh(trait):Chimp + Chimp + idh(trait):Date + Date,\n                  random =~ idh(trait):Chimp + idh(trait):Date,\n                  data = inPodL, family='zipoisson',\n                  , rcov=~idh(trait):units\n                  , verbose = FALSE,\n                  burnin = 10000 , nitt = 90000,\n                  prior = priorB\n)\n\n\n\n\nMCMCglmm(abund~trait+trait:fl+trait:mps+trait:elev+trait:distance +trait:dens-1,\n         random=~idh(trait):YEAR +idh(trait):pop,rcov=~idh(trait):units,data=flyden\n         s,family=\"zipoisson\",prior=p\n\n\npriorB <- list(R=list(V=diag(2),n=2,fix=2),\n               G=list(\n                 G1=list(V=diag(c(1, 1e-6)),n=2, fix=2),\n                 G2=list(V=diag(c(1, 1e-6)),n=2, fix=2)))\n\npriorB.1 <- list(R=list(V=diag(2),n=2,fix=2),\n               G=list(\n                 G1=list(V=diag(c(2, 1e-6)),n=2, fix=2),\n                 G2=list(V=diag(c(2, 1e-6)),n=2, fix=2)))\n\npriorB.2 <- list(R=list(V=diag(2),n=2,fix=2),\n                 G=list(\n                   G1=list(V=diag(c(2, 1e-6)),n=2, fix=2),\n                   G2=list(V=diag(c(2, 1e-6)),n=2, fix=2)))\n\n\nnterms = 7\n\n# # this appears to be the best prior\n# priorC <- list(B=list(mu=matrix(0, nterms, 1), V=diag(nterms)*1e+6),  \n#                R=list(V=diag(2), nu=0.001, fix=2),\n#                G=list(G1=list(V=diag(c(1, 1e-6)), nu=0.001, fix=2),\n#                       G2=list(V=diag(c(1, 1e-6)), nu=0.001, fix=2)))\n\npriorC <- list(B=list(mu=matrix(0, nterms, 1), V=diag(nterms)*1e+6),  \n               R=list(V=diag(2), nu=2.001, fix=2),\n               G=list(G1=list(V=diag(c(1, 1e-6)), nu=2.001, fix=2),\n                      G2=list(V=diag(c(1, 1e-6)), nu=2.001, fix=2)))\n\n# this sets up a diffuse prior around zero on the fixed effects,   \n# where nterms is the number of fixed effects your fitting\n\ndiag(priorC$B$V)[seq(4, nterms, 2)] <- 1e-6\n\n# this sets the variance around the zero inflation terms (except the  \n# intercept) to be very small, essentially fixing them to zero.\n\n\n# mcmc3 <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n#                     Openness + Neuroticism + Agreeableness +\n#                     Extraversion, \n#                   random =~ idh(trait):Chimp + idh(trait):Date,\n#                   data = inPodL.mcmc, family='zipoisson',\n#                   , rcov=~idh(trait):units\n#                   , verbose = FALSE,\n#                   burnin = 10000 , nitt = 90000,\n#                   prior = priorC\n# )\n\n\n# THIS ONE?\nmcmc3.us <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                    Openness + Neuroticism + Agreeableness +\n                    Extraversion, \n                  random =~ us(trait):Chimp + us(trait):Date,\n                  data = inPodL.mcmc, family='zipoisson',\n                  , rcov=~us(trait):units\n                  , verbose = FALSE,\n                  #burnin = 30000 , nitt = 300000,\n                  burnin = 10000 , nitt = 50000,\n                  prior = priorC\n)\nsummary(mcmc3.us)\n\n\n### hurdle?\n### ... probably not\n\n### should compare the ZIFp to the regular Poisson\n\npriorD <-list(R = list(V = diag(1), nu = 0.002), G =\n              list(G1 = list(V = diag(1), nu = 0.002)))\n\nmcmc3.p.us <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                          Openness + Neuroticism + Agreeableness +\n                          Extraversion, \n                        random =~ us(trait):Chimp + us(trait):Date,\n                        data = inPodL.mcmc, family='poisson',\n                        , rcov=~us(trait):units\n                        , verbose = FALSE,\n                        burnin = 30000 , nitt = 100000,\n                        prior = priorC\n)\n\nmcmc3.za.us <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                       Openness + Neuroticism + Agreeableness +\n                       Extraversion, \n                     random =~ us(trait):Chimp + us(trait):Date,\n                     data = inPodL.mcmc, family='zapoisson',\n                     , rcov=~us(trait):units\n                     , verbose = FALSE,\n                     burnin = 30000 , nitt = 100000,\n                     prior = priorC\n)\n\nmcmc3.hu.us <- MCMCglmm(Time ~ Dominance + Conscientiousness +\n                          Openness + Neuroticism + Agreeableness +\n                          Extraversion, \n                        random =~ us(trait):Chimp + us(trait):Date,\n                        data = inPodL.mcmc, family='hupoisson',\n                        , rcov=~us(trait):units\n                        , verbose = FALSE,\n                        burnin = 30000 , nitt = 100000,\n                        prior = priorC\n)\n#summary(mcmc3.us)\n\n## can it just be done with glmm and compared via DIC?\nlibrary(lme4)\nglm3.p.us <- glmer(Time ~ Dominance + Conscientiousness +\n                     Openness + Neuroticism + Agreeableness +\n                     Extraversion +\n                     (1 | Date) + (1 | Chimp)\n                     , data = inPodL.mcmc,\n                   family = poisson()\n                   )\n# this is shit, what about a regular ZIP?\n\nlibrary(pscl)\nzifp3 <- zeroinfl(Time ~ Dominance + Conscientiousness +\n                    Openness + Neuroticism + Agreeableness +\n                    Extraversion\n                  , data = inPodL.mcmc, dist=\"poisson\")\nzifp3.hu <- hurdle(Time ~ Dominance + Conscientiousness +\n                    Openness + Neuroticism + Agreeableness +\n                    Extraversion\n                  , data = inPodL.mcmc, dist=\"poisson\")\n\n\n\nrequire(R2admb)\ninstall.packages(\"glmmADMB\", repos=\"http://R-Forge.R-project.org\")\n\ninstall.packages('./glmmADMB_0.8.1.zip', repos=NULL)\n\ninstall.packages(\"glmmADMB\", \n                 repos=c(\"http://glmmadmb.r-forge.r-project.org/repos\",\n                         getOption(\"repos\")),\n                 type=\"source\")\n\nlibrary(glmmADMB)\n# ... shit\n# ... yeah?\n\nmew.poisZIF.1 <- glmmadmb(Time ~ Dominance + Conscientiousness +\n                            Openness + Neuroticism + Agreeableness +\n                            Extraversion + (1 | Date)# + (1 | Chimp)\n                          ,data=inPodL.mcmc, family = \"poisson\"\n                          , zeroInflation=TRUE\n                          , save.dir='./ADMB/',\n                          admb.opts = admbControl(noinit=FALSE, shess=FALSE)\n)\n\n## new fun toy thing\nlibrary(gamlss)\n\ngam.zip.1 <- gamlss(Time ~ Dominance + Conscientiousness +\n                      Openness + Neuroticism + Agreeableness +\n                      Extraversion + random(Date) + random(Chimp), \n                    data=inPodL.mcmc, family=ZIP)\nsummary(gam.zip.1)\n\n\n# probably choose to go with MCMCglmm\n\n\n\n### For use elsewhere\n\n# Does just what it says #\ndetachAllPackages <- function() {\n  basic.packages <- c(\"package:stats\",\"package:graphics\",\"package:grDevices\",\"package:utils\",\"package:datasets\",\"package:methods\",\"package:base\")\n  \n  package.list <- search()[ifelse(unlist(gregexpr(\"package:\",search()))==1,TRUE,FALSE)]\n  \n  package.list <- setdiff(package.list,basic.packages)\n  \n  if (length(package.list)>0)  for (package in package.list) detach(package, character.only=TRUE)\n  \n}\n\ndetachAllPackages()\n",
    "created" : 1453384159822.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3090081882",
    "id" : "4DEDC01",
    "lastKnownWriteTime" : 1463133909,
    "last_content_update" : 1463133909242,
    "path" : "C:/Users/s1229179/GitHub/R/Budongo cognition/MCMCtests.R",
    "project_path" : "MCMCtests.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}