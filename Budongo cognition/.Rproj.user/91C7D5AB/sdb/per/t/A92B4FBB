{
    "contents" : "# this file requires the running of:\n# fileLoader.R\n# perscoring_chimp.R\n\n\ns <- function(x) {scale(x)}\n\noutliers <- function(obs, x = 2.5)\n  abs(obs - mean(obs, na.rm = T)) > (sd(obs, na.rm = T) * x)\n\n\n\n# first we need an average performance matrix\n\n# need to deal with Frek later\n\naccuracy <- data.frame(chimp = character(0), acc_mean = numeric(0), acc_sd = numeric(0))\naccuracy <- data.frame(\n  rbind.data.frame(accuracy, cbind.data.frame(chimp='Cindy',acc_mean=mean(CIdata$Accuracy),acc_sd=sd(CIdata$Accuracy)),\n                  cbind.data.frame(chimp='David',acc_mean=mean(DAdata$Accuracy),acc_sd=sd(DAdata$Accuracy)),\n                  cbind.data.frame(chimp='Edith',acc_mean=mean(EDdata$Accuracy),acc_sd=sd(EDdata$Accuracy)),\n                  cbind.data.frame(chimp='Emma',acc_mean=mean(EMdata$Accuracy),acc_sd=sd(EMdata$Accuracy)),\n                  cbind.data.frame(chimp='Eva',acc_mean=mean(EVdata$Accuracy),acc_sd=sd(EVdata$Accuracy)),\n                  cbind.data.frame(chimp='Freek',acc_mean=mean(FKdata$Accuracy),acc_sd=sd(FKdata$Accuracy)),\n                  #cbind.data.frame(chimp='Heleen',acc_mean=mean(HLdata$Accuracy),acc_sd=sd(HLdata$Accuracy)),\n                  cbind.data.frame(chimp='Kilimi',acc_mean=mean(KLdata$Accuracy),acc_sd=sd(KLdata$Accuracy)),\n                  cbind.data.frame(chimp='Kindia',acc_mean=mean(KDdata$Accuracy),acc_sd=sd(KDdata$Accuracy)),\n                  #cbind.data.frame(chimp='Lianne',acc_mean=mean(LIdata$Accuracy),acc_sd=sd(LIdata$Accuracy)),\n                  cbind.data.frame(chimp='Liberius',acc_mean=mean(LBdata$Accuracy),acc_sd=sd(LBdata$Accuracy)),\n                  cbind.data.frame(chimp='Louis',acc_mean=mean(LOdata$Accuracy),acc_sd=sd(LOdata$Accuracy)),\n                #  cbind.data.frame(chimp='Lucy',acc_mean=mean(LUdata$Accuracy),acc_sd=sd(LUdata$Accuracy)),\n                  cbind.data.frame(chimp='Paul',acc_mean=mean(PAdata$Accuracy),acc_sd=sd(PAdata$Accuracy)),\n                  cbind.data.frame(chimp='Pearl',acc_mean=mean(PEdata$Accuracy),acc_sd=sd(PEdata$Accuracy)),\n                  cbind.data.frame(chimp='Qafzeh',acc_mean=mean(Qdata$Accuracy),acc_sd=sd(Qdata$Accuracy))\n                  #cbind.data.frame(chimp='Rene',acc_mean=mean(REdata$Accuracy),acc_sd=sd(REdata$Accuracy)),\n                  #cbind.data.frame(chimp='Sophie',acc_mean=mean(SOdata$Accuracy),acc_sd=sd(SOdata$Accuracy))\n                                \n                  \n), stringsAsFactors = FALSE\n                  )\n\n# add personality\naccu_pers <- cbind(accuracy,aggPers[c(-7,-10,-13,-17,-18),2:7])\n#accu_pers[2:3] <- cbind(as.numeric(accu_pers[2]))\n  \n#some stupid model(s)\nurr <- lm(acc_mean ~ s(dom) + s(ext) + s(con) + s(neu) + s(opn) + s(agr), data=accu_pers )\nuurrrr <- lm(acc_sd ~ s(dom) + s(ext) + s(con) + s(neu) + s(opn) + s(agr), data=accu_pers )\n\n\n\nrunif(10,0,1)\n\nLBlong <- 1:length(LBdata$Accuracy)\n\nplot(1:length(CIdata$Accuracy),CIdata$Accuracy)\nplot(LBdata$Accuracy ~ LBlong)\nplot(1:length(EDdata$Accuracy),EDdata$Accuracy)\nplot(1:length(KLdata$Accuracy),KLdata$Accuracy)\nplot(1:length(PEdata$Accuracy),PEdata$Accuracy)\n\n\n\n####### Accuracy #######\nlibrary(lme4)\n\n\n# GLM (first attempt)\nLBlong <- 1:length(LBdata$Accuracy)\nmod.g <- glm(LBdata$Accuracy ~ LBlong, family = binomial(link = 'probit'))\n\n\n# GLMMs\n\n# this is the main one\n# used in ASP 2015 presentation\nmod.gm1 <- glmer(Accuracy ~ dom + con + opn + neu + agr + ext +  (1 | Group.1),\n                 family = binomial, data=cz_bin_pers \n)\nlibrary(texreg)\next.gm1=extract(mod.gm1, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,\n                include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,\n                include.groups=FALSE,include.variance=FALSE)\ngm1.tbl = htmlreg(ext.gm1,ci.force=TRUE, custom.model.names='Chimpanzee Accuracy',\n                  caption = \"\", groups=NULL, digits=3, ci.force.level = 0.95, ci.test=NULL,\n                  bold=TRUE, custom.note = '', \n                  #reorder.coef = c(1:5,8,9,6,11,10,7),\n                  custom.coef.names=c(NA,'Dominance','Conscientiousness','Openness',\n                                      'Neuroticism','Agreeableness','Extraversion')\n                  )\nwrite(gm1.tbl,\"PerfGLM.html\")\n# library(stargazer)\n# stargazer(mod.gm1, type=\"html\")\n\n\n\nmod.gm2 <- glmer(Accuracy ~ dom + neu + agr + ext + con + opn + Trial + (1 | Group.1),\n  family = binomial, data=cz_bin_pers \n  )\n\n\nmod.gm3 <- glmer(Accuracy ~ Trial + (1 | Group.1),\n                 family = binomial, data=cz_bin_pers \n)\nmod.gm4 <- glmer(Accuracy ~ Trial + (1 + Trial | Group.1),\n                 family = binomial, data=cz_bin_pers \n)\n\nmod.gm3a <- glmer(Accuracy ~ Trial + s(SessionStart) + (1 | Group.1),\n                             family = binomial, data=cz_bin_pers \n)\n\nmod.gm2a <- glmer(Accuracy ~ dom + neu + agr + ext + con + opn + Trial + s(SessionStart) + (1 | Group.1),\n                  family = binomial, data=cz_bin_pers \n)\n\n\nanova(mod.gm1,mod.gm2,mod.gm3,mod.gm4\n      #,mod.gm2a\n      ) # so gm2 is the best model\n# can't step is with lme4\nlibrary(lmerTest)\nlibrary(car)\n#mod.gm2s <- step(mod.gm2a) # errrrgggh this would be awful nice\nmod.gm2.1 <- glmer(Accuracy ~ dom + con + Trial + (1 | Group.1),\n                               family = binomial, data=cz_bin_pers \n)\nmod.gm2.2 <- glmer(Accuracy ~ dom + neu + ext + Trial + (1 | Group.1),\n                   family = binomial, data=cz_bin_pers \n)\nmod.gm2.3 <- glmer(Accuracy ~ dom + neu + Trial + (1 | Group.1),\n                   family = binomial, data=cz_bin_pers \n)\nmod.gm2.4 <- glmer(Accuracy ~ dom + Trial + (1 | Group.1),\n                   family = binomial, data=cz_bin_pers \n)\nanova(mod.gm2,mod.gm2.1,mod.gm2.2,mod.gm2.3,mod.gm2.4)\n\n\n### testing some BLUP stuff from gm4\n# mostly garbage\nblup.gm4 = ranef(mod.gm4)\n\ncor(blup.gm4$Group.1[,1], accu_pers$agr[c(1,3:12)])\ncor.test(blup.gm4$Group.1[,1], accu_pers$dom[c(1,3:12)])\ncor.test(blup.gm4$Group.1[,1], accu_pers$neu[c(1,3:12)])\ncor(blup.gm4$Group.1[,1], accu_pers$opn[c(1,3:12)])\ncor.test(blup.gm4$Group.1[,1], accu_pers$con[c(1,3:12)])\ncor.test(blup.gm4$Group.1[,1], accu_pers$ext[c(1,3:12)])\n\ncor(blup.gm4$Group.1[,2], accu_pers$agr[c(1,3:12)])\ncor(blup.gm4$Group.1[,2], accu_pers$dom[c(1,3:12)])\ncor(blup.gm4$Group.1[,2], accu_pers$neu[c(1,3:12)])\ncor(blup.gm4$Group.1[,2], accu_pers$opn[c(1,3:12)])\ncor(blup.gm4$Group.1[,2], accu_pers$con[c(1,3:12)])\ncor.test(blup.gm4$Group.1[,2], accu_pers$ext[c(1,3:12)])\n\ncor.test(blup.gm4$Group.1[,2], accu_pers$dom[c(1,3:12)])\ncor.test(blup.gm4$Group.1[,2], accu_pers$neu[c(1,3:12)])\n\n### cor checks of accuracy vs. personality\ncor.test(accu_pers$acc_mean, accu_pers$dom)\ncor(accu_pers$acc_mean, accu_pers$agr)\ncor(accu_pers$acc_mean, accu_pers$ext)\ncor.test(accu_pers$acc_mean, accu_pers$neu)\ncor(accu_pers$acc_mean, accu_pers$opn)\ncor.test(accu_pers$acc_mean, accu_pers$con)\n\n# LDA\nlibrary(MASS)\n#boxM(accu_pers[,-1], accu_pers[,1])\n#mod.l <- lda(LBdata$Accuracy ~ LBlong)\nmod.l <- lda()\n\n\n\n####### Processing Time #######\ncz_bin_pers$inspecTime = cz_bin_pers$SampleSelect - cz_bin_pers$SampleOn\n\n# second timing period needs to be selected by accuracy\ncz_bin_pers$procTime = cz_bin_pers$ChoiceSelect - cz_bin_pers$ChoiceOn\n\ncz_bin_pers$procTime.1 = ifelse(cz_bin_pers$Accuracy=='1',\n       cz_bin_pers$procTime,\n       NA)\n       \n\n\n# remove upper outliers\ncz_bin_pers$procTime[outliers(cz_bin_pers$procTime,2.5)] <- NA\n#outliers(cz_bin_pers$procTime, 2.5)\ncz_bin_pers$inspecTime[outliers(cz_bin_pers$inspecTime,2.5)] <- NA\n\n# log transfoooooooorrrmm\ncz_bin_pers$logprocTime <- log(cz_bin_pers$procTime)\ncz_bin_pers$loginspecTime <- log(cz_bin_pers$inspecTime)\ncz_bin_pers$procTime.1.log <- log(cz_bin_pers$procTime.1)\n\nshapiro.test(cz_bin_pers$logprocTime) # doesn't make sense untransformed, RT is never normal\nqqnorm(cz_bin_pers$logprocTime)\nqqline(cz_bin_pers$logprocTime)\n\nshapiro.test(cz_bin_pers$loginspecTime)\nqqnorm(cz_bin_pers$loginspecTime)\nqqline(cz_bin_pers$loginspecTime)\n\nqqnorm(cz_bin_pers$procTime.1.log)\n\n#cz_bin_pers$logprocTime[outliers(cz_bin_pers$logprocTime,2.5)] <- NA\n#cz_bin_pers$loginspecTime[outliers(cz_bin_pers$loginspecTime,2.5)] <- NA\n\n\nmod.pt1 <- lmer(log(procTime) ~ dom + neu + opn + agr + con + ext + (1 | Group.1)\n                , data=cz_bin_pers\n)\nmod.pt2 <- lmer(log(procTime) ~ Trial + dom + neu + opn + agr + con + ext + (1 | Group.1)\n               , data=cz_bin_pers\n               )\nmod.pt3 <- lmer(logprocTime ~ Trial + (1 | Group.1)\n                , data=cz_bin_pers\n)\n\n\nmod.it1 <- lmer(log(inspecTime) ~ dom + neu + opn + agr + con + ext + (1 | Group.1)\n                , data=cz_bin_pers\n)\nmod.it2 <- lmer(log(inspecTime) ~ dom + neu + opn + agr + con + ext + Trial + (1 | Group.1)\n                , data=cz_bin_pers\n)\nmod.it3 <- lmer(loginspecTime ~ Trial + (1 | Group.1)\n                , data=cz_bin_pers\n)\n\n# now with corrects (rewarded) only\n\nmod.ptrw.1 <- lmer(procTime.1.log ~ dom + neu + opn + agr + con + ext + (1 | Group.1)\n                           , data=cz_bin_pers\n)\n\n\n\nlibrary(corrgram)\n\npBLUP = ranef(mod.pt3)\npBLUP = cbind(pBLUP$Group.1, accu_pers[c(1,3:12),])\ncorrgram(pBLUP)\n\niBLUP = ranef(mod.it3)\niBLUP = cbind(iBLUP$Group.1, accu_pers[c(1,3:12),])\ncorrgram(iBLUP)\n\ncor.test(pBLUP[,12],pBLUP[,6])\n\ncor.test(iBLUP[,12],pBLUP[,9])\n\n\n# RT medians\n\nmedLogProcT <- aggregate(cz_bin_pers$logprocTime, by=list(cz_bin_pers$Group.1), FUN=median, na.rm=TRUE)\nmedLogInspecT <- aggregate(cz_bin_pers$loginspecTime, by=list(cz_bin_pers$Group.1), FUN=median, na.rm = TRUE)\n\npBLUP = cbind(pBLUP, medLogProcT)\niBLUP = cbind(iBLUP, medLogInspecT)\n\n\n\n### GLMM check\n\n# So this doesn't work. So won't worry about it till later, if that is even necessary.\nmcmc.gm1 <- MCMCglmm(Accuracy ~ dom + ext + con + agr + neu + opn, \n                           random = ~Group.1,\n                           data = cz_bin_pers, family = \"multinomial\"\n                           , rcov=~idh(trait):units\n                           # , burnin = 10000 , nitt = 90000 \n                           , verbose = FALSE)\n",
    "created" : 1433943782301.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1046895914",
    "id" : "A92B4FBB",
    "lastKnownWriteTime" : 1437498212,
    "path" : "C:/Users/s1229179/GitHub/R/Budongo cognition/perf_associat.R",
    "project_path" : "perf_associat.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}