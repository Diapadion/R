{
    "contents" : "\nsetwd('./csv')\n\nsheets = list.files(pattern=\"*.csv\")\n\n# sort by animal, from here\n\n\nbehav_dat = NULL\n\n## Notes: variables need to be standardized for capitalization\n## (or can I do anything?)\n\n\n#i = 1 # David\ni = 4 # Lucy\ni = 5 # Pearl\n\nfor (i in 1:length(sheets)){\n  temp_dat = NULL\n  temp_dat = read.csv(sheets[i], skip=1, header=TRUE)\n  \n  dmtd = dim(temp_dat) # this is real useful\n  \n  # fill out chimp, day, start time\n  temp_dat$Chimp = temp_dat$Chimp[1]\n  temp_dat$Day = temp_dat$Day[1] # this may need to be further processed into a datetime object\n  temp_dat$Start.time = temp_dat$Start.time[1]\n  \n  # append total length as new column and adjust final row, Time\n  temp_dat$total.length = as.numeric(substring(temp_dat$Time[dmtd[1]],7))\n  temp_dat$Time = as.numeric(levels(temp_dat$Time))[temp_dat$Time]\n  temp_dat$Time[dmtd[1]]=temp_dat$total.length[1]\n  \n  # code time differences for all behaviors (col D)\n  for(j in 1 : dim(temp_dat)[1]-1){\n    temp_dat$behav.length[j] = temp_dat$Time[j+1]-temp_dat$Time[j]\n    # the last row has the wrong value\n  }\n  \n  # accounting for all the state behaviors\n  temp_dat$time.Forag = sum(temp_dat$behav.length[temp_dat$Fo == 'x'])\n  temp_dat$time.RestGroom = sum(temp_dat$behav.length[temp_dat$Re.Gr == 'x'])\n  temp_dat$time.Travel = sum(temp_dat$behav.length[temp_dat$Tr == 'x'])\n  temp_dat$time.Forag = sum(temp_dat$behav.length[temp_dat$Fo == 'x'])\n  temp_dat$time.Play = sum(temp_dat$behav.length[temp_dat$Pl == 'x'])\n  temp_dat$time.Di = sum(temp_dat$behav.length[temp_dat$Di == 'x'])\n\n  # AlloGrooming and Aggression are handled a little differently\n  temp_dat$time.AlloGr.give = sum(temp_dat$behav.length[temp_dat$AG == 'give'])\n  temp_dat$time.AlloGr.receive = sum(temp_dat$behav.length[temp_dat$AG == 'receive'])\n  temp_dat$time.AlloGr.mutual = sum(temp_dat$behav.length[temp_dat$AG == 'mutual'])\n  temp_dat$time.AlloGr.total = temp_dat$time.AlloGr.give+temp_dat$time.AlloGr.receive+temp_dat$time.AlloGr.mutual\n  \n  temp_dat$time.Aggress.give = sum(temp_dat$behav.length[temp_dat$Ag == 'give'])\n  temp_dat$time.Aggress.receive = sum(temp_dat$behav.length[temp_dat$Ag == 'receive'])\n  temp_dat$time.Aggress.mutual = sum(temp_dat$behav.length[temp_dat$Ag == 'mutual'])\n  temp_dat$time.Aggress.total = colSums(rbind(temp_dat$time.Aggress.give,temp_dat$time.Aggress.receive,\n                                              temp_dat$time.Aggress.mutual))\n  #summing these guys when they're full of NAs is a problem\n  \n    \n  # OoS totaling\n  if ('x' %in% temp_dat$OS){\n    temp_dat$any.OS = 'Y'\n    temp_dat$total.OS = sum(temp_dat$behav.length[temp_dat$OS=='x'])\n        \n  } else {\n    temp_dat$any.OS = 'N'\n    temp_dat$total.OS = NA    \n  }\n  \n  # where does chimp spend the longest time?  \n  areaTotals = aggregate(temp_dat$behav.length, list(temp_dat$Pod), sum)\n  areaTotals = areaTotals[areaTotals$Group.1 != '',]\n  \n  if ('1' %in% areaTotals$Group.1){\n    temp_dat$time.pod1 = areaTotals$x[areaTotals$Group.1 == '1']    \n  } else {\n    temp_dat$time.pod1=NA\n  }\n  if ('2' %in% areaTotals$Group.1){\n    temp_dat$time.pod2 = areaTotals$x[areaTotals$Group.1 == '2']    \n  } else {\n    temp_dat$time.pod2=NA\n  }\n  if ('3' %in% areaTotals$Group.1){\n    temp_dat$time.pod3 = areaTotals$x[areaTotals$Group.1 == '3']    \n  } else {\n    temp_dat$time.pod3=NA\n  }\n  if ('Outside' %in% areaTotals$Group.1){\n    temp_dat$time.out = areaTotals$x[areaTotals$Group.1 == 'Outside']    \n  } else {\n    temp_dat$time.out=NA\n  }\n    \n\n  \n  # Aggression tabulating\n  if ('x' %in% temp_dat$Ag){\n    temp_dat$any.Ag = 'Y'\n    \n  } else {\n    temp_dat$any.Ag = 'N'\n  }\n  \n  # Time spent (at all) _near_ others\n  temp_dat$total.near.others = sum(temp_dat$behav.length[temp_dat$X.Near.others.!=''])\n    \n  # Time spent sitting with conspecifics\n  temp_dat$total.with.others = sum(temp_dat$behav.length[temp_dat$Sitting.with.conspecific!=''])\n  \n  \n  # Time(s) spent grooming with conspecific\n  \n  \n  \n  ## Emotion - column R onwards\n  temp_dat$total.emotion.events = sum(temp_dat$Full.Display..hoots.only..or.fight.!='')\n  \n\n\n  \n  \n}\n\n\ntemp_dat = read.csv(sheets[i], skip=1, header=TRUE)\n\n\n\n\ntemp_dat$length = as.numeric(substring(temp_dat$Time[dim(temp_dat)[1]],7))\n\n\n\nsetwd('..')\n",
    "created" : 1429781708410.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3407128921",
    "id" : "5BE362EF",
    "lastKnownWriteTime" : 1430300288,
    "path" : "C:/Users/s1229179/git-repos/R/VADW Budongo emotion/import_process.R",
    "project_path" : "import_process.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}