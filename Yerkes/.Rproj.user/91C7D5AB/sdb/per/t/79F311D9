{
    "collab_server" : "",
    "contents" : "### chimp models\n\nlibrary(lme4)\nlibrary(MuMIn)\n\n# should I rejigger data for this purpose, to be more like the SEM data?\n\nscoutput$AL = scoutput$sys + scoutput$dias + scoutput$chol + scoutput$trig + scoutput$BMI\n\nmcAL.1 <- lmer(AL ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion\n               + age + I(age^2) + sex + (1 | chimp), \n               data = scoutput,REML=FALSE)\n\nconfint(mcAL.1, method=\"profile\")\nr.squaredGLMM(mcAL.1)\n\n\nsmeandat$AL = smeandat$sys + smeandat$dias + smeandat$chol + smeandat$trig + smeandat$BMI\n\nmcAL.1 <- lm(AL ~ age + age2 + sex\n             + Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion,\n             data = smeandat)\n\n\n\n# with mean data... big problem is missing BMI data\nmmc.sys <- lm(sys ~ age + dom + extra + cons + agree + neuro + open + sex + BMI,\n              data=meandat,na.action = na.exclude)\n\nmmc.chol <- lm(chol ~ age + dom + extra + cons + agree + neuro + open + sex + BMI,\n              data=meandat,na.action = na.exclude)\n\nmmc.trig <- lm(trig ~ age + dom + extra + cons + agree + neuro + open + sex + BMI,\n              data=meandat,na.action = na.exclude)\n# above not worth the attempt\n\n\n### lmer's, with ML\nm1a <- lmer(sys ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + BMI + sex + (1 | chimp), \n            data = scoutput,REML=FALSE)\nm1b <- lmer(dias ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + BMI + sex + (1 | chimp), \n            data = scoutput,REML=FALSE)\n\nm2.trig <- lmer(trig ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + BMI + sex + (1 | chimp), \n                data = scoutput,REML=FALSE)\n\nm2.chol <- lmer(chol ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + BMI + sex + (1 | chimp), \n                data = scoutput,REML=FALSE)\n\nm2.creat <- lmer(creatinine ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + BMI + sex + (1 | chimp), \n                 data = scoutput,REML=FALSE)\n\n\nm2.gluc <- lmer(glucose ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + BMI + sex + (1 | chimp), \n                 data = scoutput,REML=FALSE)\n\n\n# check convergence issues on this one, BMI unscaled?\nm3.BMI <- lmer(BMI ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + sex + (1 | chimp), \n               data = scoutput, REML=FALSE, control=lmerControl(optCtrl=list(maxfun=10000)))\n\ntt <- getME(m3.BMI,\"theta\")\nll <- getME(m3.BMI,\"lower\")\nmin(tt[ll==0])\n\nderivs1 <- m3.BMI@optinfo$derivs\nsc_grad1 <- with(derivs1,solve(Hessian,gradient))\nmax(abs(sc_grad1))\n\nmax(pmin(abs(sc_grad1),abs(derivs1$gradient)))\n\nsource_https <- function(url, ...) {\n  # load package\n  require(RCurl)\n  \n  # parse and evaluate each .R script\n  sapply(c(url, ...), function(u) {\n    eval(parse(text = getURL(u, followlocation = TRUE, cainfo = system.file(\"CurlSSL\", \"cacert.pem\", package = \"RCurl\"))), envir = .GlobalEnv)\n  })\n}\n#test:\nsource_https(\"https://raw.github.com/tonybreyal/Blog-Reference-Functions/master/R/bingSearchXScraper/bingSearchXScraper.R\")\n             \nafurl <- source_https(\"https://raw.githubusercontent.com/lme4/lme4/master/misc/issues/allFit.R\")\n#eval(parse(text=getURL(afurl)))\nlibrary(optimx,nloptr)\nlibrary(dfoptim)\naa <- allFit(m3.BMI)\nis.OK <- sapply(aa,is,\"merMod\")  ## only BFGS OK (is it)\naa.OK <- aa[is.OK]\nlapply(aa.OK,function(x) x@optinfo$conv$lme4$messages)\nlliks <- sort(sapply(aa.OK,logLik))\n\n# so, optimx BFGS\n\n\n# summary(aa$optimx.nlminb)\n# Anova(aa$optimx.nlminb)\n\n# confint(aa$optimx.nlminb, method='boot'\n#         #,newdata=imp_mm$imputations$imp3$BMI\n# ) \n\n\n\n### with age^2\nm1a.a2 <- lmer(sys ~ age + I(age^2) + sex + BMI +\n                 Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + (1 | chimp), \n            data = scoutput,REML=FALSE)\nm1b.a2 <- lmer(dias ~ age + I(age^2) + sex + BMI +\n                 Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + (1 | chimp), \n            data = scoutput,REML=FALSE)\n\nm2.trig.a2 <- lmer(trig ~ age + I(age^2) + sex + BMI + \n                     Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + (1 | chimp), \n                data = scoutput,REML=FALSE)\n\nm2.chol.a2 <- lmer(chol ~ age + I(age^2) + sex + BMI +\n                     Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + (1 | chimp), \n                data = scoutput,REML=FALSE)\n\nm2.creat.a2 <- lmer(creatinine ~ age + I(age^2) + sex + BMI +\n                      Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + (1 | chimp), \n                 data = scoutput,REML=FALSE)\n\n# check convergence issues on this one, BMI unscaled?\nlibrary(optimx)\nm3.BMI.a2 <- lmer(BMI ~ age + I(age^2) + sex + Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + (1 | chimp), \n               data = scoutput, REML=FALSE, control=lmerControl(optimizer = \"optimx\", \n                                                                optCtrl=list(maxfun=1000, \n                                                                             method='nlminb')))\n\nconfint(m3.BMI.a2, method='Wald')\n\ntt <- getME(m3.BMI.a2,\"theta\")\nll <- getME(m3.BMI.a2,\"lower\")\nmin(tt[ll==0])\n\nderivs1 <- m3.BMI.a2@optinfo$derivs\nsc_grad1 <- with(derivs1,solve(Hessian,gradient))\nmax(abs(sc_grad1))\n\nmax(pmin(abs(sc_grad1),abs(derivs1$gradient)))\n\naa2 <- allFit(m3.BMI.a2)\nis2.OK <- sapply(aa2,is,\"merMod\")   ## this time around, seems no need to refit\naa2.OK <- aa2[is.OK]\nlapply(aa2.OK,function(x) x@optinfo$conv$lme4$messages)\nlliks <- sort(sapply(aa2.OK,logLik))\n\n\n\n### imputation\n\ntestimp = imp_mean$imputations$imp2$BMI\nimp.scoutput <- cbind(scoutput, s(testimp))\ncolnames(imp.scoutput)[38]<-'impBMI'\n#imp.scoutput$s(testimp)\n### the above isn't necessary for models\n### (thanks to Zelig)\n\nlibrary(Amelia)\namel_out <- output[,c(-4,-(15:29),-(31:35))]\nimp_out = amelia(amel_out,idvars=c(1,4,17), m=10,p2s=0)\n\nlibrary(Zelig)\nzim.BMI3 = zelig(BMI ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + sex + age2, \n                             data = imp_mean$imputations, model=\"ls\")\n\nlibrary(ZeligMultilevel)\nzimm3.BMI = zelig(BMI ~ dom + open + agree + cons + neuro + extra\n                  + age + sex + age2 + tag(1 | chimp), \n                  data = imp_out$imputations, model=\"ls.mixed\")\n\nimp_save <- imp_mm$imputations$imp7\n# this looks like it might not work, mm style\n\n# these are spacious\nrm(zim.BMI3,zimm3.BMI)\n\n\n\n### some Bayesian mucking about\nlibrary(blme)\nb.m1a.a2 <- blmer(sys ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + BMI + sex + age2 + (1 | chimp), \n               data = scoutput,REML=FALSE)\n\nlibrary(optimx)\nb.m3.BMI.a2 <- blmer(BMI ~ Dominance + Openness + Agreeableness + Conscientiousness + Neuroticism + Extraversion + age + sex + age2 + (1 | chimp), \n                  data = scoutput, REML=FALSE, control=lmerControl(optimizer = \"optimx\", \n                                                                   optCtrl=list(maxfun=1000, \n                                                                                #method='nlminb'\n                                                                                method='L-BFGS-G'\n                                                                                )))",
    "created" : 1486045739142.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3655843309",
    "id" : "79F311D9",
    "lastKnownWriteTime" : 1487347418,
    "last_content_update" : 1487347418852,
    "path" : "C:/Users/s1229179/GitHub/R/Yerkes/Drew version/chimpRegs.R",
    "project_path" : "Drew version/chimpRegs.R",
    "properties" : {
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}