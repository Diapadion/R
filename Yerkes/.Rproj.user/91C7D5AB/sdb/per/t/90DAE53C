{
    "collab_server" : "",
    "contents" : "### Creatine-weight pseudo replication, inspired by ME Thompson et al. 2016\n\n# attempting to use 'fullcast' df\n\n\n\n# retain:\n# Creatine\n# Personality\n# Weights\n# age , time\n\n\n# cw.df1 <- fullcast[,c(1,2,5,47,48,95:100)]\n# \n# cw.df1 <- cw.df1[!(is.na(cw.df1$Creatine) & is.na(cw.df1$weight)),]\n# # Agatha: beware dumb shit date entries\n\ncw.df1 <- dmdob[,c(2,119,4,123,7,33,59,85,268,271,274,322)]\n\ncolnames(cw.df1) <- c('chimp','sex','Year4','age','c4','c3','c2','c1','w3','w2','w1','H.sq')\n\ncw.df1$H.sq = 1/cw.df1$H.sq\n\ncw.df1 <- cw.df1[!(is.na(cw.df1$w3)),]\n\ncw.df1[,4:12] <- scale(cw.df1[,4:12])\n\n### bigger df for stage 2\ncwp.df1 <- data.frame(dmdob[,c(2,119,4,123,7,33,59,85,268,271,274,322,156)], compare_data)\n\ncolnames(cwp.df1) <-  c('chimp','sex','Year4','age','c4','c3','c2','c1','w3','w2','w1','H.sq',\n                       'depr','Dom','Ext','Con','Agr','Neu','Opn')\n\ncwp.df1[,4:19] <- scale(cwp.df1[,4:19])\n\ncwp.df1 <- cwp.df1[!(is.na(cwp.df1$c4)),]\n\n###\n\n# Let's start with some basic correlations\nlibrary(psych)\n\nslope  <-  function(x){\n  if(all(is.na(x)))\n    # if x is all missing, then lm will throw an error that we want to avoid\n    return(NA)\n  else\n    return(coef(lm(I(1:length(x))~x))[2])\n}\n\ncwp.df1$b.c <- apply(cwp.df1[,c('c4','c3','c2','c1')],1,slope)\ncwp.df1$w.c <- apply(cwp.df1[,c('w3','w2','w1')],1,slope)\n\ncorPlot(cwp.df1[,4:21])\n\ndf.cor <- data\ncor.test(apply(cwp.df1[,9:11],1,mean,na.rm=TRUE), apply(cwp.df1[,5:8],1,mean,na.rm=TRUE))\ncor.test(apply(cwp.df1[,9:11],1,mean,na.rm=TRUE)/cwp.df1$H.sq, apply(cwp.df1[,5:8],1,mean,na.rm=TRUE))\n\ncor.test(cwp.df1$Dom, apply(cwp.df1[,5:8],1,mean,na.rm=TRUE)) # *\ncor.test(cwp.df1$Ext, apply(cwp.df1[,5:8],1,mean,na.rm=TRUE))\ncor.test(cwp.df1$Con, apply(cwp.df1[,5:8],1,mean,na.rm=TRUE)) # **        \ncor.test(cwp.df1$Agr, apply(cwp.df1[,5:8],1,mean,na.rm=TRUE)) # *       \ncor.test(cwp.df1$Neu, apply(cwp.df1[,5:8],1,mean,na.rm=TRUE))\ncor.test(cwp.df1$Opn, apply(cwp.df1[,5:8],1,mean,na.rm=TRUE))\ncor.test(cwp.df1$depr, apply(cwp.df1[,5:8],1,mean,na.rm=TRUE)) # *** ...\n\n\nlibrary(lavaan)\nlibrary(semPlot)\nlibrary(semTools)\nlibrary(blavaan)\n\n#library(bbmle)\n\n\n# a linear growth model with a time-varying covariate\nmod.1 <- '\n# intercept and slope with fixed coefficients\ni =~ 1*w3 + 1*w2 + 1*w1\ns =~ 1*w3 + 2*w2 + 3*w1\n\ni.c =~ 1*c4 + 1*c3 + 1*c2 + 1*c1\ns.c =~ 0*c4 + 1*c3 + 2*c2 + 3*c1\n# regressions\n#i ~ x1 + x2\n#s ~ x1 + x2\n# time-varying covariates\n#w1 ~ c2\n#w2 ~ c3\n#w3 ~ c4\n#t4 ~ c4\n\n# regs for earlier c LVs onto later w LVs\ni ~ i.c + s.c + age + sex\ns ~ i.c + s.c + age + sex\n'\nfit <- growth(mod.1, data = cw.df1, missing=\"ML\")\nsemPaths(fit, whatLabels = 'par')\nsummary(fit)\nfitMeasures(fit, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",'srmr'))\n\nmod_ind <- modificationindices(fit)\nhead(mod_ind[order(mod_ind$mi, decreasing=TRUE), ], 10)\n\n# Base model, modify as required\n# \nmod.1.x <- '\n# intercept and slope with fixed coefficients\ni.c =~ 1*c4 + 1*c3 + 1*c2 + 1*c1\ns.c =~ 0*c4 + 1*c3 + 2*c2 + 3*c1\n\nWt =~ w3 + w2 + w1 \n\n# regs for earlier c LVs onto later w LV\nWt~ i.c + s.c\nWt ~ age + sex # last two are \"new\"\n'\nfit1x <- lavaan(mod.1.x, data = cw.df1, missing=\"ML\", model.type='growth',\n               int.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, \n               auto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.th = TRUE, auto.delta = TRUE, \n               auto.cov.y = TRUE)\n\nsemPaths(fit1x, what='mod', whatLabels = 'par')\nsummary(fit1x)\nfitMeasures(fit1x, baseline.model = fit, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",'srmr'))\n\n\nmod.1.y <- '\n# intercept and slope with fixed coefficients\nc =~ c4 + c3 + c2 + c1\n\nWt =~ w3 + w2 + w1 \n\n# regs for earlier c LVs onto later w LV\nWt~ c\nWt ~ age + sex # last two are \"new\"\n'\nfit1y <- lavaan(mod.1.y, data = cw.df1, missing=\"ML\", model.type='growth',\n                int.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, \n                auto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.th = TRUE, auto.delta = TRUE, \n                auto.cov.y = TRUE)\n\nsemPaths(fit1y, what='mod', whatLabels = 'par')\nsummary(fit1y)\nfitMeasures(fit1y, baseline.model = fit, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",'srmr'))\n\nanova(fit, fit1y)\n\nBICtab(fit,fit1x,fit1y,weights=TRUE, delta=TRUE, base=TRUE, logLik=TRUE, sort=TRUE)\n\ncompareFit(fit, fit1x, fit1y)\n\n# looks like the original dual slope model is best\n\n\n\n\n# changing weight into a latent variable, and formulating BMI from it\nmod.2 <- '\n# intercept and slope with fixed coefficients\ni =~ 1*w3 + 1*w2 + 1*w1\ns =~ 1*w3 + 2*w2 + 3*w1\n\ni.c =~ 1*c4 + 1*c3 + 1*c2 + 1*c1\ns.c =~ 1*c4 + 2*c3 + 3*c2 + 4*c1\n\ni.BMI =~ H.sq*i\ns.BMI =~ H.sq*s\n\n# regs for earlier c LVs onto later w LVs\ni.BMI ~ i.c + s.c + age + sex\ns.BMI ~ i.c + s.c + age + sex\n\n\n# regs for earlier c LVs onto later w LV\n# s ~ s.c\n# i ~ i.c\n'\nfit2 <- lavaan(mod.2, data = cw.df1, missing=\"ML\", model.type='growth',\n              int.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, \n              auto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.th = TRUE, auto.delta = TRUE, \n              auto.cov.y = TRUE)\n\nsemPaths(fit2, what='mod', whatLabels = 'par')\nsummary(fit2)\nfitMeasures(fit2, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\ncompareFit(fit, fit2)\n# BMI doesn't seem to fit the model better\n\n\nbfit2.1 <- blavaan(mod.2, data = cw.df1, missing=\"ML\", model.type='growth',\n               int.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, \n               auto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.th = TRUE, auto.delta = TRUE, \n               auto.cov.y = TRUE)\nmod.2.2 <- '\n# intercept and slope with fixed coefficients\ni.c =~ 1*c4 + 1*c3 + 1*c2 + 1*c1\ns.c =~ 0*c4 + 1*c3 + 2*c2 + 3*c1\n\nWt =~ w3 + w2 + w1\n\n# regressions\n#i ~ x1 + x2\n#s ~ x1 + x2\n# time-varying covariates\n\n# regs for earlier c LVs onto later w LV\nWt~ i.c + 0*s.c\n'\n\nmod.2.3 <- '\n# intercept and slope with fixed coefficients\ni.c =~ 1*c4 + 1*c3 + 1*c2 + 1*c1\ns.c =~ 0*c4 + 1*c3 + 2*c2 + 3*c1\n\nWt =~ w3 + w2 + w1\n\n# regressions\n#i ~ x1 + x2\n#s ~ x1 + x2\n# time-varying covariates\n\n# regs for earlier c LVs onto later w LV\nWt~ 0*s.c + 0*i.c\n'\nfit2.2 <- lavaan(mod.2.2, data = cw.df1, missing=\"ML\", model.type='growth',\n                   int.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, \n                   auto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.th = TRUE, auto.delta = TRUE, \n                   auto.cov.y = TRUE)\nfit2.3 <- lavaan(mod.2.3, data = cw.df1, missing=\"ML\", model.type='growth',\n                 int.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, \n                 auto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.th = TRUE, auto.delta = TRUE, \n                 auto.cov.y = TRUE)\nsemPaths(fit2.3)\n\n\nmod.2.X <- '\n# just the weight LV\nWt =~ w3 + w2 + w1\n'\nbfit2.X <- blavaan(mod.2.X, data = cw.df1, missing=\"ML\", model.type='growth',\n                   int.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, \n                   auto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.th = TRUE, auto.delta = TRUE, \n                   auto.cov.y = TRUE)\nsummary(fit)\n\nfitMeasures(fit)\nfitMeasures(fit, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\"))\nfitMeasures(fit2.2, baseline.model = fit,c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\"))\nfitMeasures(fit2.3, baseline.model = fit,c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\"))\n# I'm not sure this is all being done correctly\n\n\n#fitMeasures(bfit2.1)\n\n\n# add personality?\n\n\n\n\n# not a growth model anymore\nmod.3 <- '\n# intercept and slope with fixed coefficients\ni.c =~ c4 + c3 + c2 + c1\n\nWt =~ w3 + w2 + w1\n\n# regressions\n#i ~ x1 + x2\n#s ~ x1 + x2\n# time-varying covariates\n\n\n# regs for earlier c LVs onto later w LV\nWt ~ i.c\n'\n# not currently functional\nfit <- lavaan(mod.3, data = cw.df1, missing=\"ML\",model.type='sem')\nsemPaths(fit)\nsummary(fit)\n\nfit <- growth(mod.3, data = cw.df1, missing=\"ML\")\n\n\n\n\n### Personality ###\n\n# \n# dmdob$chimp_Dom_CZ <-\n#   (fulldata$dom.z-fulldata$subm.z-fulldata$depd.z+fulldata$indp.z-fulldata$fear.z+fulldata$decs.z-fulldata$tim.z-fulldata$caut.z+\n#      fulldata$intll.z+fulldata$pers.z+fulldata$buly.z+fulldata$stngy.z+40)/12\n# \n# dmdob$chimp_Ext_CZ <-\n#   (-fulldata$sol.z-fulldata$lazy.z+fulldata$actv.z+fulldata$play.z+fulldata$soc.z-fulldata$depr.z+fulldata$frdy.z+fulldata$affc.z+fulldata$imit.z+24)/9\n# \n# dmdob$chimp_Con_CZ <-\n#   (-fulldata$impl.z-fulldata$defn.z-fulldata$reckl.z-fulldata$errc.z-fulldata$irri.z+fulldata$pred.z-fulldata$aggr.z-fulldata$jeals.z-fulldata$dsor.z+64)/9\n# \n# dmdob$chimp_Agr_CZ <-\n#   (fulldata$symp.z+fulldata$help.z+fulldata$sens.z+fulldata$prot.z+fulldata$gntl.z)/5\n# \n# dmdob$chimp_Neu_CZ <-\n#   (-fulldata$stbl.z+fulldata$exct.z-fulldata$unem.z+16)/3\n# \n# dmdob$chimp_Opn_CZ <-\n#   (fulldata$inqs.z+fulldata$invt.z)/2\n\n# cwp.df1 <- data.frame(dmdob[,c(2,156,4,7,33,59,85,268,271,274,123,119)], compare_data)\n# \n# colnames(cwp.df1) <- c('chimp','sex','Year4','c4','c3','c2','c1','w3','w2','w1','age',\n#                       'depr','Dom','Ext','Con','Agr','Neu','Opn')\n# \n# cwp.df1[,4:18] <- scale(cwp.df1[,4:18])\n\n# cw.df1 <- cw.df1[!(is.na(cw.df1$w3)),] #?\n\n\nmp.1 <- '\n# intercept and slope with fixed coefficients\ni =~ 1*w3 + 1*w2 + 1*w1\ns =~ 1*w3 + 2*w2 + 3*w1\n\ni.c =~ 1*c4 + 1*c3 + 1*c2 + 1*c1\ns.c =~ 0*c4 + 1*c3 + 2*c2 + 3*c1\n\n# regs for earlier c LVs onto later w LVs\ni ~ i.c + s.c + age + sex\ns ~ i.c + s.c + age + sex + Ext\n\n# regressions\n#i.c ~ Dom + Ext + Con + Agr + Neu + Opn\n#s ~ Ext #+ Con + Agr + Neu + Opn + Dom\n'\n\nfit.p1 = lavaan(mp.1, data = cwp.df1, missing=\"ML\", model.type='growth',\nint.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, \nauto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.th = TRUE, auto.delta = TRUE, \nauto.cov.y = TRUE)\n\nsemPaths(fit.p1,  what='mod', whatLabels = 'par')\n\nsummary(fit.p1)\n\nfitMeasures(fit.p1, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\ncompareFit(fit, fit.p1)\n\nmod_ind <- modificationindices(fit.p1)\nhead(mod_ind[order(mod_ind$mi, decreasing=TRUE), ], 10)\nsubset(mod_ind[order(mod_ind$mi, decreasing=TRUE), ], mi > 5)\n\n\nmp.1.medi <- ' # a correctly defined mediator\n# intercept and slope with fixed coefficients\ni.c =~ 1*c4 + 1*c3 + 1*c2 + 1*c1\ns.c =~ 0*c4 + 1*c3 + 2*c2 + 3*c1\n\nWt =~ w3 + w2 + w1\n\n# direct effect\nWt ~ i.c + c*s.c + age + sex\n\n# mediator\nExt ~ a*s.c\nWt ~ b*Ext\n# indirect effect (a*b)\nab := a*b\n# total effect\ntotal := c + (a*b)\n\n# time-varying covariates\n\n# # setting covariances\n# Dom ~~ 0*Ext\n# Dom ~~ 0*Con\n# Dom ~~ 0*Agr\n# Dom ~~ 0*Neu\n# Dom ~~ 0*Opn\n# Ext ~~ 0*Con\n# Ext ~~ 0*Agr\n# Ext ~~ 0*Neu\n# Ext ~~ 0*Opn\n# Con ~~ 0*Agr\n# Con ~~ 0*Neu\n# Con ~~ 0*Opn\n# Agr ~~ 0*Neu\n# Agr ~~ 0*Opn\n# Neu ~~ 0*Opn\n'\n\nfit.p2 = lavaan(mp.1.medi, data = cwp.df1, missing=\"ML\", model.type='growth',\n                int.ov.free = TRUE, int.lv.free = FALSE, auto.fix.first = TRUE, \n                auto.fix.single = TRUE, auto.var = TRUE, auto.cov.lv.x = TRUE, auto.th = TRUE, auto.delta = TRUE, \n                auto.cov.y = TRUE)\n\nsemPaths(fit.p2,  what='mod', whatLabels = 'par')\n\nsummary(fit.p2)\n\nfitMeasures(fit, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\"))\nfitMeasures(fit.p2, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\"))\n\nmod_ind <- modificationindices(fit)\nhead(mod_ind[order(mod_ind$mi, decreasing=TRUE), ], 10)\nsubset(mod_ind[order(mod_ind$mi, decreasing=TRUE), ], mi > 5)\n\n\n### Regularized SEM testing\n\nlibrary(regsem)\n\nHS <- data.frame(scale(HolzingerSwineford1939[,7:15]))\nmod <- '\nf =~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9\n'\noutt = cfa(mod,HS)\n\ncv.out = cv_regsem(outt,type=\"ridge\",gradFun=\"none\",n.lambda=100)\n\n\n\nrfit1 = regsem(fit)\ncvfit1 = invisible(cv_regsem(fit1x, mult.start = F, \n                             missing='fiml', gradFun='none'))\n\nsummary(cvfit1)\n\nfit_indices(rfit1)\n\n### also qgraph\n\nlibrary(qgraph)\n\n",
    "created" : 1480088950779.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "954436416",
    "id" : "90DAE53C",
    "lastKnownWriteTime" : 1474022593,
    "last_content_update" : 1474022593,
    "path" : "C:/Users/s1229179/GitHub/R/Yerkes/creatineSEMtest.R",
    "project_path" : "creatineSEMtest.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}