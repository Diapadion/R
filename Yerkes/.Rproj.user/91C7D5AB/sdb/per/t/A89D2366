{
    "collab_server" : "",
    "contents" : "### following on from make data.R,\n### these are DMA additions that\n### build a data set with all values\n### from the observation sheet\n\n# i.e. its a giant data.frame full of NAs\n# utility is questionable\n\nconst <- NULL\n# some vars like personality, parentage, DoB,\n# stay constant, no matter the measurement point.\nnames <- read.csv(\"matchNameBDates.csv\")\nconst$chimp = names$final\n\n# removes names with no DoB (i.e. NAs)\nconst$chimp = const$chimp[!is.na(names$DoB)]\n\n# get all the DoB's in the same format\nconst$DoB = names$DoB[!is.na(names$DoB)]\n# i.e. dd/mm/yyyy\nconst$DoB = as.Date(const$DoB, format=\"%d/%m/%Y\")\n\n### coercing the composite full data file to remove junk \n#final_data$chimp %in% const$chimp # this logically select the values common to both names lists\nsData <- final_data[final_data$chimp %in% const$chimp,]\n\n# parentage\n# merging dame, sire; maternity, paternity\n### TODO\n\n\n# momage = the age of the mother at the chimp's birth\nconst$MomAge = sData$momage\n\n# group size\nconst$GroupSize <- ifelse(!is.na(sData$Group.size.x), sData$Group.size.x,\n                          ifelse(!is.na(sData$Group.size.y), sData$Group.size.y, NA))           \n\n# sex\nconst$sex <- sData$sex\n\n# personality - individual adjectives\n# const$fear  <- sData$fear.z\n# const$pers   <- sData$pers.z \n# const$caut   <- sData$caut.z \n# const$stbl   <- sData$stbl.z \n# const$aut   <- sData$aut.z \n# const$stngy  <- sData$stngy.z\n# const$jeals  <- sData$jeals.z\n# const$reckl  <- sData$reckl.z\n# const$soc   <- sData$soc.z \n# const$tim   <- sData$tim.z \n# const$symp  <-  sData$symp.z \n# const$play  <-  sData$play.z \n# const$sol  <-  sData$sol.z \n# const$actv   <- sData$actv.z \n# const$help   <- sData$help.z \n# const$buly   <- sData$buly.z \n# const$aggr  <-  sData$aggr.z \n# const$manp  <-  sData$manp.z \n# const$gntl  <-  sData$gntl.z \n# const$affc   <- sData$affc.z \n# const$exct   <- sData$exct.z \n# const$impl   <- sData$impl.z \n# const$inqs   <- sData$inqs.z \n# const$subm   <- sData$subm.z \n# const$depd   <- sData$depd.z \n# const$irri   <- sData$irri.z \n# const$pred   <- sData$pred.z \n# const$decs   <- sData$decs.z \n# const$depr   <- sData$depr.z \n# const$sens   <- sData$sens.z \n# const$defn   <- sData$defn.z \n# const$intll  <- sData$intll.z\n# const$prot   <- sData$prot.z \n# const$invt   <- sData$invt.z \n# const$clmy   <- sData$clmy.z \n# const$errc   <- sData$errc.z \n# const$frdy   <- sData$frdy.z \n# const$lazy   <- sData$lazy.z \n# const$dsor   <- sData$dsor.z \n# const$unem   <- sData$unem.z \n# const$imit   <- sData$imit.z \n# const$indp <-  sData$indp.z\n\nconst$fear  <- apply(cbind(sData$fear.x,sData$fear.y),1,mean,na.rm=TRUE)\nconst$dom <- apply(cbind(sData$dom.x,sData$dom.y),1,mean,na.rm=TRUE)\nconst$pers  <- apply(cbind(sData$pers.x,sData$pers.y),1,mean,na.rm=TRUE)\nconst$caut  <- apply(cbind(sData$caut.x,sData$caut.y),1,mean,na.rm=TRUE)\nconst$stbl  <- apply(cbind(sData$stbl.x,sData$stbl.y),1,mean,na.rm=TRUE)\nconst$aut   <- apply(cbind(sData$aut.x,sData$aut.y),1,mean,na.rm=TRUE)\nconst$stngy  <- apply(cbind(sData$stngy.x,sData$stngy.y),1,mean,na.rm=TRUE)\nconst$jeals  <- apply(cbind(sData$jeals.x,sData$jeals.y),1,mean,na.rm=TRUE)\nconst$reckl  <- apply(cbind(sData$reckl.x,sData$reckl.y),1,mean,na.rm=TRUE)\nconst$soc   <- apply(cbind(sData$soc.x,sData$soc.y),1,mean,na.rm=TRUE)\nconst$tim   <- apply(cbind(sData$tim.x,sData$tim.y),1,mean,na.rm=TRUE)\nconst$symp  <- apply(cbind(sData$symp.x,sData$symp.y),1,mean,na.rm=TRUE)\nconst$play <- apply(cbind(sData$play.x,sData$play.y),1,mean,na.rm=TRUE)\nconst$sol   <- apply(cbind(sData$sol.x,sData$sol.y),1,mean,na.rm=TRUE)\nconst$actv  <- apply(cbind(sData$actv.x,sData$actv.y),1,mean,na.rm=TRUE)\nconst$help  <- apply(cbind(sData$help.x,sData$help.y),1,mean,na.rm=TRUE)\nconst$buly  <- apply(cbind(sData$buly.x,sData$buly.y),1,mean,na.rm=TRUE)\nconst$aggr  <- apply(cbind(sData$aggr.x,sData$aggr.y),1,mean,na.rm=TRUE)\nconst$manp  <- apply(cbind(sData$manp.x,sData$manp.y),1,mean,na.rm=TRUE)\nconst$gntl  <- apply(cbind(sData$gntl.x,sData$gntl.y),1,mean,na.rm=TRUE)\nconst$affc  <- apply(cbind(sData$affc.x,sData$affc.y),1,mean,na.rm=TRUE)\nconst$exct  <- apply(cbind(sData$exct.x,sData$exct.y),1,mean,na.rm=TRUE)\nconst$impl  <- apply(cbind(sData$impl.x,sData$impl.y),1,mean,na.rm=TRUE)\nconst$inqs  <- apply(cbind(sData$inqs.x,sData$inqs.y),1,mean,na.rm=TRUE)\nconst$subm  <- apply(cbind(sData$subm.x,sData$subm.y),1,mean,na.rm=TRUE)\nconst$depd  <- apply(cbind(sData$depd.x,sData$depd.y),1,mean,na.rm=TRUE)\nconst$irri  <- apply(cbind(sData$irri.x,sData$irri.y),1,mean,na.rm=TRUE)\nconst$pred  <- apply(cbind(sData$pred.x,sData$pred.y),1,mean,na.rm=TRUE)\nconst$decs  <- apply(cbind(sData$decs.x,sData$decs.y),1,mean,na.rm=TRUE)\nconst$depr  <- apply(cbind(sData$depr.x,sData$depr.y),1,mean,na.rm=TRUE)\nconst$sens  <- apply(cbind(sData$sens.x,sData$sens.y),1,mean,na.rm=TRUE)\nconst$defn  <- apply(cbind(sData$defn.x,sData$defn.y),1,mean,na.rm=TRUE)\nconst$intll  <- apply(cbind(sData$intll.x,sData$intll.y),1,mean,na.rm=TRUE)\nconst$prot  <- apply(cbind(sData$prot.x,sData$prot.y),1,mean,na.rm=TRUE)\nconst$invt  <- apply(cbind(sData$invt.x,sData$invt.y),1,mean,na.rm=TRUE)\nconst$clmy  <- apply(cbind(sData$clmy.x,sData$clmy.y),1,mean,na.rm=TRUE)\nconst$errc  <- apply(cbind(sData$errc.x,sData$errc.y),1,mean,na.rm=TRUE)\nconst$frdy  <- apply(cbind(sData$frdy.x,sData$frdy.y),1,mean,na.rm=TRUE)\nconst$lazy  <- apply(cbind(sData$lazy.x,sData$lazy.y),1,mean,na.rm=TRUE)\nconst$dsor  <- apply(cbind(sData$dsor.x,sData$dsor.y),1,mean,na.rm=TRUE)\nconst$unem  <- apply(cbind(sData$unem.x,sData$unem.y),1,mean,na.rm=TRUE)\nconst$imit <- apply(cbind(sData$imit.x,sData$imit.y),1,mean,na.rm=TRUE)\nconst$indp <- apply(cbind(sData$indp.x,sData$indp.y),1,mean,na.rm=TRUE)\n\n# domains\nconst$chimp_Dom_CZ <-\n  (const$dom-const$subm-const$depd+const$indp-const$fear+const$decs-const$tim-const$caut+\n     const$intll+const$pers+const$buly+const$stngy+40)/12\n\nconst$chimp_Ext_CZ <-\n  (-const$sol-const$lazy+const$actv+const$play+const$soc-const$depr+const$frdy+const$affc+const$imit+24)/9\n\nconst$chimp_Con_CZ <-\n  (-const$impl-const$defn-const$reckl-const$errc-const$irri+const$pred-const$aggr-const$jeals-const$dsor+64)/9\n\nconst$chimp_Agr_CZ <-\n  (const$symp+const$help+const$sens+const$prot+const$gntl)/5\n\nconst$chimp_Neu_CZ <-\n  (-const$stbl+const$exct-const$unem+16)/3\n\nconst$chimp_Opn_CZ <-\n  (const$inqs+const$invt)/2\n\n\n## other outside vars we want to keep constant\n\n# Mortality\n#sData <- final_data[final_data$chimp %in% const$chimp]\n# we can still use 'final_data' and thus sData from this\n\nconst$alive <- sData$status\n\n\n# Height\nconst$height <- sData$Height..m.\n\n\n# BMI = W / (H [in m])^2\n\n\n# VERY IMPORTANT\n# does the personality+ matrix (after DoB filtering) contain the entire \n# union of chimps from the subsidiary data files?\n\n\n### and now the time dependent observations\n\n\n## date nomralizing bs\n# blood chemistry: mm/dd/??yy\n# hematology: dd/mm/yyyy\n# height: mm/dd/yyyy\n# metabolic: mm/dd/??yy\n\n\n## Blood chemistry\n# split up measurements by time point\na = cbind(blood[,2],blood[,3:28])#),\nb = cbind(blood[,2],blood[,29:54])#),\nc = cbind(blood[,2],blood[,55:80])#),\nd = cbind(blood[,2],blood[,81:106])#))\n\ncolnames(a) <- c( \"chimp\",   \"date\",         \"Glucose\",       \"BUN\"  ,         \"Creatine\"   ,  \"Protein\"    ,   \"Albumn\"       ,\n                  \"Bilirubn\"   ,   \"alkphos\"      , \"sgpt\"   ,       \"sgot\"    ,      \"cholesterol\" ,  \"calcium\"    ,   \"phosphate\"   , \n                  \"sodium\"   ,     \"potassium\"   ,  \"chloride\"     , \"ag_ratio\"    ,  \"bc_ratio\"   ,   \"globulin\"  ,    \"lipase\" ,      \n                  \"amylase\"     ,  \"triglycerides\" ,\"cpk\"    ,       \"ggtp\"     ,     \"magnesium\"   ,  \"osmolal\")      \ncolnames(b) <- colnames(a)\ncolnames(c) <- colnames(a)\ncolnames(d) <- colnames(a)\n\nlongBlood <- as.data.frame(rbind(a,b,c,d))\nyeart <- NULL\nfor (i in 1:(dim(longBlood)[1])){\n  yeart[i] <- longBlood$date[i]\n  if(nchar(yeart[i])==10){\n    yeart[i] <- as.Date(yeart[i],format = \"%m/%d/%Y\")\n  }\n  else yeart[i] <- as.Date(yeart[i],format = \"%m/%d/%y\")\n}\nclass(yeart) <- \"Date\"\nlongBlood$date <- yeart\n\n\n## Hematology\n# split up measurements by time point\n# \na = cbind(hematology[,1],hematology[,11:21])\nb = cbind(hematology[,1],hematology[,22:32])\nc = cbind(hematology[,1],hematology[,33:43])\n\ncolnames(a) <- c('chimp','date',colnames(hematology)[12:21])\ncolnames(b) <- colnames(a)\ncolnames(c) <- colnames(a)\n\nlongHem <- as.data.frame(rbind(a,b,c))\nyeart <- NULL\nfor (i in 1:(dim(longHem)[1])){\n  yeart[i] <- longHem$date[i]\n  yeart[i] <- as.Date(yeart[i],format = \"%d/%m/%Y\")\n}\nclass(yeart) <- \"Date\"\nlongHem$date <- yeart\n\n\n## Height, Weight, BMI\n# a <- NULL\n# b <- NULL\n# c <- NULL\na = cbind(height[,2],height[,3:11])\nb = cbind(height[,2],height[,14:22])\nc = cbind(height[,2],height[,25:33])\n\ncolnames(a) <- c('chimp','date',colnames(height[,4:11]))\ncolnames(b) <- colnames(a)\ncolnames(c) <- colnames(a)\n\nlongHeight <- as.data.frame(rbind(a,b,c))\n\nyeart <- NULL\nfor (i in 1:(dim(longHeight)[1])){\n  yeart[i] <- longHeight$date[i]\n  yeart[i] <- as.Date(yeart[i],format = \"%m/%d/%Y\")\n  \n}\nclass(yeart) <- \"Date\"\nlongHeight$date <- yeart\n\n\n\n## Metabolic, blood pressure\na = cbind(blood_pressure[,1],blood_pressure[,4:6])\nb = cbind(blood_pressure[,1],blood_pressure[,7:9])\nc = cbind(blood_pressure[,1],blood_pressure[,10:12])\n\ncolnames(a) <- c('chimp','date','BP','weight')\ncolnames(b) <- colnames(a)\ncolnames(c) <- colnames(a)\n\nlongMetab <- as.data.frame(rbind(a,b,c))\n\nyeart <- NULL\nfor (i in 1:(dim(longMetab)[1])){\n  yeart[i] <- longMetab$date[i]\n  if(nchar(yeart[i])==10){\n    yeart[i] <- as.Date(yeart[i],format = \"%m/%d/%Y\")\n  }\n  else yeart[i] <- as.Date(yeart[i],format = \"%m/%d/%y\")\n}\nclass(yeart) <- \"Date\"\nlongMetab$date <- yeart\n\n#longMetab <- as.data.frame(cbind(longMetab[,1],sapply(longMetab[,2],as.character),longMetab[,3:4]), stringsAsFactors=FALSE)\n\n\n\n\n\n\n\n# based on our other height data, going to want to calculate more BMI datapoints\n\n# if, is that possible?\n\n\n\n#fixed  #???\n\n\n\n\n\n### putting all the data together\n\n# these don't work alone...\n#const = do.call(rbind.data.frame,const)\n#constant <- ldply(const, data.frame)\n#constant <- as.data.frame(const\n#                         , row.names = const$chimp)\n\n\n\n\n# only form the time points by BM measurements\n\n# for now\n# assume height is constant \n# and that personality is constant\n\n\nfullcast <- \n  merge(\n    merge(\n      merge(\n        merge(longBlood, longHem, by=c('chimp','date'), all = TRUE)\n        , longHeight, by=c('chimp','date'), all = TRUE)\n      , longMetab, by=c('chimp','date'), all = TRUE)\n    , const, by=c('chimp'), all = TRUE)\n# there are a bunch of NA filled rows that result from this (for certain chimps)\n# this is not a problem, it is an artifact of how the 'heights' data needed\n# to be processed.\n\nfullcast <- fullcast[!is.na(fullcast$date),]\n# there, fixed\n\n\n\n\n### after merging all the data together, we want to make a new column for age\n#   based on the DoB and the time point at which the obv was made\n\n\n# we need to convert the date to the right format to do this\n\nfullcast['ageDays'] <- NA\n#fullcast$ageDays <- difftime(fullcast$date, fullcast$DoB, units = 'days')\nfullcast$ageDays <- as.numeric(fullcast$date) - as.numeric(fullcast$DoB)\n\n\n### \n# and we need to separate out the systolic and diastolic blood pressures and\n# putting them in their own vars\n\nfullcast[\"systolic\"] <- NA\nfullcast[\"diastolic\"] <- NA\n\nbps <- strsplit(as.character(fullcast$BP),\"[/]\")\n\nfor (i in 1:dim(fullcast)[1]){\n  bps <- strsplit(as.character(fullcast$BP),\"[/]\")\n  if (!is.na(bps)[[i]]){\n    fullcast$systolic[i] = as.numeric(bps[[i]][1])\n    fullcast$diastolic[i] = as.numeric(bps[[i]][2]) \n    \n  }\n  else{\n    fullcast$systolic[i] = NA\n    fullcast$diastolic[i] = NA    \n  }\n}\n\n\n\n\n### an alternative way to categorize these is purely by age,\n### specifically, age when the blood pressure is measured\n\n# (Survey 1)\n\nbuff <- merge(const, a[1:2], all=TRUE)   # remember, 'a' is the first survey of metabolics...\ncolnames(buff)[55] <- 'age'\n\n# some date formatting formalities\nyeart <- NULL\nfor (i in 1:(dim(buff)[1])){\n  yeart[i] <- buff$age[i]\n  if(nchar(yeart[i])==10){\n    yeart[i] <- as.Date(yeart[i],format = \"%m/%d/%Y\")\n  }\n  else yeart[i] <- as.Date(yeart[i],format = \"%m/%d/%y\")\n}\nclass(yeart) <- \"Date\"\nconst$age <- as.numeric(yeart) - as.numeric(const$DoB)\n\n\n\n\n# for NHANES temporary use\n\n# remove the NA filled non BM rows\n\ntable(is.na(fullcast$Glucose))\n\n#nh.cast <- fullcast[(is.na(fullcast$Glucose) && is.na(fullcast$wbc)),]\n\n# right... because there is basically no overlap\n\n\nc.bm = fullcast[,c('chimp','sex','ageDays','wbc','rbc','hct','hgb',\n                   'mcv','mch','mchc','lymph','monos','eos',\n                   'Glucose','BUN','Creatine','Protein','Albumn','Bilirubn','alkphos',\n                   'sgpt','sgot','cholesterol','calcium','phosphate','sodium','potassium',\n                   'chloride','globulin','triglycerides','ggtp','osmolal'\n                  \n)]\nc.bm$ageDays = c.bm$ageDays / 365\nc.bm$lymph = c.bm$lymph/1000\n\n#DO THIS\nnh.cast <- fullcast[!(is.na(fullcast$Glucose) & is.na(fullcast$wbc)),]\n\nwrite.csv(c.bm, 'cNHANES.csv')\n                  \n",
    "created" : 1459850628039.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3148927457",
    "id" : "A89D2366",
    "lastKnownWriteTime" : 1459870051,
    "last_content_update" : 1459870051484,
    "path" : "C:/Users/s1229179/GitHub/R/Yerkes/Drew version/uncompressed_make.R",
    "project_path" : "Drew version/uncompressed_make.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}