{
    "collab_server" : "",
    "contents" : "# CFA and measurement invariance\n\n\nlibrary(lavaan)\nlibrary(semTools)\nlibrary(semPlot)\n\n\n# cutoff > |0.4|\n# cross-loadings allowed\n\nmod.comp5 <- '\nPC1 =~ BPs + BPd + BMI + cholesterol + triglycerides + Glucose + phosphate\nPC2 =~ rbc + hct + hgb + Albumn + calcium + Protein \nPC3 =~ mch + mcv + mchc + globulin + hgb\nPC4 =~ sgot + sgpt + ggtp\nPC5 =~ osmolal + sodium + BUN + Creatine + potassium\n\nPC1 ~~ 0*PC2\nPC1 ~~ 0*PC3\nPC1 ~~ 0*PC4\nPC1 ~~ 0*PC5\n\nPC2 ~~ 0*PC3\nPC2 ~~ 0*PC4\nPC2 ~~ 0*PC5\n\nPC3 ~~ 0*PC4\nPC3 ~~ 0*PC5\n\nPC4 ~~ 0*PC5\n\n'\n\n\nfit1.comp5 <- cfa(mod.comp5, data=sel.nbm[sampl.cfa,c(4:35)], std.ov=T, missing = 'fiml')\n  \nsemPaths(fit1.comp5, what='est')\nfitmeasures(fit1.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nsummary(fit1.comp5)\n\n\n\n\nmod_ind <- modificationindices(fit1.comp5)\n\n#Spoting the top 10:\nhead(mod_ind[order(mod_ind$mi, decreasing=TRUE), ], 10)\n#And the bigger than 5:\nsubset(mod_ind[order(mod_ind$mi, decreasing=TRUE), ], mi > 5)\n\n\n\nmod.comp10 <- \"\nPC1 =~ rbc + hct + hgb \nPC2 =~ mcv + mch + mchc\nPC3 =~ cholesterol + triglycerides + BPs + BMI + Glucose # + BPd\nPC4 =~ sgot + sgpt + ggtp\nPC5 =~ BUN + Creatine + potassium + osmolal\nPC6 =~ Albumn + calcium + lymph\nPC7 =~ sodium + chloride + osmolal\nPC8 =~ alkphos + phosphate + BPd # See above. Salient loadings for both, so...\nPC9 =~ globulin + Protein\nPC10 =~ wbc + monos + eos\n\n\"\n\nfit1.comp10 <- cfa(mod.comp10, data=sel.nbm[sampl.cfa,c(4:35)], std.ov=T, missing = 'fiml', orthogonal=T)\n\n#fit.h1 <- cfa(mod.1, data=sel.nbm[complete.cases(sel.nbm),])\n\nfitMeasures(fit1.comp10, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nsummary(fit1.comp10)\nsemPaths(fit1.comp10, what='est')\n\n\n\n### Chimps\n\nfit1c.comp10 <- cfa(mod.comp10, data=c.bm.m[,c(4:35)], std.ov=T, \n                    estimator = 'MLMV', # missing = 'direct', \n                    orthogonal=T)\nsemPaths(fit1c.comp10, what='est')\nfitmeasures(fit1c.comp10, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nsummary(fit1c.comp10)\n\nfit1c.comp5 <- cfa(mod.comp5, data=c.bm.m[,c(4:35)], std.ov=T, missing = 'fiml')\n\nsemPaths(fit1c.comp5, what='est')\nfitmeasures(fit1c.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nsummary(fit1c.comp5)\n\n# This doesn't really work; too many vars for the data, I think.\n\n# Move along with group comparisons, though.\n\n\n\n### Group Comparisons\n\nfit.all.comp5 <- cfa(mod.comp5, data=all.bm[,c(4:35)], std.ov=T, missing = 'fiml')\nsummary(fit.all.comp5)\nfitMeasures(fit.all.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\nmeasurementInvariance(mod.comp5, group = \"species\", data = all.bm, fit.measures=c('cfi','rmsea','srmr'))\n\nfit.config = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"means\"))\nfit.metric = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"means\", \"loadings\"))\nfit.scalar = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"thresholds\"))\nfit.strict = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"thresholds\", \"residuals\"))\nfit.all = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"thresholds\", \"residuals\",\"means\"))\n\nfitMeasures(fit.config, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.metric, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.scalar, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.strict, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.all, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\n# This appears not to work, i.e. the model isn't invariant between groups.\n\n\n# Perhaps if we only focus on the component of interest:\n# TODO?\n\nmeasurementInvariance(mod.comp5, group = \"species\", \n                      #group.partial = colnames(all.bm)[c(-1,-2,-3,-14,-23,-30,-33,-34,-35,-36,-25)],\n                      group.partial= c('rbc','hct','hgb','Albumn'),\n                      data = all.bm, fit.measures=c('cfi','rmsea','srmr'))\n\nfit.config = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"means\"))\n                 #group.partial= c('rbc','hct','hgb','Albumn'))\nfit.metric = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"means\", \"loadings\"))\nfit.scalar = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"thresholds\"))\nfit.strict = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"thresholds\", \"residuals\"))\nfit.all = cfa(mod.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"thresholds\", \"residuals\",\"means\"))\n\nfitMeasures(fit.config, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.metric, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.scalar, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.strict, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.all, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\nanova(fit.config, fit.metric)\n\n\n\n# ### What if we restrict it down to the AL factor?\n# \n# # begin with all variables that have \n# \n# modAL1.comp5 <- '\n# AL =~ cholesterol + triglycerides + BPs + BPd + BMI + Glucose + phosphate\n# \n# '\n# \n# fitAL1.comp5 <- cfa(modAL1.comp5,data=sel.nbm[sampl.cfa,c(4:35)], std.ov=T, missing = 'fiml')\n# \n# fitMeasures(fitAL1.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n# summary(fitAL1.comp5)\n# semPaths(fitAL1.comp5, what='est')\n# \n# measurementInvariance(modAL1.comp5, group = \"species\", \n#                       data = all.bm, fit.measures=c('cfi','rmsea','srmr'), strict=T)\n# \n# \n# \n# modAL2.comp5 <- '\n# AL =~ cholesterol + triglycerides + BPs + BPd + BMI + Glucose\n# \n# '\n# \n# fitAL2.comp5 <- cfa(modAL2.comp5,data=sel.nbm[sampl.cfa,c(4:35)], std.ov=T, missing = 'fiml')\n# \n# fitMeasures(fitAL2.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n# summary(fitAL2.comp5)\n# semPaths(fitAL2.comp5, what='est')\n# \n# measurementInvariance(modAL2.comp5, group = \"species\", \n#                       data = all.bm, fit.measures=c('cfi','rmsea','srmr'), strict=T)\n# # I guess we should keep phosphates in the model\n# \n# \n# \n# modAL3.comp5_old <- '\n# AL =~ cholesterol + triglycerides + BPs + BPd + BMI + phosphate\n# \n# '\n# \n# fitAL3.comp5_old <- cfa(modAL3.comp5_old,data=sel.nbm[sampl.cfa,c(4:35)], std.ov=T, missing = 'fiml')\n# \n# fitMeasures(fitAL3.comp5_old, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n# summary(fitAL3.comp5)\n# semPaths(fitAL3.comp5, what='est')\n# \n# anova(fitAL1.comp5, fitAL2.comp5, fitAL3.comp5)\n# anova(fitAL2.comp5, fitAL3.comp5)\n# \n# compareFit(fitAL1.comp5, fitAL2.comp5, fitAL3.comp5)\n# \n# \n# \n# # ModAL3 should be sufficiently good fit to test measurement Invariance\n# \n# measurementInvariance(modAL3.comp5_old, group = \"species\", \n#                       #group.partial = colnames(all.bm)[c(-1,-2,-3,-14,-23,-30,-33,-34,-35,-36,-25)],\n#                       data = all.bm, fit.measures=c('cfi','rmsea','srmr'), strict=T)\n# \n# # Invariance looks good.\n# \n# fitAL3.grp <- cfa(modAL3.comp5, data=all.bm, std.ov=T, missing = 'fiml', group = \"species\",\n#                   std.lv=T)\n# # fitAl3.grp <- \n# \n# fitMeasures(fitAL3.grp, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n# summary(fitAL3.grp)\n# semPaths(fitAL3.grp, what='est')\n# \n# \n# # Group 1 [human]:\n# #   \n# #   Latent Variables:\n# #   Estimate  Std.Err  z-value  P(>|z|)\n# # AL =~                                               \n# #   cholesterol       1.000                           \n# # triglycerides     0.683    0.027   24.871    0.000\n# # BPs               1.526    0.039   39.383    0.000\n# # BPd               1.525    0.041   37.656    0.000\n# # BMI               1.166    0.033   35.709    0.000\n# # phosphate        -0.609    0.036  -16.964    0.000\n# # \n# # \n# # Group 2 [chimp]:\n# #   \n# #   Latent Variables:\n# #   Estimate  Std.Err  z-value  P(>|z|)\n# # AL =~                                               \n# #   cholesterol       1.000                           \n# # triglycerides     3.010    2.349    1.281    0.200\n# # BPs               5.416    4.061    1.334    0.182\n# # BPd               6.503    4.621    1.407    0.159\n# # BMI               0.125    1.089    0.115    0.908\n# # phosphate        -0.974    1.135   -0.858    0.391\n\n\n\n\n\n\n\n###### NEW VERSION\n\n### What if we restrict it down to the AL factor?\n\n# begin with all variables that have 4 or more primary loadings on AL (from PCAs)\n# ... which means no glucose\n\nmodAL1.comp5 <- '\nAL =~ cholesterol + triglycerides + BPs + BPd + BMI + phosphate + alkphos\n\n'\n\nfitAL1.comp5 <- cfa(modAL1.comp5,data=sel.nbm[sampl.cfa,c(4:35)], std.ov=T, missing = 'fiml')\n\nfitMeasures(fitAL1.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nsemPaths(fitAL1.comp5, what='est')\n\n# Does not converge. Remove vars first.\n# measurementInvariance(modAL1.comp5, group = \"species\", \n#                       data = all.bm, fit.measures=c('cfi','rmsea','srmr'), strict=T)\nfitAL1c.comp5 <- cfa(modAL1.comp5,data=c.bm.m[,c(4:35)], std.ov=T, missing = 'fiml')\nfitMeasures(fitAL1c.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\n\n\nmodAL2.comp5 <- '\nAL =~ cholesterol + triglycerides + BPs + BPd + BMI + phosphate\n\n'\n\nfitAL2.comp5 <- cfa(modAL2.comp5,data=sel.nbm[sampl.cfa,c(4:35)], std.ov=T, missing = 'fiml')\n\nfitMeasures(fitAL2.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nsemPaths(fitAL2.comp5, what='est')\n\n# measurementInvariance(modAL2.comp5, group = \"species\", \n#                       data = all.bm, fit.measures=c('cfi','rmsea','srmr'), strict=T)\n\n# ALP doesn't look like it adds anything. Drop it.\n\nfitAL2c.comp5 <- cfa(modAL2.comp5,data=c.bm.m[,c(4:35)], std.ov=T, missing = 'fiml')\nfitMeasures(fitAL2c.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\n\nmodAL3.comp5 <- '\nAL =~ cholesterol + triglycerides + BPs + BPd + BMI\n\n'\n\nfitAL3.comp5 <- cfa(modAL3.comp5,data=sel.nbm[sampl.cfa,c(4:35)], std.ov=T, missing = 'fiml')\n\nfitMeasures(fitAL3.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nsemPaths(fitAL3.comp5, what='est')\n\n# Taking phosphates out didn't help. Model 2 is our final model.\n\nfitAL3c.comp5 <- cfa(modAL3.comp5,data=c.bm.m[,c(4:35)], std.ov=T, missing = 'fiml')\nfitMeasures(fitAL3c.comp5, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\n\n\n# ModAL2 should also be sufficiently good fit to test measurement Invariance\n\nmi.6vars <- measurementInvariance(modAL2.comp5, group = \"species\", \n                      #group.partial = colnames(all.bm)[c(-1,-2,-3,-14,-23,-30,-33,-34,-35,-36,-25)],\n                      data = all.bm, fit.measures=c('cfi','rmsea','srmr'), \n                      std.lv=T,strict=T)\n\n# Invariance doesn't look good.\n\nfitAL2.grp <- cfa(modAL2.comp5, data=all.bm, std.ov=T, missing = 'fiml', group = \"species\",\n                  std.lv=T)\n# fitAl3.grp <- \n\nfitMeasures(fitAL2.grp, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nsummary(fitAL2.grp)\nsemPaths(fitAL2.grp, what='est')\n\n# (weak)\npartialInvariance(mi.6vars, type='metric', p.adjust = 'BH')\npartialInvariance(mi.6vars, type='metric', p.adjust = 'BH', free='BPd')\npI.teardown.metric = partialInvariance(mi.6vars, type='metric', p.adjust = 'BH', free=c('BPd','BPs'), return.fit=T)\n#partialInvariance(mi.6vars, type='metric', p.adjust = 'holm', free=c('BPd','BPs','phosphate'), return.fit = T)\n\n# partialInvariance(mi.6vars, type='metric', p.adjust = 'holm', fix='cholesterol')\n# partialInvariance(mi.6vars, type='metric', p.adjust = 'holm', fix=c('cholesterol','BMI'))\n# partialInvariance(mi.6vars, type='metric', p.adjust = 'holm', fix=c('cholesterol','BMI','triglycerides'))\n\n# BPs;d should have loadings freed across groups\nsummary(pI.teardown.metric$models$nested)\nfitMeasures(pI.teardown.metric$models$nested, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\n\n# (strong)\npartialInvariance(mi.6vars, type='scalar', p.adjust = 'BH')\npartialInvariance(mi.6vars, type='scalar', p.adjust = 'BH', free='BPs')\npartialInvariance(mi.6vars, type='scalar', p.adjust = 'BH', free=c('BPs','phosphate'))\npI.teardown.scalar = partialInvariance(mi.6vars, type='scalar', p.adjust = 'BH', free=c('BPs','triglycerides','phosphate'), return.fit=T)\n\nsummary(pI.teardown.scalar$models$nested)\nfitMeasures(pI.teardown.metric$models$nested, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n# BPs, phosphates, trigs should have intercepts freed across groups\n\n\n# (strict)\npartialInvariance(mi.6vars, type='strict', p.adjust = 'holm')\npartialInvariance(mi.6vars, type='strict', p.adjust = 'holm', free=c('phosphate'))\npartialInvariance(mi.6vars, type='strict', p.adjust = 'holm', free=c('phosphate','triglycerides'))\npartialInvariance(mi.6vars, type='strict', p.adjust = 'holm', free=c('phosphate','triglycerides','BPs'))\npartialInvariance(mi.6vars, type='strict', p.adjust = 'holm', free=c('phosphate','triglycerides','BPs','BPd'))\npartialInvariance(mi.6vars, type='strict', p.adjust = 'holm', free=c('phosphate','triglycerides','BPs','BPd','BMI'))\n# can't establish any partial invariance for fixed residuals\n\n# mean\npartialInvariance(mi.6vars, type='mean', p.adjust = 'holm')\n# nothing.\n\n\n\n### Let's combine strong and weak \n\nfinal.modAL = cfa(modAL2.comp5,data=all.bm, \n                  group = 'species',\n                  std.ov=T, missing = 'fiml',std.lv=T,\n                  group.equal = c(\"loadings\", \"intercepts\"),\n                  group.partial = c('AL=~BPs','AL=~BPd',\n                                    'BPs~1','triglycerides~1','phosphate~1')\n                  )\n\nfitMeasures(final.modAL, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\nsummary(final.modAL)\n\n# and if we compare to a null model?\n\nfinal.0.modAL = cfa(modAL2.comp5,data=all.bm, \n                    group='species',\n                  std.ov=T, missing = 'fiml',std.lv=T)\nfitMeasures(final.0.modAL, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\nfinal.00.modAL = cfa(modAL2.comp5,data=all.bm, \n                    std.ov=T, missing = 'fiml',std.lv=T)\nfitMeasures(final.00.modAL, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n                  \n\ncompfit.final = compareFit(final.modAL, final.0.modAL)\nsummary(compfit.final)\n\nclipboard(final.modAL, what='summary')\n\n\n\n\n\n######################################\n\n\n\n# partialInvariance(mi.6vars, type='scalar', p.adjust = 'holm', fix='BPd')\n# \n# partialInvariance(mi.6vars, type='strict', p.adjust = 'holm')\n# partialInvariance(mi.6vars, type='strict', p.adjust = 'holm', fix='cholesterol')\n# \n# partialInvariance(mi.6vars, type='means', p.adjust = 'holm')\n\n\n\n\n\n\n\n## After retaining phosphates, the rest of this appears to be unnecessary...\n\n\nfit.config = cfa(modAL3.comp5, data=all.bm, group=\"species\", group.equal=c(\"means\"))\n#group.partial= c('rbc','hct','hgb','Albumn'))\nfit.metric = cfa(modAL3.comp5, data=all.bm, group=\"species\", group.equal=c(\"means\", \"loadings\"))\nfit.scalar = cfa(modAL3.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"thresholds\"))\nfit.strict = cfa(modAL3.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"thresholds\", \"residuals\"))\nfit.all = cfa(modAL3.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"thresholds\", \"residuals\",\"means\"))\n\nfitMeasures(fit.config, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.metric, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.scalar, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.strict, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nfitMeasures(fit.all, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\n\n# Metric invariance. What do we need to free up to get scalar inv?\n\nfit.metric0 = cfa(modAL3.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\"))\n \nfit.scalar0 = cfa(modAL3.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"intercepts\"))\n                 #group.partial = c('AL=~triglycerides'))\nfit.scalar1 = cfa(modAL3.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"intercepts\"),\n                  group.partial = c('AL=~BMI'))\ncompareFit(fit.metric0,fit.scalar0, fit.scalar1)\n\nsummary(fit.scalar1)\n\n# Removing BMI makes sense, and it gives us scalar invaraince. It also means that\n# the contribution of BMI to AL is inconsistent, as a difference in intercept or loading\n# could be causing this difference.\n\n# However, we can now compare the other vars directly.\n\nfitAL3.grp <- cfa(modAL3.comp5, data=all.bm, std.ov=T, missing = 'fiml', group = \"species\")\n\nfitMeasures(fitAL3.grp, c(\"chisq\", \"df\", \"pvalue\", \"cfi\", \"rmsea\",\"srmr\"))\nsummary(fitAL3.grp)\nsemPaths(fitAL3.grp, what='est')\n\n\n# Group 1 [human]:\n#   \n#   Latent Variables:\n#   Estimate  Std.Err  z-value  P(>|z|)\n# AL =~                                               \n# cholesterol       1.000                           \n# triglycerides     0.690    0.027   25.255    0.000\n# BPs               1.523    0.039   39.309    0.000\n# BPd               1.496    0.040   37.742    0.000\n# BMI               1.152    0.032   35.724    0.000\n# \n# Group 2 [chimp]:\n#   \n#   Latent Variables:\n#   Estimate  Std.Err  z-value  P(>|z|)\n# AL =~                                               \n# cholesterol       1.000                           \n# triglycerides     2.639    1.852    1.425    0.154\n# BPs               4.800    3.200    1.500    0.134\n# BPd               5.500    3.355    1.639    0.101\n# BMI               0.151    0.975    0.155    0.877\n\n\n\n\n\n\n\n### Old - Do Not Use\n\nfit.scalar2 = cfa(modAL3.comp5, data=all.bm, group=\"species\", group.equal=c(\"loadings\", \"intercepts\"),\n                  group.partial = c('AL=~cholesterol','AL=~BMI'))\ncompareFit(fit.metric,fit.scalar0, fit.scalar1, fit.scalar2)\n\nmeasurementInvariance(modAL3.comp5, group = \"species\", \n                      group.partial = c('AL=~triglycerides'),\n                      data = all.bm, fit.measures=c('cfi','rmsea','srmr'), strict=T)\n\nmeasurementInvariance(modAL3.comp5, group = \"species\", \n                      group.partial = c('AL=~triglycerides+l',AL=~cholesterol'),\n                      data = all.bm, fit.measures=c('cfi','rmsea','srmr'), strict=T)\n",
    "created" : 1480088579461.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3490251804",
    "id" : "9EAFBAD9",
    "lastKnownWriteTime" : 1493144856,
    "last_content_update" : 1493144856857,
    "path" : "C:/Users/s1229179/GitHub/R/Yerkes/NHANES/cfa.R",
    "project_path" : "cfa.R",
    "properties" : {
        "tempName" : "Untitled2"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}