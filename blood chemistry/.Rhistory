creat.tbl = htmlreg(list(m.creat.a2,mj.creat.a2,ext.m2.creat), custom.model.names=c('Americans','Japanese','Chimpanzees'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
write(creat.tbl,"creat.html")
vpers<-data.frame(Sample=character(),Dimension=character(),Score=numeric(), Sex=factor)
vpers = rbind(
cbind(Sample="Yerkes", Dimension="Dominance", Score=(((output$dom - 1) / 2) + 1),Sex=output$sex),
cbind(Sample="Yerkes", Dimension="Neuroticism", Score=(((output$neuro - 1) / 2) + 1),Sex=output$sex),
cbind(Sample="Yerkes", Dimension="Extraversion", Score=(((output$extra - 1) / 2) + 1),Sex=output$sex),
cbind(Sample="Yerkes", Dimension="Agreeableness", Score=(((output$agree - 1) / 2) + 1),Sex=output$sex),
cbind(Sample="Yerkes", Dimension="Conscientiousness", Score=(((output$cons - 1) / 2) + 1),Sex=output$sex),
cbind(Sample="Yerkes", Dimension="Openness", Score=(((output$open - 1) / 2) + 1),Sex=output$sex),
cbind(Sample="Americans", Dimension="Neuroticism", Score=midus_c$B1SNEURO,Sex=midus_c$B1PRSEX),
cbind(Sample="Americans", Dimension="Dominance", Score=midus_c$B1SAGENC,Sex=midus_c$B1PRSEX),
cbind(Sample="Americans", Dimension="Agreeableness", Score=midus_c$B1SAGREE,Sex=midus_c$B1PRSEX),
cbind(Sample="Americans", Dimension="Conscientiousness", Score=midus_c$B1SCONS2,Sex=midus_c$B1PRSEX),
cbind(Sample="Americans", Dimension="Extraversion", Score=midus_c$B1SEXTRA,Sex=midus_c$B1PRSEX),
cbind(Sample="Americans", Dimension="Openness", Score=midus_c$B1SOPEN,Sex=midus_c$B1PRSEX),
cbind(Sample="Japanese", Dimension="Agreeableness", Score=midja_c$J1SAGREE,Sex=midja_c$J1SQ1),
cbind(Sample="Japanese", Dimension="Neuroticism", Score=midja_c$J1SNEURO,Sex=midja_c$J1SQ1),
cbind(Sample="Japanese", Dimension="Conscientiousness", Score=midja_c$J1SCONS2,Sex=midja_c$J1SQ1),
cbind(Sample="Japanese", Dimension="Extraversion", Score=midja_c$J1SEXTRA,Sex=midja_c$J1SQ1),
cbind(Sample="Japanese", Dimension="Dominance", Score=midja_c$J1SAGENC,Sex=midja_c$J1SQ1),
cbind(Sample="Japanese", Dimension="Openness", Score=midja_c$J1SOPEN,Sex=midja_c$J1SQ1))
vpers<-data.frame(Sample=vpers[,1],Dimension=vpers[,2],Score=as.numeric(as.character(vpers[,3])),Sex=as.factor(vpers[,4]))
library(beanplot)
svg(filename="PersBSPID.svg",
width=10,
height=8,
pointsize=12,
bg='white')
par(mfrow=c(2,3),
oma = c(5,4,0,0) + 0.3,
mar = c(0,0,1,1) + 0.5)
beanpersD <- with(data=vpers[vpers$Dimension=='Dominance',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,
overallline = "median", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,
col = list("cadetblue3", "cadetblue1", "royalblue3", "royalblue1","slateblue","slateblue1"),
main='Dominance' , show.names=FALSE)
)
beanpersA <- with(data=vpers[vpers$Dimension=='Agreeableness',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,
overallline = "median", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,
col = list("cadetblue3", "cadetblue1", "royalblue3", "royalblue1","slateblue","slateblue1"),
main='Agreeableness' , show.names=FALSE
)
)
beanpersN <- with(data=vpers[vpers$Dimension=='Neuroticism',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,
overallline = "median", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,
col = list("cadetblue3", "cadetblue1", "royalblue3", "royalblue1","slateblue","slateblue1"),
main='Neuroticism' , show.names=FALSE)
)
beanpersO <- with(data=vpers[vpers$Dimension=='Openness',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,
overallline = "median", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,
col = list("cadetblue3", "cadetblue1", "royalblue3", "royalblue1","slateblue","slateblue1"),
main='Openness'
))
beanpersC <- with(data=vpers[vpers$Dimension=='Conscientiousness',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,
overallline = "median", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,
col = list("cadetblue3", "cadetblue1", "royalblue3", "royalblue1","slateblue","slateblue1")
, main='Conscientiousness'
)
)
beanpersE <- with(data=vpers[vpers$Dimension=='Extraversion',],
beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,
overallline = "median", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,
col = list("cadetblue3", "cadetblue1", "royalblue3", "royalblue1","slateblue","slateblue1")
, main='Extraversion' #, yaxt=''
))
dev.off()
ext.m1a=extract(m1a.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
sys.tbl = htmlreg(list(m.sys.a2,mj.sys.a2,ext.m1a), custom.model.names=c('Americans','Japanese','Yerkess'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
write(sys.tbl,"sys.html")
ext.trig=extract(m2.trig.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
trig.tbl = htmlreg(list(m.trig.a2,mj.trig.a2,ext.trig), custom.model.names=c('Americans','Japanese','Yerkess'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
write(trig.tbl,"trig.html")
ext.chol=extract(m2.chol.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
chol.tbl = htmlreg(list(m.chol.a2,mj.chol.a2,ext.chol), custom.model.names=c('Americans','Japanese','Yerkess'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
write(chol.tbl,"chol.html")
ext.m2.creat=extract(m2.creat.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
creat.tbl = htmlreg(list(m.creat.a2,mj.creat.a2,ext.m2.creat), custom.model.names=c('Americans','Japanese','Yerkess'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
write(creat.tbl,"creat.html")
ext.m1b=extract(m1b.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
dias.tbl = htmlreg(list(m.dias.a2,mj.dias.a2,ext.m1b), custom.model.names=c('Americans','Japanese','Yerkess'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
#override.ci.low = list(c(0.1,0.1,0.1)),
#override.ci.up = list(c(0.1,0.1,0.1))
write(dias.tbl,"dias.html")
ext.m3.BMI = extract(m3.BMI.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
BMI.tbl = htmlreg(list(m.BMI.a2,mj.BMI.a2,ext.m3.BMI), custom.model.names=c('Americans','Japanese','Yerkess'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:4,7,8,5,10,9,6),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA)
#custom.coef.names=expression(paste("c(NA,'Age', 'Age'"^"'2', 'Sex',NA,NA,NA,NA,NA,NA)")),
#custom.coef.names=coef.a2
#override.ci.low = list(c(0.1,0.1,0.1)),
#override.ci.up = list(c(0.1,0.1,0.1))
)
write(BMI.tbl,"BMI.html")
ext.m1a=extract(m1a.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
sys.tbl = htmlreg(list(m.sys.a2,mj.sys.a2,ext.m1a), custom.model.names=c('Americans','Japanese','Yerkes'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
write(sys.tbl,"sys.html")
ext.trig=extract(m2.trig.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
trig.tbl = htmlreg(list(m.trig.a2,mj.trig.a2,ext.trig), custom.model.names=c('Americans','Japanese','Yerkes'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
write(trig.tbl,"trig.html")
ext.chol=extract(m2.chol.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
chol.tbl = htmlreg(list(m.chol.a2,mj.chol.a2,ext.chol), custom.model.names=c('Americans','Japanese','Yerkes'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
write(chol.tbl,"chol.html")
ext.m2.creat=extract(m2.creat.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
creat.tbl = htmlreg(list(m.creat.a2,mj.creat.a2,ext.m2.creat), custom.model.names=c('Americans','Japanese','Yerkes'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
write(creat.tbl,"creat.html")
ext.m1b=extract(m1b.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
dias.tbl = htmlreg(list(m.dias.a2,mj.dias.a2,ext.m1b), custom.model.names=c('Americans','Japanese','Yerkes'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:5,8,9,6,11,10,7),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA,NA))
#override.ci.low = list(c(0.1,0.1,0.1)),
#override.ci.up = list(c(0.1,0.1,0.1))
write(dias.tbl,"dias.html")
ext.m3.BMI = extract(m3.BMI.a2, include.aic = FALSE, include.bic=FALSE, include.dic=FALSE,
include.deviance=FALSE, include.loglik=FALSE,include.nobs=FALSE,
include.groups=FALSE,include.variance=FALSE)
BMI.tbl = htmlreg(list(m.BMI.a2,mj.BMI.a2,ext.m3.BMI), custom.model.names=c('Americans','Japanese','Yerkes'), ci.force=TRUE,
caption = "", groups=NULL, digits=3, ci.force.level = 0.92, ci.test=NULL,
bold=TRUE, custom.note = '', reorder.coef = c(1:4,7,8,5,10,9,6),
custom.coef.names=c(NA,"Age","Age<sup>2</sup>","Sex",NA,NA,NA,NA,NA,NA)
#custom.coef.names=expression(paste("c(NA,'Age', 'Age'"^"'2', 'Sex',NA,NA,NA,NA,NA,NA)")),
#custom.coef.names=coef.a2
#override.ci.low = list(c(0.1,0.1,0.1)),
#override.ci.up = list(c(0.1,0.1,0.1))
)
write(BMI.tbl,"BMI.html")
sys.ci.gg
attach(mtcars)
somebs = aggregate(mtcars, by=list(cyl,gear), FUN = mean, na.rm=TRUE)
head(somebs)
head(somebs,20)
somebs = aggregate(mtcars, by=list(cyl,gear), FUN = sum, na.rm=TRUE)
head(somebs,20)
colnames(mtcars)
type(mtcars)
install.packages("ggplot2")
View(scoutput)
View(output)
View(midja_c)
View(bcellt3)
head(bcellt2)
bcellt2
overlapBM <- data.frame(age=numeric,systolic=numeric, diastolic=numeric,
cholesterol=numeric,triglycerides=numeric,creatinine=numeric)
overlapBM <- dataframe(age=numeric,systolic=numeric, diastolic=numeric,
cholesterol=numeric,triglycerides=numeric,creatinine=numeric)
overlapBM <- data.frame(age=numeric,systolic=numeric, diastolic=numeric,
cholesterol=numeric,triglycerides=numeric,creatinine=numeric)
overlapBM <- data.frame(age=numeric(),systolic=numeric(), diastolic=numeric(),
cholesterol=numeric(),triglycerides=numeric(),creatinine=numeric())
View(dmdob)
as.numeric(bchemt1-DoB)
as.numeric(bchemt2-DoB)
bchemt2-DoB
years(bchemt2-DoB)
library(chron)
install.packages("chron")
library(chron)
years(bchemt2-DoB)
install.packages("pastecs")
library(pastecs)
daystoyears(bchemt2-DoB)
daystoyears(numeric(bchemt2-DoB))
numeric(bchemt2-DoB))
numeric(bchemt2-DoB)
numeric(bchemt2-DoB)
bchemt2-DoB
(bchemt2-DoB)/365.25
(bchemt1-DoB)/365.25
floor((bchemt1-DoB)/365.25)
floor((bchemt2-DoB)/365.25)
chimp
dmdob$DOB.x
floor((bcellt2-DoB)/365.25)
View(dmdob)
head(dmdob$DOB.x)
head(dmdob$BMI)
head(dmdob$BMI.1)
head(compare_data)
BMI
dim(dmdob)
View(dmdob)
dmdob$BMI.1
baseAttr <- dataframe(chimp=dmdob$chimp,Sex=sex,dmdob$DOB.x,Dominance=compare_data$chimp_Dom_CZ,
Openness=compare_data$chimp_Opn_CZ,Agreeableness=compare_data$chimp_Agr_CZ,
Conscientiousness=compare_data$chimp_Con_CZ,Neuroticism=compare_data$chimp_Neu_CZ,
Extraversion=compare_data$chimp_Ext_CZ)
baseAttr <- data.frame(chimp=dmdob$chimp,Sex=sex,dmdob$DOB.x,Dominance=compare_data$chimp_Dom_CZ,
Openness=compare_data$chimp_Opn_CZ,Agreeableness=compare_data$chimp_Agr_CZ,
Conscientiousness=compare_data$chimp_Con_CZ,Neuroticism=compare_data$chimp_Neu_CZ,
Extraversion=compare_data$chimp_Ext_CZ)
View(baseAttr)
colname(dmdob)
colnames(dmdob)
bBMIt1 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBMIt2 <- structure(numeric(dim(dmdob)[1]), class="Date")
for (i in 1:(dim(dmdob)[1])){
bBMIt1 <- as.Date(as.character(dmdob$HeightDate[i]), format='%d/%m/%Y')
bBMIt2 <- as.Date(as.character(dmdob$HeightDate.1[i]), format='%d/%m/%Y)
}
''
'
for (i in 1:(dim(dmdob)[1])){
bBMIt1 <- as.Date(as.character(dmdob$HeightDate[i]), format='%d/%m/%Y')
bBMIt2 <- as.Date(as.character(dmdob$HeightDate.1[i]), format='%d/%m/%Y')
}
numeric(floor((bchemt2-DoB)/365.25))
as.numeric(floor((bchemt2-DoB)/365.25))
?Value
??Value
??value
cbind(baseAttr,marker='BMI',value=dmdob$BMI,age=as.numeric(floor((bBMIt1-DoB)/365.25)))
as.numeric(floor((bBMIt1-DoB)/365.25))
head(bBMIt1)
bBMIt1 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBMIt2 <- structure(numeric(dim(dmdob)[1]), class="Date")
for (i in 1:(dim(dmdob)[1])){
bBMIt1 <- as.Date(as.character(dmdob$HeightDate[i]), format='%d/%m/%Y')
bBMIt2 <- as.Date(as.character(dmdob$HeightDate.1[i]), format='%d/%m/%Y')
}
bBMIt1
bBMIt2
bBMIt1 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBMIt2 <- structure(numeric(dim(dmdob)[1]), class="Date")
for (i in 1:(dim(dmdob)[1])){
bBMIt1[i] <- as.Date(as.character(dmdob$HeightDate[i]), format='%d/%m/%Y')
bBMIt2[i] <- as.Date(as.character(dmdob$HeightDate.1[i]), format='%d/%m/%Y')
}
head(bBMIt1)
headsystolic
head(systolic)
bBPt1 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBPt2 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBPt3 <- structure(numeric(dim(dmdob)[1]), class="Date")
for (i in 1:(dim(dmdob)[1])){
bBPt1[i] <- as.Date(as.character(dmdob$Survey.1), format='%d/%m/%y')
bBPt2[i] <- as.Date(as.character(dmdob$Survey.2), format='%d/%m/%y')
bBPt3[i] <- as.Date(as.character(dmdob$Survey.3), format='%d/%m/%y')
}
warnings()
for (i in 1:(dim(dmdob)[1])){
bBPt1[i] <- as.Date(as.character(dmdob$Survey.1[i]), format='%d/%m/%y')
bBPt2[i] <- as.Date(as.character(dmdob$Survey.2[i]), format='%d/%m/%y')
bBPt3[i] <- as.Date(as.character(dmdob$Survey.3[i]), format='%d/%m/%y')
}
head(bBPt3,20)
head(bBMIt2,20)
for (i in 1:(dim(dmdob)[1])){
bBPt1[i] <- as.Date(as.character(dmdob$Survey.1[i]), format='%m/%d/%y')
bBPt2[i] <- as.Date(as.character(dmdob$Survey.2[i]), format='%m/%d/%y')
bBPt3[i] <- as.Date(as.character(dmdob$Survey.3[i]), format='%m/%d/%y')
}
head(bBMIt2,20)
head(bBPt2,20)
head(dmdob$HeightDate,20)
head(chol)
head(trig)
head(creatinine)
overlapBM <- rbind(
# cbind(baseAttr,marker='BMI',value=dmdob$BMI,age=as.numeric(floor((bBMIt1-DoB)/365.25))),
#cbind(baseAttr,marker='BMI',value=dmdob$BMI.1,age=as.numeric(floor((bBMIt2-DoB)/365.25))),
#cbind(baseAttr,marker='Systolic',value=systolic.1,age=as.numeric(floor((bt1-DoB)/365.25))
cbind(baseAttr,marker='Cholesterol',value=chol[,1],age=as.numeric(floor((bchemt1-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,2],age=as.numeric(floor((bchemt2-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,3],age=as.numeric(floor((bchemt3-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,4],age=as.numeric(floor((bchemt4-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,1],age=as.numeric(floor((bchemt1-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,2],age=as.numeric(floor((bchemt2-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,3],age=as.numeric(floor((bchemt3-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,4],age=as.numeric(floor((bchemt4-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,1],age=as.numeric(floor((bcellt1-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,2],age=as.numeric(floor((bcellt2-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,3],age=as.numeric(floor((bcellt3-DoB)/365.25))),
)
overlapBM <- rbind(
# cbind(baseAttr,marker='BMI',value=dmdob$BMI,age=as.numeric(floor((bBMIt1-DoB)/365.25))),
#cbind(baseAttr,marker='BMI',value=dmdob$BMI.1,age=as.numeric(floor((bBMIt2-DoB)/365.25))),
#cbind(baseAttr,marker='Systolic',value=systolic.1,age=as.numeric(floor((bt1-DoB)/365.25))
cbind(baseAttr,marker='Cholesterol',value=chol[,1],age=as.numeric(floor((bchemt1-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,2],age=as.numeric(floor((bchemt2-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,3],age=as.numeric(floor((bchemt3-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,4],age=as.numeric(floor((bchemt4-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,1],age=as.numeric(floor((bchemt1-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,2],age=as.numeric(floor((bchemt2-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,3],age=as.numeric(floor((bchemt3-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,4],age=as.numeric(floor((bchemt4-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,1],age=as.numeric(floor((bcellt1-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,2],age=as.numeric(floor((bcellt2-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,3],age=as.numeric(floor((bcellt3-DoB)/365.25)))
)
View(overlapBM)
install.packages("tidyr")
library(tidyr)
?gather
library(dplyr)
??ddply
overlapBM = spread(overlapBM, marker, value)
ovChol <- rbind(
cbind(baseAttr,marker='Cholesterol',value=chol[,1],age=as.numeric(floor((bchemt1-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,2],age=as.numeric(floor((bchemt2-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,3],age=as.numeric(floor((bchemt3-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,4],age=as.numeric(floor((bchemt4-DoB)/365.25)))
)
ovTrig <- rbind(
cbind(baseAttr,marker='Triglycerides',value=trig[,1],age=as.numeric(floor((bchemt1-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,2],age=as.numeric(floor((bchemt2-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,3],age=as.numeric(floor((bchemt3-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,4],age=as.numeric(floor((bchemt4-DoB)/365.25)))
)
ovCreat <- rbind(
cbind(baseAttr,marker='Creatinine',value=creatinine[,1],age=as.numeric(floor((bcellt1-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,2],age=as.numeric(floor((bcellt2-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,3],age=as.numeric(floor((bcellt3-DoB)/365.25)))
)
ovTest <- merge(ovChol, ovTrig, all= TRUE)
View(ovTest)
head(chol)
head(creatinine)
ovChol <- rbind(                        # watch out for these reversals
cbind(baseAttr,marker='Cholesterol',value=chol[,4],age=as.numeric(floor((bchemt1-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,3],age=as.numeric(floor((bchemt2-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,2],age=as.numeric(floor((bchemt3-DoB)/365.25))),
cbind(baseAttr,marker='Cholesterol',value=chol[,1],age=as.numeric(floor((bchemt4-DoB)/365.25)))
)
ovTrig <- rbind(
cbind(baseAttr,marker='Triglycerides',value=trig[,4],age=as.numeric(floor((bchemt1-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,3],age=as.numeric(floor((bchemt2-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,2],age=as.numeric(floor((bchemt3-DoB)/365.25))),
cbind(baseAttr,marker='Triglycerides',value=trig[,1],age=as.numeric(floor((bchemt4-DoB)/365.25)))
)
ovCreat <- rbind(
cbind(baseAttr,marker='Creatinine',value=creatinine[,3],age=as.numeric(floor((bchemt1-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,2],age=as.numeric(floor((bchemt2-DoB)/365.25))),
cbind(baseAttr,marker='Creatinine',value=creatinine[,1],age=as.numeric(floor((bchemt3-DoB)/365.25)))
)
ovTest <- merge(ovChol, ovTrig, all= TRUE)
View(ovTest)
ovTest <- merge(ovTest,ovCreat, all= T)
overlapBM = spread(ovTest, marker, value)
?Cast
?cast
install.packages("reshape")
?cast
library("reshape2", lib.loc="C:/Program Files/R/R-3.2.0/library")
?cast
library(reshape2)
overlapBP = unstack(ovTest, value ~ marker)
overlapBP = data.frame(unstack(ovTest, value ~ marker))
overlapBP = dcast(ovTest, marker ~ chimp + age)
View(overlapBP)
overlapBP = dcast(ovTest,  chimp + age ~ marker)
View(overlapBP)
overlapBP = dcast(ovTest,  chimp + age ~ marker, value.var=value)
overlapBP = dcast(ovTest,  chimp + age ~ marker, value.var='value')
View(overlapBP)
View(ovTest)
overlapBP = dcast(ovTest[!is.na(ovTest$age),],  chimp + age ~ marker, value.var='value')
View(overlapBP)
overlapBP = dcast(ovTest[!is.na(ovTest$age),],  chimp + age ~ marker,
fun.aggregate=mean, value.var='value')
View(overlapBP)
bchemt4-bchem3
bchemt4-bchemt3
bchemt3-bchemt2
(bchemt3-bchemt2)/365
dmdob.bak <- dmdob
fulldata <- read.csv("final_data.csv")
pwd
pwd()
getwd
getwd()
setwd('./Drew version/')
fulldata <- read.csv("final_data.csv")
attach(fulldata)
as.numeric(fulldata$DOB.y,na.rm=TRUE)+as.numeric(fulldata$DOB.x,na.rm=TRUE)
DOBrm <- (!is.na(fulldata$DOB.x))|(!is.na(fulldata$DOB.y))
dmdob <- fulldata[DOBrm,]
View(dmdob)
dim(dmdob)
dim(fulldata)
dim(DOBrm)
length(DOBrm)
DoB <- as.Date(as.character(dmdob$DOB.x),format = "%m/%d/%Y")
bBMIt1 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBMIt2 <- structure(numeric(dim(dmdob)[1]), class="Date")
for (i in 1:(dim(dmdob)[1])){
bBMIt1[i] <- as.Date(as.character(dmdob$HeightDate[i]), format='%d/%m/%Y')
bBMIt2[i] <- as.Date(as.character(dmdob$HeightDate.1[i]), format='%d/%m/%Y')
}
head(bBMIt1,25)
head(bBMIt2,25)
?diff
head(dmdob$HeightDate)
i
i=1
bBMIt1[i] <- as.Date(as.character(dmdob$HeightDate[i]), format='%d/%m/%Y')
head(dmdob$HeightDate)
head(bBMIt2,5)
head(bBMIt1,5)
as.Date(as.character(dmdob$HeightDate[i]), format='%d/%m/%Y')
dmdob$HeightDate[i]
bBMIt1 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBMIt2 <- structure(numeric(dim(dmdob)[1]), class="Date")
for (i in 1:(dim(dmdob)[1])){
bBMIt1[i] <- as.Date(as.character(dmdob$HeightDate[i]), format='%m/%d/%Y')
bBMIt2[i] <- as.Date(as.character(dmdob$HeightDate.1[i]), format='%m/%d/%Y')
}
as.Date(as.character(dmdob$HeightDate[i]), format='%d/%m/%Y')
as.Date(as.character(dmdob$HeightDate[i]), format='%m/%d/%Y')
head(bBMIt1,5)
head(bBMIt1,25)
head(bBMIt2,25)
bBPt1 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBPt2 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBPt3 <- structure(numeric(dim(dmdob)[1]), class="Date")
for (i in 1:(dim(dmdob)[1])){
bBPt1[i] <- as.Date(as.character(dmdob$Survey.1[i]), format='%m/%d/%y')
bBPt2[i] <- as.Date(as.character(dmdob$Survey.2[i]), format='%m/%d/%y')
bBPt3[i] <- as.Date(as.character(dmdob$Survey.3[i]), format='%m/%d/%y')
}
bBPt2
bBMIt1
bBMIt2
fulldata <- read.csv("final_data.csv")
attach(fulldata)
search()
detach(fulldata)
detach(fulldata)
attach(fulldata)
detach(fulldata)
detach(fulldata)
attach(fulldata)
as.numeric(fulldata$DOB.y,na.rm=TRUE)+as.numeric(fulldata$DOB.x,na.rm=TRUE)
DOBrm <- (!is.na(fulldata$DOB.x))|(!is.na(fulldata$DOB.y))
dmdob <- fulldata[DOBrm,]
DoB <- as.Date(as.character(dmdob$DOB.x),format = "%m/%d/%Y")
bBPt1 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBPt2 <- structure(numeric(dim(dmdob)[1]), class="Date")
bBPt3 <- structure(numeric(dim(dmdob)[1]), class="Date")
for (i in 1:(dim(dmdob)[1])){
yeart <- as.character(dmdob$Survey.1[i])
if(nchar(yeart)==10){
bBPt1[i] <- as.Date(yeart,format = "%m/%d/%Y")
}
else bBPt1[i] <- as.Date(yeart,format = "%m/%d/%y")
yeart <- as.character(dmdob$Survey.2[i])
if(nchar(yeart)==10){
bBPt2[i] <- as.Date(yeart,format = "%m/%d/%Y")
}
else bBPt2[i] <- as.Date(yeart,format = "%m/%d/%y")
yeart <- as.character(dmdob$Survey.3[i])
if(nchar(yeart)==10){
bBPt3[i] <- as.Date(yeart,format = "%m/%d/%Y")
}
else bBPt3[i] <- as.Date(yeart,format = "%m/%d/%y")
}
bBPt1
bBPt2
bBPt3
