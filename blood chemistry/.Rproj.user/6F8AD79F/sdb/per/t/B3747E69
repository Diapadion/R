{
    "contents" : "\nmedian.quartile <- function(x){\n  out <- quantile(x, probs = c(0.25,0.5,0.75))\n  names(out) <- c(\"ymin\",\"y\",\"ymax\")\n  return(out) \n}\nmedian.line <- function(x){\n  out <- quantile(x, probs = 0.5)\n  names(out) <- \"y\"\n  return(out) \n}\n\n\nlibrary(texreg)\n\ntbl1 = htmlreg(m_1)\nprint.texregTable(tbl1)\n\ntbl2a = htmlreg(m_2a)\nprint.texregTable(tbl2a)\n\ntbl2b = htmlreg(m_2b)\nprint.texregTable(tbl2b)\n\n#---\n\ntbl2c1 = htmlreg(m_2c)\nprint.texregTable(tbl2c1)\n\ntbl2c2 = htmlreg(c(m_2c,m2c1,m2c2))\nprint.texregTable(tbl2c2)\n\ntbl2c3 = htmlreg(c(m_2c,m2c1,m2c2,m2c0))\nprint.texregTable(tbl2c3)\n\ntbl2c4 = htmlreg(c(m_2c,m2c1,m2c2,m2c0,m2c3))\nprint.texregTable(tbl2c4)\n\n#--- 24/03/2015\n\nsys.tbl = htmlreg(list(m.sys,m_1))\nwrite(sys.tbl,\"sys.html\")\n\nchol.tbl = htmlreg(list(m.chol,m_2a))\nwrite(chol.tbl,\"chol.html\")\n\ntrig.tbl = htmlreg(list(m.trig,m_2b))\nwrite(trig.tbl,\"trig.html\")\n\ngluco.tbl = htmlreg(list(m.gluc,m_2c))\nwrite(gluco.tbl,\"gluco.html\")\n\ncreat.tbl = htmlreg(list(m.creat,m2u))\nwrite(creat.tbl,\"creat.html\")\n\nalkphos.tbl = htmlreg(list(m.alp,m2w))\nwrite(alkphos.tbl,\"alkphos.html\")\n\n\nprint.texregTable(tbl2c3)\n\n\n#--- for 27/03/2015\n\n#sys.tbl\n\nsys.tbl = htmlreg(list(m.sys,mj.sys,m1a), custom.model.names=c('Americans','Japanese','Chimpanzees'), ci.force=TRUE)\nwrite(sys.tbl,\"sys.html\")\n\ntrig.tbl = htmlreg(list(m.trig,mj.trig,m2.trig), custom.model.names=c('Americans','Japanese','Chimpanzees'), ci.force=TRUE)\nwrite(trig.tbl,\"trig.html\")\n\nchol.tbl = htmlreg(list(m.chol,mj.chol,m2.chol), custom.model.names=c('Americans','Japanese','Chimpanzees'), ci.force=TRUE)\nwrite(chol.tbl,\"chol.html\")\n\ncreat.tbl = htmlreg(list(m.creat,mj.creat,m2.creat), custom.model.names=c('Americans','Japanese','Chimpanzees'), ci.force=TRUE)\nwrite(creat.tbl,\"creat.html\")\n\n### ggplot \nlibrary(ggplot2)\n\n#first try - personality dimension distributions, side by side violin/bean plots\n\nvpers<-data.frame(Sample=character(),Dimension=character(),Score=numeric())\n\nvpers = rbind(\n  cbind(Sample=\"Yerkes\", Dimension=\"Dominance\", Score=(((output$dom - 1) / 2) + 1)),\n  cbind(Sample=\"Yerkes\", Dimension=\"Neuroticism\", Score=(((output$neuro - 1) / 2) + 1)),\n  cbind(Sample=\"Yerkes\", Dimension=\"Extraversion\", Score=(((output$extra - 1) / 2) + 1)),\n  cbind(Sample=\"Yerkes\", Dimension=\"Agreeableness\", Score=(((output$agree - 1) / 2) + 1)),\n  cbind(Sample=\"Yerkes\", Dimension=\"Conscientiousness\", Score=(((output$cons - 1) / 2) + 1)),\n  cbind(Sample=\"Yerkes\", Dimension=\"Openness\", Score=(((output$open - 1) / 2) + 1)),\n  cbind(Sample=\"MIDUS\", Dimension=\"Neuroticism\", Score=midus_c$B1SNEURO),\n  cbind(Sample=\"MIDUS\", Dimension=\"Dominance\", Score=midus_c$B1SAGENC),\n  cbind(Sample=\"MIDUS\", Dimension=\"Agreeableness\", Score=midus_c$B1SAGREE),\n  cbind(Sample=\"MIDUS\", Dimension=\"Conscientiousness\", Score=midus_c$B1SCONS2),\n  cbind(Sample=\"MIDUS\", Dimension=\"Extraversion\", Score=midus_c$B1SEXTRA),\n  cbind(Sample=\"MIDUS\", Dimension=\"Openness\", Score=midus_c$B1SOPEN),\n  cbind(Sample=\"MIDJA\", Dimension=\"Agreeableness\", Score=midja_c$J1SAGREE),\n  cbind(Sample=\"MIDJA\", Dimension=\"Neuroticism\", Score=midja_c$J1SNEURO),\n  cbind(Sample=\"MIDJA\", Dimension=\"Conscientiousness\", Score=midja_c$J1SCONS2),\n  cbind(Sample=\"MIDJA\", Dimension=\"Extraversion\", Score=midja_c$J1SEXTRA),\n  cbind(Sample=\"MIDJA\", Dimension=\"Dominance\", Score=midja_c$J1SAGENC),\n  cbind(Sample=\"MIDJA\", Dimension=\"Openness\", Score=midja_c$J1SOPEN))\nvpers<-data.frame(Sample=vpers[,1],Dimension=vpers[,2],Score=as.numeric(as.character(vpers[,3])))\n  \nviolpers <- ggplot(vpers, aes(x=Sample, y=Score, group=Sample)) + geom_violin(trim=TRUE, aes(fill = factor(Sample))) +\n  facet_wrap(~Dimension) + \n  stat_summary(fun.y=median.quartile,geom='point') + \n  stat_summary(fun.y=median.line,geom='point') +\n  geom_segment(aes(x=Sample-0.1, xend=Sample+0.1, y=Score, yend=Score), colour='white')\n\nvbio <- NULL\n# vbio <- rbind(\n#   cbind(Sample=\"Yerkes\",Marker=\"Diastolic BP\",Value=output$dias),\n#   cbind(Sample=\"Yerkes\",Marker='Systolic BP',)\n#   cbind(Sample=\"Yerkes\",Marker='BMI',\n#   cbind(Sample=\"Yerkes\",Marker='Cholesterol',\n#   cbind(Sample=\"Yerkes\",Marker='Triglycerides',\n#   cbind(Sample=\"Yerkes\",Marker='Creatinine',\n#   cbind(Sample=\"MIDUS\",Marker='Diastolic BP',\n#   )\n  \nlibrary(reshape2)\n# vmregs <- reshape(midus_cs, direction=\"long\", varying=NULL,\n#                   v.names=c('Dominance','Extraversion','Openness',\n#                             'Conscientiousness','Agreeableness','Neuroticism'))\nvmregs <- melt(midus_cs[,1:15], id.vars=c('M2ID','sex','age','chol','creat','trig','BMI','sys','dias'))\nvmregs$Sample = 'MIDUS'\nvjregs <- melt(midja_cs[,1:15], id.vars=c('MIDJA_IDS','sex','age','chol','creat','trig','BMI','sys','dias'))\nvjregs$Sample = 'MIDJA'\ncolnames(vjregs)[1]<-'M2ID'\n#vmjregs <- merge(vmregs,vjregs,by=c('M2ID','age','sex','chol','creat','BMI','sys','dias','trig','variable','value'))\nvmjregs <- rbind(vmregs,vjregs)\n\nsimp_mean=cbind(imp_mean$imputations$imp7[,1:2],apply(imp_mean$imputations$imp7[,3:20], c(2), scale))\n\nvcregs <- melt(simp_mean[,1:15], id.vars=c('Chimp','sex','age','chol','creat','trig','BMI','sys','dias'))\nvcregs$Sample = 'Yerkes'\ncolnames(vcregs)[1]<-'M2ID'\n\nvmjcregs <- rbind(vmjregs,vcregs)\n              \ncolnames(vmjcregs)[2:11]<-c('Sex','Age','Cholesterol','Creatinine','Triglycerides',\n                           'BMI','Systolic BP','Diastolic BP','Personality','Score')\n\n# one each for all the biomarkers ... i.e. long format\n\n# vcregs <- with(data=meandat,data.frame(Chimp=chimp,Sex=sex,Age=age,\n#                                        Cholesterol=chol,Creatinine=creatinine,Triglycerides=trig,\n#                                        BMI=BMI,Systolic=sys,Diastolic=dias,\n#                                        Dominance=dom,Extraversion=extra,Openness=open,\n#                                        Conscientiousness=cons,Agreeableness=agree,Neuroticism=neuro))\n#                                        \n\n\n### let the ggplotting fuck begin\n\n\nvregs <- ggplot(vmjcregs, aes(y=Cholesterol,x=Score,colour=Sample)) + \n  stat_smooth(method=lm \n            #  , formula=\"Cholesterol ~ Dominance + Neuroticism + Agreeableness + Extraversion + Conscientiousness + Openness\n            #  + Sex + BMI + Age + 1\"\n              ) #+ \n  facet_wrap(~Personality)\n\nvregs + geom_point()\n# vregs + geom_line(data=meandat, \n#               aes(ymin=lwr,ymax=upr)\n  \n#vregs + geom_abline(aes(intercept=coef(m.chol[1])), slope = coef(m.chol[5]))\n\n\n# new predictions for lmer's\n\n\ncForPreds <-  data.frame(scoutput[,6:11]\n  #,scoutput$age,scoutput$BMI,scoutput$sex\n  )\ncForPreds = data.frame(dom=scoutput$dom)\n\ncchol.d.preds = predict(m2.chol\n                        #scoutput[,6:11])\n                        #expand.grid(scoutput[,6:11],scoutput$age,scoutput$BMI,scoutput$sex)) # BE CAREFUL\n    #                    , newdata=cForPreds\n                        )\n\n\n\n\ncchol.preds = data.frame(\n  rbind(\n    cbind(Cholesterol=cchol.preds,lwr=cchol.preds-fixef(m2.chol)[2],upr=cchol.preds+fixef(m2.chol)[2],Dimension=\"Dominance\"),\n    cbind(Cholesterol=cchol.preds,lwr=cchol.preds-fixef(m2.chol)[3],upr=cchol.preds+fixef(m2.chol)[3],Dimension=\"Extraversion\")\n  ))\n\n\nvregs + geom_smooth(data=cchol.preds, aes(ymin=lwr,ymax=upr,fill='Yerkes'),alpha=0.3) #+              \n             \n              \n\nvregs <- ggplot(, aes(y=carat, x=price)) + facet_grid(. ~ cut)\nc + stat_smooth(method=lm, fullrange = TRUE) + geom_point()\nc + stat_smooth(method=lm) + geom_point\n  \n\n\n#library(ez)\n#cchol.preds = ezPredict(m2.chol)\ncchol.preds = confint(m2.chol)\n\nlibrary(effects)\n        \n              \n\nfixed.chol = data.frame(fixef(m2.chol))\n\nvregs + geom_abline(intercept=fixed.chol[1,1],slope=fixed.chol[5,1] + theme_bw())\n",
    "created" : 1421189848536.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "19877463",
    "id" : "B3747E69",
    "lastKnownWriteTime" : 1427325278,
    "path" : "~/GitHub/R/blood chemistry/visualize.R",
    "project_path" : "visualize.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}