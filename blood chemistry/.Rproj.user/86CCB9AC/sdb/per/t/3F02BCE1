{
    "contents" : "\nvif.mer <- function (fit) {\n  ## adapted from rms::vif\n  \n  v <- vcov(fit)\n  nam <- names(fixef(fit))\n  \n  ## exclude intercepts\n  ns <- sum(1 * (nam == \"Intercept\" | nam == \"(Intercept)\"))\n  if (ns > 0) {\n    v <- v[-(1:ns), -(1:ns), drop = FALSE]\n    nam <- nam[-(1:ns)]\n  }\n  \n  d <- diag(v)^0.5\n  v <- diag(solve(v/(d %o% d)))\n  names(v) <- nam\n  v\n}\n\nkappa.mer <- function (fit,\n                       scale = TRUE, center = FALSE,\n                       add.intercept = TRUE,\n                       exact = FALSE) {\n  X <- fit@pp$X\n  nam <- names(fixef(fit))\n  \n  ## exclude intercepts\n  nrp <- sum(1 * (nam == \"(Intercept)\"))\n  if (nrp > 0) {\n    X <- X[, -(1:nrp), drop = FALSE]\n    nam <- nam[-(1:nrp)]\n  }\n  \n  if (add.intercept) {\n    X <- cbind(rep(1), scale(X, scale = scale, center = center))\n    kappa(X, exact = exact)\n  } else {\n    kappa(scale(X, scale = scale, center = scale), exact = exact)\n  }\n}\n\ncolldiag.mer <- function (fit,\n                          scale = TRUE, center = FALSE,\n                          add.intercept = TRUE) {\n  ## adapted from perturb::colldiag, method in Belsley, Kuh, and\n  ## Welsch (1980).  look for a high condition index (> 30) with\n  ## more than one high variance propotion.  see ?colldiag for more\n  ## tips.\n  result <- NULL\n  if (center) \n    add.intercept <- FALSE\n  if (is.matrix(fit) || is.data.frame(fit)) {\n    X <- as.matrix(fit)\n    nms <- colnames(fit)\n  }\n  else if (class(fit) == \"mer\") {\n    nms <- names(fixef(fit))\n    X <- fit@X\n    if (any(grepl(\"(Intercept)\", nms))) {\n      add.intercept <- FALSE\n    }\n  }\n  X <- X[!is.na(apply(X, 1, all)), ]\n  \n  if (add.intercept) {\n    X <- cbind(1, X)\n    colnames(X)[1] <- \"(Intercept)\"\n  }\n  X <- scale(X, scale = scale, center = center)\n  \n  svdX <- svd(X)\n  svdX$d\n  condindx <- max(svdX$d)/svdX$d\n  dim(condindx) <- c(length(condindx), 1)\n  \n  Phi = svdX$v %*% diag(1/svdX$d)\n  Phi <- t(Phi^2)\n  pi <- prop.table(Phi, 2)\n  colnames(condindx) <- \"cond.index\"\n  if (!is.null(nms)) {\n    rownames(condindx) <- nms\n    colnames(pi) <- nms\n    rownames(pi) <- nms\n  } else {\n    rownames(condindx) <- 1:length(condindx)\n    colnames(pi) <- 1:ncol(pi)\n    rownames(pi) <- 1:nrow(pi)\n  }         \n  \n  result <- data.frame(cbind(condindx, pi))\n  zapsmall(result)\n}\n\nmaxcorr.mer <- function (fit,\n                         exclude.intercept = TRUE) {\n  so <- summary(fit)\n  corF <- so@vcov@factors$correlation\n  nam <- names(fixef(fit))\n  \n  ## exclude intercepts\n  ns <- sum(1 * (nam == \"Intercept\" | nam == \"(Intercept)\"))\n  if (ns > 0 & exclude.intercept) {\n    corF <- corF[-(1:ns), -(1:ns), drop = FALSE]\n    nam <- nam[-(1:ns)]\n  }\n  corF[!lower.tri(corF)] <- 0\n  maxCor <- max(corF)\n  minCor <- min(corF)\n  if (abs(maxCor) > abs(minCor)) {\n    zapsmall(maxCor)\n  } else {\n    zapsmall(minCor)\n  }\n}",
    "created" : 1421085808988.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "744080949",
    "id" : "3F02BCE1",
    "lastKnownWriteTime" : 1421085839,
    "path" : "C:/Users/s1229179/git-repos/R/blood chemistry/Drew version/mer-utils.R",
    "project_path" : "Drew version/mer-utils.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}