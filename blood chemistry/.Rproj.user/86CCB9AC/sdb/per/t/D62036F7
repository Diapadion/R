{
    "contents" : "install.packages(ggplot2)\nlibrary(ggplot2)\ndata(diamonds)\n\nrequire(Lock5Data)\ndata(RestaurantTips)\n\nfit = lm(Tip ~ Bill, data = RestaurantTips)\n\nd = data.frame(RestaurantTips, predict(fit, interval=\"prediction\"))\n\n\nggplot(d,aes(x=Bill,y=Tip)) + geom_point() + geom_smooth(method=\"lm\")\n\n\nggplot(d,aes(x=Bill,y=Tip)) +\n  geom_smooth(aes(ymin=lwr,ymax=upr,fill='confidence'),alpha=0.5) #+\n  #geom_smooth(method=\"lm\",aes(fill='confidence'),alpha=0.3) +\n  geom_smooth(method=\"lm\",se=FALSE,color='blue') +\n  geom_point() +\n  scale_fill_manual('Interval', values = c('green', 'yellow')) +\n  ylab('Tip (dollars)') +\n  xlab('Bill (dollars)')\n#  geom_point() + geom_smooth(method=\"lm\")\n\n\n\n\nlibrary(lme4)\nfit1 <- lmer(price ~ carat + depth + clarity + (1 | cut), data = diamonds)\nfit2 <- lm(price ~ carat, data = diamonds)  \nfit3 <- lm(price ~ depth + carat, data = diamonds)\n\nmerfit = predict(fit1, newdata = diamonds)\n\nDesignmat <- model.matrix(eval(eval(fit1$call$fixed)[-2]), merfit[-ncol(merfit)])\n\ndd = data.frame(diamonds, predict(fit1,interval='confidence'),predict(fit2,interval='confidence'),predict(fit3,interval='confidence'))\n\nlibrary(effects)\n\nEffect(\"carat\",fit1)\n\n\n\n\nlibrary(ez)\npreds1<-ezPredict(fit1)\n\n\n# -------s\n  \nggplot(dd, aes(x=carat, y=price)) + \n  geom_smooth(method=lm)\n\n\n  # Smoothers for subsets\n  c <- ggplot(dd, aes(y=carat, x=price)) + facet_grid(. ~ cut)\nc + stat_smooth(method=lm, fullrange = TRUE) + geom_point()\nc + stat_smooth(method=lm) + geom_point",
    "created" : 1427304477900.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4112359513",
    "id" : "D62036F7",
    "lastKnownWriteTime" : 1427313011,
    "path" : "C:/Users/s1229179/git-repos/R/blood chemistry/Drew version/labRwork.R",
    "project_path" : "Drew version/labRwork.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}