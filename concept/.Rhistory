]
source('~/.active-rstudio-document')
# Coltrane
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- coltRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(coltRaw)[1]){
picsIndex <- which(l == coltRaw[i,6])
picsList <- coltRaw[i,14]
size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2])
}
sizeSal <- cbind(sal,size)
# Augustus
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- augRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(augRaw)[1]){
picsIndex <- which(l == augRaw[i,6])
picsList <- lashRaw[i,14]
size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2])
}
sizeSal <- rbind(sizeSal,cbind(sal,size))
# Lashley
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- lashRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(lashRaw)[1]){
picsIndex <- which(l == lashRaw[i,6])
picsList <- lashRaw[i,14]
size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2])
}
sizeSal <- rbind(sizeSal,cbind(sal,size))
sizeSal[1,
]
sizeSal[1000,
]
sizeSal[2000,]
sizeSal[3000,]
sizeSal[4000,]
sizeSal[5000,]
# Augustus
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- augRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(augRaw)[1]){
picsIndex <- which(l == augRaw[i,6])
picsList <- lashRaw[i,14]
size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2])
}
sizeSal <- rbind(sizeSal,cbind(sal,size))
for (i in 1:dim(augRaw)[1]){
picsIndex <- which(l == augRaw[i,6])
picsList <- lashRaw[i,14]
size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2])
}
dim(sal)
dim(size)
# Augustus
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- augRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(augRaw)[1]){
picsIndex <- which(l == augRaw[i,6])
picsList <- augRaw[i,14]
size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2])
}
sizeSal <- rbind(sizeSal,cbind(sal,size))
library("lme4", lib.loc="C:/Users/Public/Documents/R")
sizeSal[1,]
sizeSal[,1]
sizeSal[1,]
ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2])
ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2]
ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],c(2,3)]
source('C:/Users/s1229179/Dropbox/R/concept/sizeSaliency.R')
source('~/.active-rstudio-document')
sizeSal[1,]
size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2:3)
size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2:3)
size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2:3])
size
size[1,]
size[1]
size[,1
]
dim(size)
length(size)
ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2:3]
ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],c(2,3)]
size=rbind(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2:3)
size=rbind(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2:3])
size=rbind(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2],ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3])
# Lashley
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- lashRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(lashRaw)[1]){
picsIndex <- which(l == lashRaw[i,6])
picsList <- lashRaw[i,14]
size=rbind(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2],ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3])
}
sizeSal <- rbind(sizeSal,cbind(sal,size))
source('~/.active-rstudio-document')
library(lme4)
sizeSal[1,]
source('C:/Users/s1229179/Dropbox/R/concept/sizeSaliency.R')
sizeSal[1,]
ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3]
ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3]
size
# Lashley
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- lashRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(lashRaw)[1]){
picsIndex <- which(l == lashRaw[i,6])
picsList <- lashRaw[i,14]
size=rbind(size,cbind(ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2],ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3]))
}
sizeSal <- rbind(sizeSal,cbind(sal,size))
# Lashley
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- lashRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(lashRaw)[1]){
picsIndex <- which(l == lashRaw[i,6])
picsList <- lashRaw[i,14]
size=cbind(size,rbind(ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2],ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3]))
}
sizeSal <- rbind(sizeSal,cbind(sal,size))
lashRaw <- lashRaw[,1:16]
# saliency
ssIn = read.csv("ecoSaliencySize.csv", header = TRUE)
sizeSal <- NULL
## building the matrix
# accuracy ~ subject, trial, saliency, category
# Coltrane
sal <- NULL
size <- NULL
# Lashley
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- lashRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(lashRaw)[1]){
picsIndex <- which(l == lashRaw[i,6])
picsList <- lashRaw[i,14]
size=cbind(size,rbind(ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2],ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3]))
}
sizeSal <- rbind(sizeSal,cbind(sal,size))
sizeSal
size
sal
size
col.names(size)
col(sizes)
col(size)
rbind(l,size[,2607])
# Lashley
sal <- NULL
size <- NULL
# subj, trial, correctItem, accuracy
sal <- lashRaw[c(1,4,6,8)]
l <-list('A','B','C','D')
for (i in 1:dim(lashRaw)[1]){
picsIndex <- which(l == lashRaw[i,6])
picsList <- lashRaw[i,14]
size=rbind(size,cbind(ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2],ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3]))
}
sizeSal <- rbind(sizeSal,cbind(sal,size))
source('C:/Users/s1229179/Dropbox/R/concept/sizeSaliency.R')
sizeSal[1,]
model <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])
)
model
??Anova
library("car", lib.loc="C:/Users/Public/Documents/R")
Anova(model)
summary(model)
install.packages("mlmRev")
model2 <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (sizeSal[,5] | sizeSal[,6]))
summary(model2)
Anova(model2)
model3 <- lmer(1 + sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (sizeSal[,5] | sizeSal[,6]))
library(lme4)
library(car)
model3 <- lmer(1 + sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (sizeSal[,5] | sizeSal[,6]))
summary(model3)
summary(model)
Anova(model3)
model3 <- lmer(1 + sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1] / sizeSal[,6]) + (sizeSal[,5] | sizeSal[,6]))
model3 <- lmer(1 + sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1] / sizeSal[,6])
#+ (sizeSal[,5] | sizeSal[,6])
)
model3 <- lmer(1 + sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1] / sizeSal[,6])
#+ (sizeSal[,5] | sizeSal[,6])
)
summary(model)
library("afex", lib.loc="C:/Users/Public/Documents/R")
mixed(model)
mixed(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6]))
mixed(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])
data = sizeSal
)
mixed(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])
,data = sizeSal
)
Anova(model)
Manova(model)
Anova(model, type = "II")
anova(model)
model4 <- lmer(sizeSal[,4] ~ sizeSal[,5])
model4 <- lm(sizeSal[,4] ~ sizeSal[,5])
summary(model4)
model4 <- lmer(sizeSal[,4] ~ sizeSal[,5] + (sizeSal[,5] | sizeSal[,6]))
summary(model4)
Anova(model4)
summary(model)
summary(model)
Anova(model)
source('C:/Users/s1229179/Dropbox/R/concept/sizeSaliency.R')
mixed(model)
library(afex)
library(car)
library(lme4)
mixed(model)
mixed(model,data=sizeSal)
summary(model)
Anova(model)
model5 <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + sizeSal[,6] + (1 | sizeSal[,1]))
summary(model5)
Anova(model5)
model2 <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 | sizeSal[,6]))
Anova(model,model2)
anova(model,model2)
Anova(model2)
Anova(model2)
Anova(model)
confint.merMod(model)
library(pbkrtest)
bootMer(model)
library(boot)
ci(model)
boot.ci(model)
source('C:/Users/s1229179/Dropbox/R/concept/sizeSaliency.R')
Anova(model)
sizeSal <- rbind(sizeSal,cbind(sal,size))
sal <- lashRaw[c(1,4,6,8)]
source('~/.active-rstudio-document')
model <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6]))
??optimx
summary(model)
source('C:/Users/s1229179/Dropbox/R/concept/stimImp.R')
??entropy
library("entropy", lib.loc="C:/Users/Public/Documents/R")
source('C:/Users/s1229179/Dropbox/R/concept/stimImp.R')
library("jpeg", lib.loc="C:/Users/Public/Documents/R")
source('~/.active-rstudio-document')
smrD
for (i in 0:49){
bTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg",sep="")), method="ML")
}
bTstAr <- NULL
for (i in 0:49){
bTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg",sep="")), method="ML")
}
smrBTst<- c(summary(bTstAr)[3:4],sd(bTstAr))
smrBTst
bTstAr
cTstAr <- NULL
for (i in 50:98){
cTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg",sep="")), method="ML")
}
smrCTst <- c(summary(cTstAr)[3:4],sd(cTstAr))
smrCTst
bTstAr <- NULL
cTstAr <- NULL
fTstAr <- NULL
pTstAr <- NULL
for (i in 0:49){
pTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg",sep="")), method="ML")
}
for (i in 50:98){
fTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg",sep="")), method="ML")
}
for (i in 100:148){
cTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
for (i in 150:198){
bTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
smrPTst <- c(summary(pTstAr)[3:4],sd(pTstAr))
smrFTst <- c(summary(fTstAr)[3:4],sd(fTstAr))
smrBTst <- c(summary(bTstAr)[3:4],sd(bTstAr))
smrCTst <- c(summary(cTstAr)[3:4],sd(cTstAr))
bTstAr <- NULL
cTstAr <- NULL
fTstAr <- NULL
pTstAr <- NULL
for (i in 0:49){
pTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg",sep="")), method="ML")
}
for (i in 50:98){
fTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg",sep="")), method="ML")
}
for (i in 100:148){
cTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
for (i in 150:198){
bTstAr[i] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
smrPTst <- c(summary(pTstAr)[3:4],sd(pTstAr))
smrFTst <- c(summary(fTstAr)[3:4],sd(fTstAr))
smrBTst <- c(summary(bTstAr)[3:4],sd(bTstAr))
smrCTst <- c(summary(cTstAr)[3:4],sd(cTstAr))
bTstAr
cTstAr
pTstAr
length(pTSTAr)
length(pTstAr)
dTstAr <- NULL
vTstAr <- NULL
mTstAr <- NULL
jTstAr <- NULL
for (i in 200:224){
dTstAr[i+1] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
for (i in 250:274){
jTstAr[i-49] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
for (i in 300:324){
mTstAr[i-99] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
for (i in 350:374){
vTstAr[i-149] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
smrDTst <- c(summary(dTstAr)[3:4],sd(dTstAr))
smrJTst <- c(summary(jTstAr)[3:4],sd(jTstAr))
smrMTst <- c(summary(mTstAr)[3:4],sd(mTstAr))
smrVTst <- c(summary(vTstAr)[3:4],sd(vTstAr))
BTstAr
bTstAr
for (i in 150:198){
bTstAr[i-149] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
bTstAr
# testing set
bTstAr <- NULL
cTstAr <- NULL
fTstAr <- NULL
pTstAr <- NULL
for (i in 0:49){
pTstAr[i+1] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg",sep="")), method="ML")
}
for (i in 50:98){
fTstAr[i-49] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg",sep="")), method="ML")
}
for (i in 100:148){
cTstAr[i-99] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
for (i in 150:198){
bTstAr[i-149] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
smrPTst <- c(summary(pTstAr)[3:4],sd(pTstAr))
smrFTst <- c(summary(fTstAr)[3:4],sd(fTstAr))
smrBTst <- c(summary(bTstAr)[3:4],sd(bTstAr))
smrCTst <- c(summary(cTstAr)[3:4],sd(cTstAr))
###
dTstAr <- NULL
vTstAr <- NULL
mTstAr <- NULL
jTstAr <- NULL
for (i in 200:224){
dTstAr[i-199] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
for (i in 250:274){
jTstAr[i-249] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
for (i in 300:324){
mTstAr[i-299] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
for (i in 350:374){
vTstAr[i-349] <- entropy(readJPEG(paste("C:/Users/Public/Pictures/test stimuli/sc.1",formatC(i,width=4,flag="0"),".jpg.jpg",sep="")), method="ML")
}
smrDTst <- c(summary(dTstAr)[3:4],sd(dTstAr))
smrJTst <- c(summary(jTstAr)[3:4],sd(jTstAr))
smrMTst <- c(summary(mTstAr)[3:4],sd(mTstAr))
smrVTst <- c(summary(vTstAr)[3:4],sd(vTstAr))
smrBTst
smrPTst
smrFTst
smrCTst
chisq.test(pTstAr,fTstAr)
chisq.test(c(pTstAr,fTstAr)
)
chisq.test(c(pTstAr,bTstAr)
)
ks.test(pTstAr,fTstAr)
ks.test(pTstAr,bTstAr)
smrV
ks.test(vTstAr,dTstAr)
ks.test(gTstAr,dTstAr)
ks.test(jTstAr,dTstAr)
ks.test(jTstAr,mTstAr)
ks.test(jTstAr,vTstAr)
ks.test(mTstAr,dTstAr)
ks.test(daliAr,vangAr)
ks.test(daliAr,geromeAr)
smrB
smrBTst
smrC
smrCTst
range
range(birdsAr)
range(daliAr)
range(peopleAr)
range(peoplAr)
range(pArTst)
range(pTstAr)
#           accuracy        trial         saliency           subject                            category
godel <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])
, family = 'binomial'
)
, family = 'binomial'
library(lme4)
source('~/.active-rstudio-document')
summary(godel)
Anova(godel)
readJPEG(paste("C:/Users/Public/Pictures/pics.categories/birds.",formatC(1,width=4,flag="0"),".jpg",sep="")), method="ML")
readJPEG(paste("C:/Users/Public/Pictures/pics.categories/birds.",formatC(1,width=4,flag="0"),".jpg",sep=""))
library(jpeg)
readJPEG(paste("C:/Users/Public/Pictures/pics.categories/birds.",formatC(1,width=4,flag="0"),".jpg",sep=""))
explPic <- readJPEG(paste("C:/Users/Public/Pictures/pics.categories/birds.",formatC(1,width=4,flag="0"),".jpg",sep=""))
entropy(explPic[,,1])
library(entropy)
entropy(explPic[,,1], method = 'ML')
entropy(explPic[,,2], method = 'ML')
entropy(explPic[,,3], method = 'ML')
explPic[,,1]
image(explPic[,,1])
image(explPic[,,2])
image(explPic[,,3])
image(explPic[,,1])
image(explPic[,,4])
image(explPic[,,1])
explPic <- readJPEG(paste("C:/Users/Public/Pictures/pics.categories/birds.",formatC(1,width=4,flag="0"),".jpg",sep=""))
explPic <- readJPEG(paste("C:/Users/Public/Pictures/pics.categories/birds.",formatC(1,width=4,flag="0"),".jpg",sep=""))
epl1 <- entropy(explPic[,,1])
exptrop <- entropy(explPic)
epl2 <- entropy(explPic[,,2])
epl1 <- entropy(explPic[,,1])
epl3 <- entropy(explPic[,,3])
exp1
epl1
epl2
epl3
exptrop
ranef(godel)
xoef(godel)
coef(godel)
ranef(model)
coef(model)
summary(model)
summary(godel)
Anova(model)
vcov(model)
fixef(model)
fixef(godel)
install.packages("robustlmm")
install.packages("robustlmm")
library("robustlmm", lib.loc="C:/Users/Public/Documents/R")
rodeo <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6]))
summary(rodeo)
Anova(godel)
godel2 <- glmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 + sizeSal[,2]| sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])
, family = 'binomial'
)
summary(godel2)
)
godel2 <- glmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 + sizeSal[,2]| sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])
, family = 'binomial'
)
summary(godel2)
summary(godel)
coef(godel2)
ssIn = read.csv("ecoSaliencySizeNew.csv", header = TRUE)
model <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6]))
summary(model)
godel <- glmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])
, family = 'binomial'
)
summary(godel)
godel3 <- glmer(sizeSal[,4] ~ sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])
, family = 'binomial'
)
