{
    "contents" : "### MLM analysis of ecological concept image size-saliency\n\n## importing data\nlibrary(plyr)\n\n# performance\ntabletop = c('Sub','Date','Press','Trial','ItemPressed','CorrectItem','Progress','PressAccuracy','TrialAccuracy','RT','SessionTime','TotalTime','ListNum','ListPics','ItemsInList','NumLists','CorrectionProcedure','ex1','ex2','ex3','ListType','PortPressed','CorrectPort','PicturePressed','Chamber','TrialsPerSession','TO','ITI','Label','Ports','Used','v1','v2','v3','v4','v5','v6','v7','v8','v9','v10','v11','v12','v13','v14','v15')\n\n#Aug = read.table(\"SCrawdata/SimChain.Augustus.3%3A10%3A11\", header=FALSE, skip=1, sep=\"\\t\",\n#                  col.names=c('Sub','Date','Press','Trial','ItemPressed','CorrectItem','Progress','PressAccuracy','TrialAccuracy','RT','SessionTime','TotalTime','ListNum','ListPics','ItemsInList','NumLists','CorrectionProcedure','ex1','ex2','ex3','ListType','PortPressed','CorrectPort','PicturePressed','Chamber','TrialsPerSession','TO','ITI','Label','Ports','Used','v1','v2','v3','v4','v5','v6','v7','v8','v9','v10','v11','v12','v13','v14','v15'))\n#                   quote = \"\\\"'\",as.is = !stringsAsFactors,\n#                   na.strings = \"NA\", colClasses = NA, nrows = -1,\n#                   skip = 0, check.names = TRUE, fill = !blank.lines.skip,\n#                   strip.white = FALSE, blank.lines.skip = TRUE,\n#                   comment.char = \"#\",\n#                   allowEscapes = FALSE, flush = FALSE,\n#                   stringsAsFactors = default.stringsAsFactors(),\n#                   fileEncoding = \"\", encoding = \"unknown\", text)\n\n\naugRaw = ldply(list(\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A10%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A11%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A15%3A11\", header=FALSE, skip=2, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A16%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A17%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A18%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A21%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A22%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A23%3A11.1\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A24%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A25%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A29%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A30%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.3%3A31%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.4%3A1%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.4%3A11%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.4%3A4%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.4%3A5%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.4%3A6%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.4%3A7%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop),\n  read.table(\"SCrawdata/SimChain.Augustus.4%3A8%3A11\", header=FALSE, skip=1, sep=\"\\t\", col.names=tabletop)\n      ))\n\ncoltRaw = ldply(list(\n  read.table(\"SCrawdata//SimChain.Coltrane.2%3A15%3A11.1\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.2%3A16%3A11.1\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.2%3A17%3A11.1\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.2%3A18%3A11.1\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.2%3A22%3A11.1\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.2%3A23%3A11.1\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.2%3A24%3A11.1\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.2%3A25%3A11.1\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.2%3A28%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A1%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A10%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A11%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A15%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A16%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A17%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A18%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A2%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A21%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n#  read.table(\"SCrawdata//SimChain.Coltrane.3%3A22%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A3%3A11.1\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Coltrane.3%3A7%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop)\n    \n  ))\n\nlashRaw = ldply(list(\n  read.table(\"SCrawdata//SimChain.Lashley.1%3A26%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.1%3A27%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.1%3A28%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.1%3A31%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.12%3A10%3A10\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop[-31:-46]),\n  read.table(\"SCrawdata//SimChain.Lashley.12%3A14%3A10\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop[-31:-46]),\n  read.table(\"SCrawdata//SimChain.Lashley.12%3A15%3A10\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop[-31:-46]),\n  read.table(\"SCrawdata//SimChain.Lashley.12%3A16%3A10\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop[-31:-46]),\n  read.table(\"SCrawdata//SimChain.Lashley.12%3A17%3A10\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop[-31:-46]),\n  read.table(\"SCrawdata//SimChain.Lashley.12%3A6%3A10\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop[-31:-46]),\n  read.table(\"SCrawdata//SimChain.Lashley.12%3A7%3A10\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop[-31:-46]),\n  read.table(\"SCrawdata//SimChain.Lashley.12%3A8%3A10\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop[-31:-46]),\n  read.table(\"SCrawdata//SimChain.Lashley.12%3A9%3A10\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop[-31:-46]),\n  read.table(\"SCrawdata//SimChain.Lashley.2%3A9%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.2%3A7%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.2%3A4%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.2%3A3%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.2%3A2%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.2%3A10%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop),\n  read.table(\"SCrawdata//SimChain.Lashley.2%3A1%3A11\", header=FALSE, skip=1, sep=\"\\t\",col.names=tabletop)\n\n))\n\nlashRaw <- lashRaw[,1:16]\n\n\n# saliency\nssIn = read.csv(\"ecoSaliencySizeNew.csv\", header = TRUE)\n\nsizeSal <- NULL\n\n## building the matrix\n# accuracy ~ subject, trial, saliency, category\n\n\n# Coltrane\nsal <- NULL\nsize <- NULL\n\n# subj, trial, correctItem, accuracy\nsal <- coltRaw[c(1,4,6,8)]\n\nl <-list('A','B','C','D')\nfor (i in 1:dim(coltRaw)[1]){\n  picsIndex <- which(l == coltRaw[i,6])\n  picsList <- coltRaw[i,14]\n  #size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],c(2,3)])\n  size=rbind(size,cbind(ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2],ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3]))\n  \n    \n}\nsizeSal <- cbind(sal,size)\n\n\n# Augustus\nsal <- NULL\nsize <- NULL\n\n# subj, trial, correctItem, accuracy\nsal <- augRaw[c(1,4,6,8)]\n\nl <-list('A','B','C','D')\nfor (i in 1:dim(augRaw)[1]){\n  picsIndex <- which(l == augRaw[i,6])\n  picsList <- augRaw[i,14]\n  #size=c(size,ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],c(2,3)])\n  size=rbind(size,cbind(ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2],ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3]))\n  \n}\nsizeSal <- rbind(sizeSal,cbind(sal,size))\n\n\n# Lashley\nsal <- NULL\nsize <- NULL\n\n# subj, trial, correctItem, accuracy\nsal <- lashRaw[c(1,4,6,8)]\n\nl <-list('A','B','C','D')\nfor (i in 1:dim(lashRaw)[1]){\n  picsIndex <- which(l == lashRaw[i,6])\n  picsList <- lashRaw[i,14]\n  size=rbind(size,cbind(ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],2],ssIn[ssIn$imageName==strsplit(as.character(picsList),' ')[[1]][picsIndex],3]))\n  \n}\nsizeSal <- rbind(sizeSal,cbind(sal,size))\n\n\nlibrary(lme4)\nlibrary(car)\n#           accuracy        trial         saliency           subject                            category\nmodel <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6]))\n\n#model2 <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (sizeSal[,5] | sizeSal[,6]))\n# model2 <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 | sizeSal[,6]))\n# \n# \n# model3 <- lmer(1 + sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1] / sizeSal[,6])\n#                #+ (sizeSal[,5] | sizeSal[,6])\n#                )\n# \n# \n# model4 <- lmer(sizeSal[,4] ~ sizeSal[,5] + (sizeSal[,5] | sizeSal[,6]))\n# \n# model5 <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + sizeSal[,6] + (1 | sizeSal[,1]))\n  \n\n\n#library(afex)\n# mixed(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])\n#       ,data = sizeSal\n#       )\n\n\n### glmer for using logit family link function\n\n#           accuracy        trial         saliency           subject                            category\ngodel <- glmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])\n              , family = 'binomial'\n              )\n#rodeo <- lmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6]))\n\ngodel2 <- glmer(sizeSal[,4] ~ sizeSal[,2] + sizeSal[,5] + (1 + sizeSal[,2]| sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])\n               , family = 'binomial'\n)\n\ngodel3 <- glmer(sizeSal[,4] ~ sizeSal[,5] + (1 | sizeSal[,1]) + (1 + sizeSal[,5] | sizeSal[,6])\n, family = 'binomial'\n)\n",
    "created" : 1403088490127.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "910124545",
    "id" : "5D1D36C9",
    "lastKnownWriteTime" : 1409669018,
    "path" : "C:/Users/s1229179/Dropbox/R/concept/sizeSaliency.R",
    "project_path" : "sizeSaliency.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}