summary(mp1)
## Split by sex
set.seed(1234567)
mp2.sx <- lmer(fWHR ~  Sex*Dom_CZ +
# Sex*Ext_CZ + Sex*Con_CZ + Sex*Agr_CZ + Sex*Neu_CZ + Sex*Opn_CZ +
Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | Subspecies) + (1 | ID:Subspecies)
,data = chFP[adults,]
)
summary(mp2.sx)
confint(mp2.sx)
ICtab(mp1, mp2.sx,
type='AIC',
weights=TRUE, logLik=TRUE, sort=TRUE
)
mp3.v.sx = lmer(fWHR ~ Sex*Dom_CZ +
# Sex*Ext_CZ + Sex*Con_CZ + Sex*Agr_CZ + Sex*Neu_CZ + Sex*Opn_CZ +
Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID)
,data = chFP[adults&chFP$Subspecies=='verus',]
)
''
()
``
`
'
)
))
)))
()
"
''
install_github("patr1ckm/mvtboost")
find.int$rank.list
chFP$verus = 0
chFP$verus[chFP$Subspecies=='verus'] = 1
summary(gbmi.test)
gb.mm.1 = lmer(fWHR ~ verus * Neu_CZ +
(1 | location) +  (1 | ID), data=chFP
)
summary(gb.mm.1)
install_github("patr1ckm/mvtboost")
install_github("patr1ckm/mvtboost")
install.packages("gbm")
?gbm
library(gbm)
library(mvtboost)
set.seed(1234567)
met.1 = metb(chFP$fWHR, chFP[,c(8:9,20:26)], id=c("ID","location")
distribution = 'gaussian', cv.folds=10,
interaction.depth=3, n.trees=10000,
indep=FALSE, mc.cores=3
)
met.1 = metb(chFP$fWHR, chFP[,c(8:9,20:26)], id=c("ID","location"),
distribution = 'gaussian', cv.folds=10,
interaction.depth=3, n.trees=10000,
indep=FALSE, mc.cores=3
)
met.1 = metb(chFP$fWHR, chFP[,c(8:9,20:26)], id=c("ID"),#,"location"),
distribution = 'gaussian', cv.folds=10,
interaction.depth=3, n.trees=10000,
indep=FALSE, mc.cores=1
)
met.1 = metb(chFP$fWHR, chFP[,c(8:9,20:26)], id=c("ID"),#,"location"),
distribution = 'gaussian', cv.folds=10,
interaction.depth=3, n.trees=10000,
indep=FALSE, mc.cores=1
)
met.1 = metb(chFP$fWHR, chFP[,c(8:9,20:26)], id=c("ID"),#,"location"),
distribution = 'gaussian', cv.folds=10,
interaction.depth=3, n.trees=10000,
indep=FALSE, mc.cores=1
)
met.1 = metb(chFP$fWHR, chFP[,c(8:9,20:26)], id=c("ID"),#,"location"),
distribution = 'gaussian', cv.folds=10,
interaction.depth=3, n.trees=10000,
indep=TRUE, mc.cores=1
)
met.1 = metb.fit(chFP$fWHR, chFP[,c(8:9,20:26)], id=c("ID"),#,"location"),
distribution = 'gaussian', cv.folds=10,
interaction.depth=3, n.trees=10000,
indep=TRUE, mc.cores=1
)
data(wellbeing)
View(wellbeing)
colnames(wellbeing)
metest = metb(wellbeing$autonomy, wellbeing[,c(4:19,21:26)],id=c('educ'),
distribution = 'gaussian', cv.folds=10,
interaction.depth=3, n.trees=10000,
indep=TRUE, mc.cores=1
)
metest = metb(wellbeing$autonomy, wellbeing[,c(4:19,21:26)],id=c('educ'),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=10000,
indep=TRUE, mc.cores=1
)
metest = metb(wellbeing$autonomy, wellbeing[,c(4:19,21:26)],id='educ',
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=10000,
indep=TRUE, mc.cores=1
)
metest = metb(wellbeing$autonomy, wellbeing[,c(3:19,21:26)],id='educ',
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=10000,
indep=TRUE, mc.cores=1
)
colnames(chFP)
met.1 = metb(chFP$fWHR, chFP[,c(1:2,8:9,20:26)], id=c("ID"),#,"location"),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=1000,
indep=TRUE, mc.cores=1
)
summary(met.1)
met.1 = metb(chFP$fWHR, chFP[,c(1:2,8:9,20:26)], id=c("ID","location"),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=1000,
indep=TRUE, mc.cores=1
)
metest = metb(wellbeing$autonomy, wellbeing[,c(1:19,21:26)],id=('educ'),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=100,
indep=TRUE, mc.cores=1
)
summary(metest)
metest = metb(wellbeing$autonomy, wellbeing[,c(1:20,22:26)],id=('educ'),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=100,
indep=TRUE, mc.cores=1
)
summary(metest)
metest.lonli = metb(wellbeing$autonomy, wellbeing[,c(1:19,21:26)],id=('educ'),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=100,
indep=TRUE, mc.cores=1
)
metest.lonli = metb(wellbeing$autonomy, wellbeing[,c(1:19,21:26)],id=('educ','gender'),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=100,
indep=TRUE, mc.cores=1
)
metest.lonli = metb(wellbeing$autonomy, wellbeing[,c(1:19,21:26)],id=c('educ','gender'),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=100,
indep=TRUE, mc.cores=1
)
summary(metest.lonli)
metest.lonli = metb(wellbeing$lonlnes, wellbeing[,c(1:19,21:26)],id=c('educ','gender'),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=100,
indep=TRUE, mc.cores=1
)
metest.lonli = metb(wellbeing$lonlnes, wellbeing[,c(1:19,21:26)],id=c('educ'),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=100,
indep=TRUE, mc.cores=1
)
metest.lonli = metb(wellbeing$lonlnes[!is.na(wellbeing$lonlnes)],
wellbeing[!is.na(wellbeing$lonlnes),c(1:19,21:26)],
id=c('educ'),
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=100,
indep=TRUE, mc.cores=1
)
summary(metest.lonli)
met.1 = metb(chFP$fWHR, chFP[,c(1:2,8:9,20:26)], id="ID",
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=3000,
indep=TRUE, mc.cores=1
)
summary(met.1)
met.1 = metb(chFP$fWHR, chFP[,c(1,8:9,20:26)], id="ID",
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=3000,
indep=TRUE, mc.cores=1
)
met.2 = metb(chFP$fWHR, chFP[,c(2,8:9,20:26)], id="location",
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=3000,
indep=TRUE, mc.cores=1
)
summary(met.1)
met.2 = metb(chFP$fWHR, chFP[,c(2,8:9,20:26)], id="location",
distribution = 'gaussian', cv.folds=1,
interaction.depth=3, n.trees=3000,
indep=TRUE, mc.cores=1
)
summary(met.2)
library(psych)
gb.mm.1 = lmer(fWHR ~ verus * Neu_CZ +
(1 | location) +  (1 | ID), data=chFP
)
library(psych)
n.factors(wellbeing)
nfactors(wellbeing)
nfactors(wellbeing[,c(5:26)])
library(lme4)
gb.mm.1 = lmer(fWHR ~ verus * Neu_CZ + Age +
(1 | location) +  (1 | ID), data=chFP
)
chFP$verus = 0
chFP$verus[chFP$Subspecies=='verus'] = 1
gb.mm.1 = lmer(fWHR ~ verus * Neu_CZ + Age +
(1 | location) +  (1 | ID), data=chFP
)
summary(gb.mm.1)
gb.mm.1 = lmer(fWHR ~ verus + Neu_CZ * Age + Dom_VZ * Age + Ext_CZ * Age + Opn_CZ * Age
(1 | location) +  (1 | ID), data=chFP
)
gb.mm.1 = lmer(fWHR ~ verus + Neu_CZ * Age + Dom_CZ * Age + Ext_CZ * Age + Opn_CZ * Age
(1 | location) +  (1 | ID), data=chFP
)
gb.mm.1 = lmer(fWHR ~ verus + Neu_CZ * Age + Dom_CZ * Age + Ext_CZ * Age + Opn_CZ * Age +
(1 | location) +  (1 | ID), data=chFP
)
summary(gb.mm.1)
find.int$rank.list
find.int$interactions
summary(gbmi.test)
library(dismo)
set.seed(1234567)
gbmi.test = gbm.step(chFP, c(8:9,20:26), 12,
family='gaussian',n.trees=1000, step.size = 100, max.trees=20000,
tree.complexity=5, learning.rate=0.001, bag.fraction=0.5,
verbose=FALSE
)
detach("package:gbm", unload=TRUE)
detach("package:mvtboost", unload=TRUE)
detach("package:gbm", unload=TRUE)
library(dismo)
set.seed(1234567)
gbmi.test = gbm.step(chFP, c(8:9,20:26), 12,
family='gaussian',n.trees=1000, step.size = 100, max.trees=20000,
tree.complexity=5, learning.rate=0.001, bag.fraction=0.5,
verbose=FALSE
)
library(MuMIn)
drg.1 = dredge(gb.mm.1, beta='none'), evaluate=TRUE)
drg.1 = dredge(gb.mm.1, beta='none', evaluate=TRUE)
drg.1 = dredge(mp1, beta='none', evaluate=TRUE)
install.packages("LMERConvenienceFunctions")
library(LMERConvenienceFunctions)
set.seed(1234567)
m0 <- lmer(fWHR ~ 1 +
(1 | location) + (1 | Subspecies) + (1 | ID:Subspecies)
,data=chFP[adults,]
)
library(lme4)
summary(m0)
m0 <- lmer(fWHR ~ 1 +
(1 | location) + (1 | Subspecies) + (1 | ID:Subspecies)
,data=chFP[adults,]
)
m0r0 <- lmer(fWHR ~ 1,data=chFP[adults,])
m0r1 <- lmer(fWHR ~ 1 + (1|ID),data=chFP[adults,])
ffRanefLMER.fnc(m0r1,
ran.effects=c("1|location","1|subspecies"))
colnames(fWHR)
colnames(chFP)
ffRanefLMER.fnc(m0r1,
ran.effects=c("1|location","1|Subspecies"))
ffRanefLMER.fnc(m0r1,
ran.effects=c("1|Subspecies"))
raneval <- ffRanefLMER.fnc(m0r1,
ran.effects=c("1|Subspecies"))
raneval
summary(raneval)
m0r1 <- lmer(fWHR ~ 1 + (1|ID),data=chFP[adults,])
raneval <- ffRanefLMER.fnc(m0r1,
ran.effects=c("1|Subspecies"))
mean(table(chFP$ID[chFP$location=='Edinburgh']))
sd(table(chFP$ID[chFP$location=='Edinburgh']))
table(chFP$ID[chFP$location=='Edinburgh'])
?dropLevels
?droplevels()
sd(table(droplevels(chFP$ID[chFP$location=='Edinburgh'])))
mean(table(droplevels(chFP$ID[chFP$location=='Edinburgh'])))
mean(table(droplevels(chFP$ID[chFP$location=='Japan'])))
sd(table(droplevels(chFP$ID[chFP$location=='Japan'])))
chFP$fWHR[chFP$ID=='Lennon']
mean(chFP$fWHR)
sd(chFP$fWHR)
mean(chFP$fWHR[!duplicated(chFP$ID)], na.rm=TRUE) # Mean age
sd(chFP$fWHR[!duplicated(chFP$ID)], na.rm=TRUE) # SD age
chFP$fWHR[chFP$ID=='Lennon']
chFP$fWHR[chFP$ID=='Lennon'][1]
chFP$fWHR[chFP$ID=='Lennon'][1] - mean(chFP$fWHR[!duplicated(chFP$ID)])
(chFP$fWHR[chFP$ID=='Lennon'][1] - mean(chFP$fWHR[!duplicated(chFP$ID)]) ) / sd(chFP$fWHR[!duplicated(chFP$ID)])
chFP$Subspecies[!adults]
chFP$Subspecies[!adults & !duplicated(chFP$ID)]
chFP$Subspecies[chFP$ID=='Lennon']
library(lme4)
library("brms", lib.loc="C:/R/library")
vingette("brms-multilevel")
vignette("brms-multilevel")
vignette("brms_multilevel")
Sys.getnv('PATH')
Sys.getenv('PATH')
system('g++ -v')
system('where make')
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR))
dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M))
file.create(M)
cat("\nCXXFLAGS=-O3 -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/RBuildTools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat("\nCXXFLAGS += -flto -Wno-ignored-attributes -Wno-deprecated-declarations",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
detach("package:brms", unload=TRUE)
detach("package:Rcpp", unload=TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
install.packages("rstan", repos = "http://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
cat('Sys.setenv(BINPREF = "C:/RBuildTools/3.4/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat("\nCXXFLAGS += -flto -Wno-ignored-attributes -Wno-deprecated-declarations",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
system('where make')
system('g++ -v')
Sys.getenv('PATH')
Sys.getenv('PATH')
system('g++ -v')
system('where make')
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
cat("\nCXXFLAGS += -Wno-ignored-attributes -Wno-deprecated-declarations",
file = M, sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR))
dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M))
file.create(M)
cat("\nCXXFLAGS=-O3 -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/RBuildTools/3.4/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
file.create(M)
cat(M)
dotR <- file.path(Sys.getenv("HOME"), ".R")
if (!file.exists(dotR))
dir.create(dotR)
M <- file.path(dotR, "Makevars")
if (!file.exists(M))
file.create(M)
cat("\nCXXFLAGS=-O3 -Wno-unused-variable -Wno-unused-function",
file = M, sep = "\n", append = TRUE)
cat('Sys.setenv(BINPREF = "C:/RBuildTools/3.4/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
cat(readLines(M), sep = "\n")
cat(M)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 ) # should be 10
library(rstan)
library(brms)
set.seed(1234567)
b0.fw <- brm(fWHR ~ 1 +
(1 | location) + (1 | Subspecies) + (1 | ID:Subspecies)
,data=chFP[adults,],
warmup = 3000, iter = 5000
)
summary(m0)
summary(b0.fw)
pairs9(b0.fw)
pairs(b0.fw)
set.seed(1234567)
b0.fw <- brm(fWHR ~ 1 +
(1 | location) + (1 | Subspecies) + (1 | ID:Subspecies)
,data=chFP[adults,],
warmup = 3000, iter = 7000,
control = list(adapt_delta = 0.9)
)
pairs(b0.fw)
summary(b0.fw)
set.seed(1234567)
bp1.fw <- brm(fWHR ~ Age + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | Subspecies) + (1 | ID:Subspecies)
,data = chFP[adults,],
warmup = 3000, iter = 7000,
control = list(adapt_delta = 0.9)
)
summary(bp1.fw)
ls()
library(REEMtree)
install.packages(c("REEMtree", "party", "dismo"))
library(REEMtree)
source('~/GitHub/R/fWHR/REEMctree.R', echo=TRUE)
set.seed(1234567)
tree.p1 = REEMtree(fWHR ~ Sex + Age + I(Age^2) + I(Age^3) +
Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
Subspecies,
data=chFP[adults,],
#random=~1|ID/Subspecies
random = list(location =~ 1, ID =~ 1)#, Subspecies =~ 1)
,cv=TRUE, method='ML'
)
print(tree.p1)
plot(tree.p1)
set.seed(1234567)
cit.p1 = REEMctree(fWHR ~ Sex + Age + I(Age^2) + I(Age^3) +
Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
Subspecies,
data=chFP[adults,],
#random=~1|ID/Subspecies
random = list(location =~ 1, ID =~ 1)#, Subspecies =~ 1)
, method='REML'
)
plot(cit.p1$Tree)
mp3.tree = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
data = chFP[adults&(chFP$Subspecies=='verus'|chFP$Subspecies=='schweinfurthii'|chFP$Subspecies=='unknown'),]
)
library(lme4)
chFP = read.csv('chimpFacesPersDemos.csv')
chFP = chFP[,-1]
# colnames(chFP)
# dim(chFP)
chFP = chFP[!is.na(chFP$fWHR),]
# basic age,sex index:
adults = (chFP$Sex==0 & chFP$Age>7) | (chFP$Sex==1 & chFP$Age>9)
#levels(chFP$Subspecies)
chFP$Subspecies[chFP$Subspecies=='hybrid'] = 'unknown'
table(chFP$Subspecies[!duplicated(chFP$ID)])
adults[is.na(adults)] = TRUE
adults = adults & (as.character(chFP$ID) != 'Gage') # 75
adults = adults & (as.character(chFP$ID) != 'Lennon') # This is a good place to pull out Lennon (130, 131)
# count(adults)
# View(chFP[adults,])
chFP$Subspecies[!adults & !duplicated(chFP$ID)] # one of these is Lennon, who is verus
set.seed(1234567)
mp2.sx <- lmer(fWHR ~  Sex*Dom_CZ +
# Sex*Ext_CZ + Sex*Con_CZ + Sex*Agr_CZ + Sex*Neu_CZ + Sex*Opn_CZ +
Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | Subspecies) + (1 | ID:Subspecies)
,data = chFP[adults,]
)
summary(mp2.sx)
confint(mp2.sx)
mp3.v.sx = lmer(fWHR ~ Sex*Dom_CZ +
# Sex*Ext_CZ + Sex*Con_CZ + Sex*Agr_CZ + Sex*Neu_CZ + Sex*Opn_CZ +
Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID)
,data = chFP[adults&chFP$Subspecies=='verus',]
)
summary(mp3.tree)
mp3.tree = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
data = chFP[adults&(chFP$Subspecies=='verus'|chFP$Subspecies=='schweinfurthii'|chFP$Subspecies=='unknown'),]
)
summary(mp3.tree)
confint(mp3.tree, method='boot')
library(glmertree)
install.packages("glmertree")
library(glmertree)
install.packages("libcoin")
library(glmertree)
tree.p1 <- lmertree(fWHR ~ Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | Subspecies) + (1 | ID:Subspecies)
,data = chFP[adults,]
)
plot(cit.p1$Tree)
plot(tree.p1)
summary(mp3.tree)
summary(mp1)
mp3.tree.all = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
data = chFP[adults,]
)
summary(mp3.tree.all)
confint(mp3.tree.all, method='boot')
confint(mp3.tree.all, method='profile')
?REEMctree
?REEMtree
print(tree.p1)
mp3.tree = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
#data = chFP[adults&(chFP$Subspecies=='verus'|chFP$Subspecies=='schweinfurthii'|chFP$Subspecies=='unknown'),]
data = chFP[adults&(chFP$Subspecies=='verus'|chFP$Subspecies=='schweinfurthii'),]
)
summary(mp3.tree)
mp3.tree = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
#data = chFP[adults&(chFP$Subspecies=='verus'|chFP$Subspecies=='schweinfurthii'|chFP$Subspecies=='unknown'),]
#data = chFP[adults&(chFP$Subspecies=='verus'|chFP$Subspecies=='schweinfurthii'),]
data = chFP[adults&(chFP$Subspecies=='verus'),]
)
summary(mp3.tree)
