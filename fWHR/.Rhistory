gb.tree.vs.sx = lmer(s(fWHR) ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std[(chFP.std$Subspecies=='verus'|chFP.std$Subspecies=='schweinfurthii'),]
)
summary(gb.tree.vs.sx)
confint(gb.tree.vs.sx, method='profile')
gb.tree.vsu.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std[(chFP.std$Subspecies=='verus'|chFP.std$Subspecies=='schweinfurthii'|chFP.std$Subspecies=='unknown'),]
)
summary(gb.tree.vsu.sx)
confint(gb.tree.vsu.sx, method='profile')
gb.tree.t.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std[(chFP.std$Subspecies=='troglodytes'),]
)
summary(gb.tree.t.sx)
chFP.std.full = chFP
chFP.std.full = chFP
chFP.std.full$Dom_CZ = scale(chFP.std.full$Dom_CZ)
chFP.std.full$Dom_CZ = chFP.std.full$Dom_CZ/2
chFP.std.full$Ext_CZ = scale(chFP.std.full$Ext_CZ)
chFP.std.full$Ext_CZ = chFP.std.full$Ext_CZ/2
chFP.std.full$Con_CZ = scale(chFP.std.full$Con_CZ)
chFP.std.full$Con_CZ = chFP.std.full$Con_CZ/2
chFP.std.full$Agr_CZ = scale(chFP.std.full$Agr_CZ)
chFP.std.full$Agr_CZ = chFP.std.full$Agr_CZ/2
chFP.std.full$Neu_CZ = scale(chFP.std.full$Neu_CZ)
chFP.std.full$Neu_CZ = chFP.std.full$Neu_CZ/2
chFP.std.full$Opn_CZ = scale(chFP.std.full$Opn_CZ)
chFP.std.full$Opn_CZ = chFP.std.full$Opn_CZ/2
chFP.std.full$fWHR = scale(chFP.std.full$fWHR)
chFP.std.full$fWHR = chFP.std.full$fWHR/2
chFP.std.full$Sex = scale(chFP.std.full$Sex)
chFP.std.full$Sex = chFP.std.full$Sex/2
table(chFP.std.full$Sex)
describe(chFP.std.full)
gb.full.tree.A.1 = lmer(fWHR ~ Agr_CZ +
(1 | location) +  (1 | ID),
data=chFP.std.full#[adults,]
)
summary(gb.full.tree.A.1)
gb.full.tree.A.2 = lmer(fWHR ~ Agr_CZ +
(1 + Agr_CZ | location) +  (1 + Agr_CZ | ID),
data=chFP.std.full#[adults,]
)
summary(gb.full.tree.A.2)
gb.full.tree.all.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std.full#[adults,]
)
stdCoef.merMod <- function(object) {
sdy <- sd(getME(object,"y"))
sdx <- apply(getME(object,"X"), 2, sd)
sc <- fixef(object)*sdx/sdy
se.fixef <- coef(summary(object))[,"Std. Error"]
se <- se.fixef*sdx/sdy
return(data.frame(stdcoef=sc, stdse=se))
}
gb.full.tree.all.sx.std.full = stdCoef.merMod(gb.full.tree.all.sx)
gb.full.tree.all.sx.std.full
summary(gb.full.tree.all.sx)
gb.full.tree.v.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std.full[(chFP.std.full$Subspecies=='verus'),]
)
summary(gb.full.tree.v.sx)
confint(gb.full.tree.v.sx, method='profile')
gb.full.tree.vs.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std.full[(chFP.std.full$Subspecies=='verus'|chFP.std.full$Subspecies=='schweinfurthii'),]
)
summary(gb.full.tree.vs.sx)
gb.full.tree.vsu.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std.full[(chFP.std.full$Subspecies=='verus'|chFP.std.full$Subspecies=='schweinfurthii'|chFP.std.full$Subspecies=='unknown'),]
)
summary(gb.full.tree.vsu.sx)
gb.full.tree.t.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std.full[(chFP.std.full$Subspecies=='troglodytes'),]
)
summary(gb.full.tree.t.sx)
gb.full.tree.vs.sx = lmer(fWHR ~ #Dom_CZ * Neu_CZ * Sex
Dom_CZ * Sex + Neu_CZ * Sex + Dom_CZ * Neu_CZ
+ (1 | location) +  (1 | ID),
data=chFP.std.full[(chFP.std.full$Subspecies=='verus'|chFP.std.full$Subspecies=='schweinfurthii'),]
)
summary(gb.full.tree.vs.sx)
gb.full.tree.vs.sx.3way = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex
+ (1 | location) +  (1 | ID),
data=chFP.std.full[(chFP.std.full$Subspecies=='verus'|chFP.std.full$Subspecies=='schweinfurthii'),]
)
anova(gb.full.tree.vs.sx, gb.full.tree.vs.sx.3way)
gb.full.tree.vs.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex
#Dom_CZ * Sex + Neu_CZ * Sex + Dom_CZ * Neu_CZ
+ (1 | location) +  (1 | ID),
data=chFP.std.full[(chFP.std.full$Subspecies=='verus'|chFP.std.full$Subspecies=='schweinfurthii'),]
)
library(jtools)
?standardize
?interact_plot
interact_plot(gb.full.tree.all.sx)
?interact_plot
interact_plot(gb.full.tree.all.sx, pred='Dom_CZ', modx='sex')
interact_plot(gb.full.tree.all.sx, pred='Dom_CZ', modx='Neu_CZ')
interact_plot(gb.full.tree.all.sx, pred='Dom_CZ', modx='Neu_CZ', plot.points)
interact_plot(gb.full.tree.all.sx, pred='Dom_CZ', modx='Neu_CZ', plot.points=TRUE)
gb.full.tree.all.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std.full#[adults,]
)
summary(gb.full.tree.all.sx)
confint(gb.full.tree.all.sx, method='boot')
summary(gb.full.tree.vs.sx)
interact_plot(gb.full.tree.vs.sx, pred='Dom_CZ', modx='Neu_CZ', plot.points=TRUE)
interact_plot(gb.full.tree.t.sx, pred='Dom_CZ', modx='Neu_CZ', plot.points=TRUE)
interact_plot(gb.full.tree.vs.sx, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
interact_plot(gb.full.tree.all.sx, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
chAgr = chFP
## Aggreagate into individuals
chAgr$Sex = as.numeric(chAgr$Sex)
library(jtools)
chFull = chFP
## Aggreagate into individuals
chFull$Sex = as.numeric(chFull$Sex)
chFull <- aggregate(chAgr, by=list(chAgr$ID), FUN=mean)
colnames(chFull)
## Reattach subspecies
chFull <- merge(chFull[,c(1,8:26)],subsp[,c(1,2)], by.x='Group.1', by.y='Name')
colnames(chAgr)[1] <- 'ID'
colnames(chFull)[1] <- 'ID'
colnames(chFull)
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex, data=chFull)
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
table(chFull$Subspecies)
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='verus'|chFull$Subspecies=='schweinfurthii'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='verus'#|chFull$Subspecies=='schweinfurthii'
),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
gb.tree.A.1 = lmer(fWHR ~ Agr_CZ +
(1 | location) +  (1 | ID),
data=chFP.std#[adults,]
)
library(caret)
library(party)
library(rpart)
library(REEMtree)
library(lme4)
library(arm)
gb.tree.A.1 = lmer(fWHR ~ Agr_CZ +
(1 | location) +  (1 | ID),
data=chFP.std#[adults,]
)
summary(gb.tree.A.1)
confint(gb.tree.A.1, method='profile')
gb.tree.all.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std#[adults,]
)
summary(gb.tree.all.sx)
set.seed(1234567) #...
confint(gb.tree.all.sx, method='boot')
set.seed(12345) #...
confint(gb.tree.all.sx, method='boot')
gb.tree.v.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std[(chFP.std$Subspecies=='verus'),]
)
summary(gb.tree.v.sx)
confint(gb.tree.v.sx, method='profile')
gb.tree.vs.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std[(chFP.std$Subspecies=='verus'|chFP.std$Subspecies=='schweinfurthii'),]
)
summary(gb.tree.vs.sx)
confint(gb.tree.vs.sx, method='profile')
set.seed(1234567)
confint(gb.tree.vs.sx, method='boot')
gb.tree.vsu.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std[(chFP.std$Subspecies=='verus'|chFP.std$Subspecies=='schweinfurthii'|chFP.std$Subspecies=='unknown'),]
)
summary(gb.tree.vsu.sx)
set.seed(1234567)
confint(gb.tree.vsu.sx, method='boot')
gb.tree.t.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std[(chFP.std$Subspecies=='troglodytes'),]
)
summary(gb.tree.t.sx)
confint(gb.tree.t.sx, method='boot')
set.seed(1234567890)
tree.p1 = REEMtree(fWHR ~ Sex + Age + I(Age^2) + I(Age^3) +
Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
Subspecies,
data=chFP.std,#[adults,],
#data=chFP[chFP$ID!='Lennon',],
#random=~1|ID/Subspecies
random = list(location =~ 1, ID =~ 1)#, Subspecies =~ 1)
,cv=TRUE, method='ML'
)
print(tree.p1)
set.seed(1234567890)
tree.p1 = REEMtree(fWHR ~ Sex + Age + I(Age^2) + I(Age^3) +
Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
Subspecies,
data=chFP#[adults,]
#data=chFP[chFP$ID!='Lennon',],
#random=~1|ID/Subspecies
, random = list(location =~ 1, ID =~ 1)#, Subspecies =~ 1)
,cv=TRUE, method='ML'
)
print(tree.p1)
plot(tree.p1)
gb.tree.t.sx = lmer(fWHR ~ Dom_CZ * Neu_CZ * Sex +
+ (1 | location) +  (1 | ID),
data=chFP.std[(chFP.std$Subspecies=='troglodytes'),]
)
summary(gb.tree.t.sx)
set.seed(1234567)
confint(gb.tree.t.sx, method='boot')
## This one may be the only important one
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
library(lme4)
library(lattice)
library(ggplot2)
library(jtools)
## This one may be the only important one
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='verus'#|chFull$Subspecies=='schweinfurthii'
),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
which(chFP$fWHR>1.7&chFP$Dom_CZ<(-1))
chFP$ID[(chFP$fWHR>1.7&chFP$Dom_CZ<(-1))]
chFP$ID[(chFP$Sex==1&chFP$fWHR>1.7&chFP$Dom_CZ<(-1))]
chFP[(chFP$Sex==1&chFP$fWHR>1.7&chFP$Dom_CZ<(-1)),]
set.seed(1234567)
confint(gb.tree.v.sx, method='boot')
summary(gb.tree.vsu.sx)
summary(gb.tree.vs.sx)
confint(gb.tree.vs.sx, method='boot')
confint(gb.tree.vs.sx, method='profile')
confint(gb.tree.v.sx, method='boot')
summary(gb.tree.v.sx)
summary(gb.tree.all.sx)
set.seed(123456) #... standard seed has convergence problems
confint(gb.tree.all.sx, method='boot')
set.seed(12345678) #... standard seed has convergence problems
confint(gb.tree.all.sx, method='boot')
set.seed(123456) #... standard seed has convergence problems
confint(gb.tree.all.sx, method='boot')
summary(gb.tree.all.sx)
## - just Verus (of the adults)
jV = (chFP.std$Subspecies=='verus')
## - Verus & Schweinfurthii (of the adults)
VS = (chFP.std$Subspecies=='verus'|chFP.std$Subspecies=='schweinfurthii')
## - Verus & Schweinfurthii & Unknowns (of the adults)
VSU = (chFP.std$Subspecies=='verus'|chFP.std$Subspecies=='schweinfurthii'|chFP.std$Subspecies=='unknown')
## - just Troglodytes (of the adults)
jT = (chFP.std$Subspecies=='troglodytes')
m.all = lmer(fWHR ~ Age + I(Age^2) + I(Age^3) + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std
)
hist(chFP.std$Age)
chFP.std$Age = scale(chFP.std$Age)
chFP.std = chFP [adults,]
chFP.std$Dom_CZ = scale(chFP.std$Dom_CZ)
chFP.std$Dom_CZ = chFP.std$Dom_CZ/2
chFP.std$Ext_CZ = scale(chFP.std$Ext_CZ)
chFP.std$Ext_CZ = chFP.std$Ext_CZ/2
chFP.std$Con_CZ = scale(chFP.std$Con_CZ)
chFP.std$Con_CZ = chFP.std$Con_CZ/2
chFP.std$Agr_CZ = scale(chFP.std$Agr_CZ)
chFP.std$Agr_CZ = chFP.std$Agr_CZ/2
chFP.std$Neu_CZ = scale(chFP.std$Neu_CZ)
chFP.std$Neu_CZ = chFP.std$Neu_CZ/2
chFP.std$Opn_CZ = scale(chFP.std$Opn_CZ)
chFP.std$Opn_CZ = chFP.std$Opn_CZ/2
chFP.std$fWHR = scale(chFP.std$fWHR)
chFP.std$fWHR = chFP.std$fWHR/2
chFP.std$Sex = scale(chFP.std$Sex)
chFP.std$Sex = chFP.std$Sex/2
chFP.std$Age2 = chFP.std$Age ^ 2
chFP.std$Age3 = chFP.std$Age ^ 3
chFP.std$Age = scale(chFP.std$Age) / 2
chFP.std$Age2 = scale(chFP.std$Age2) / 2
chFP.std$Age3 = scale(chFP.std$Age3) / 2
describe(chFP.std)
library(psych)
describe(chFP.std)
m.all = lmer(fWHR ~ Age + I(Age^2) + I(Age^3) + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std
)
jV.all = lmer(fWHR ~ Age + I(Age^2) + I(Age^3) + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP[jV,]
)
m.all = lmer(fWHR ~ Age + Age2 + Age3 + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std
)
m.all = lmer(fWHR ~ Age + Age2 + Age3 + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std
)
jV.all = lmer(fWHR ~ Age + Age2 + Age3 + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP[jV,]
)
jV.all = lmer(fWHR ~ Age + Age2 + Age3 + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std[jV,]
)
VS.all = lmer(fWHR ~ Age + Age2 + Age3 + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std[VS,]
)
VSU.all = lmer(fWHR ~ Age + Age2 + Age3 + Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std[VSU,]
)
jT.all = lmer(fWHR ~ Age  + Age2 + Age3 +
Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std[jT,]
)
jT.all = lmer(fWHR ~ Age  + Age2 + #Age3 +
Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std[jT,]
)
jT.all = lmer(fWHR ~ Age  + #Age2 + #Age3 +
Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std[jT,]
)
jT.all = lmer(fWHR ~ #Age  + #Age2 + #Age3 +
Sex + Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ +
(1 | location) + (1 | ID),
data = chFP.std[jT,]
)
options("scipen"=5, "digits"=4)
set.seed(12334567)
ci.m.all = confint(m.all, method='boot')
ci.jV.all = confint(jV.all, method='boot')
ci.VS.all = confint(VS.all, method='boot')
ci.VSU.all = confint(VSU.all, method='boot')
ci.jT.all = confint(jT.all, method='boot')
fixef(m.all)
ci.m.all
fixef(jV.all)
ci.jV.all
fixef(VS.all)
ci.VS.all
fixef(VSU.all)
ci.VSU.all
fixef(jT.all)
ci.jT.all
m.3way = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
data = chFP.std
)
# mp3.tree = "jV.3way"
jV.3way = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
data = chFP.std[jV,]
)
VS.3way = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
data = chFP.std[VS,]
)
VSU.3way = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
data = chFP.std[VSU,]
)
jT.3way = lmer(fWHR ~ Sex * Dom_CZ * Neu_CZ +
(1 | location) + (1 | ID),
data = chFP.std[jT,]
)
set.seed(1234567)
ci.m.3way = confint(m.3way, method='boot')
ci.jV.3way = confint(jV.3way, method='boot')
ci.VS.3way = confint(VS.3way, method='boot')
ci.VSU.3way = confint(VSU.3way, method='boot')
ci.jT.3way = confint(jT.3way, method='boot')
fixef(jV.3way)
ci.jV.3way
fixef(VS.3way)
ci.VS.3way
fixef(VS.3way)
fixef(VSU.3way)
ci.VSU.3way
fixef(jT.3way)
ci.jT.3way
fixef(m.all)
ci.m.all
fixef(jV.all)
ci.jV.all
fixef(VS.all)
ci.VS.all
fixef(VSU.all)
ci.VSU.all
fixef(jT.all)
ci.jT.all
gc()
summary(jT.3way)
## This one may be the only important one
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE)
?interact_plot
## This one may be the only important one
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE,
modx.labels = Neuroticism, x.label = Dominance
)
## This one may be the only important one
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE,
modx.labels = 'Neuroticism', x.label = 'Dominance'
)
## This one may be the only important one
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE,
modx.labels = c('Neuroticism','Sex'), x.label = 'Dominance'
)
## This one may be the only important one
colnames(chFUll)
## This one may be the only important one
colnames(chFull)
## This one may be the only important one
colnames(chFull)[5]
## This one may be the only important one
colnames(chFull)[19]
## This one may be the only important one
colnames(chFull)[19] = 'Neuroticism'
interact_plot(lm(fWHR ~ Dom_CZ * Neu_CZ * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE,
x.label = 'Dominance'
)
## This one may be the only important one
colnames(chFull)[19] = 'Neuroticism'
interact_plot(lm(fWHR ~ Dom_CZ * Neuroticism * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neu_CZ', mod2='Sex', plot.points=TRUE,
x.label = 'Dominance'
)
## This one may be the only important one
colnames(chFull)[19] = 'Neuroticism'
interact_plot(lm(fWHR ~ Dom_CZ * Neuroticism * Sex,
data=chFull[(chFull$Subspecies=='troglodytes'),])
, pred='Dom_CZ', modx='Neuroticism', mod2='Sex', plot.points=TRUE,
x.label = 'Dominance'
)
interact_plot(lm(fWHR ~ Dom_CZ * Neuroticism * Sex,
data=chFull[(chFull$Subspecies=='troglodytes')&(chFull$ID!='Cordova'),])
, pred='Dom_CZ', modx='Neuroticism', mod2='Sex', plot.points=TRUE,
x.label = 'Dominance'
)
gc()
g <- ggplot(data=subset(chAgr, !(chAgr$verus=='other')),
aes(x=Dom, y=fWHR)) + geom_point() +
facet_grid(verus ~ Sex) +
stat_smooth(method='gam') +
theme_bw() + xlab('Dominance')
g
library(lme4)
library(lattice)
library(ggplot2)
library(jtools)
chAgr = chFP
## Aggreagate into individuals
chAgr$Sex = as.numeric(chAgr$Sex)
chAgr <- aggregate(chAgr[adults,], by=list(chAgr$ID[adults]), FUN=mean)
## Reattach subspecies
chAgr <- merge(chAgr[,c(1,8:26)],subsp[,c(1,2)], by.x='Group.1', by.y='Name')
colnames(chAgr)[1] <- 'ID'
plot(chAgr$fWHR ~ chAgr$Agr)
cor(chAgr$fWHR, chAgr$Dom)
chAgr$verus = 'other'
chAgr$verus[chAgr$Subspecies=='verus'] = 'verus'
chAgr$verus[chAgr$Subspecies=='troglodytes'] = 'troglodytes'
chAgr$Sex = as.factor(chAgr$Sex)
levels(chAgr$Sex) <- c('Female','Male')
g <- ggplot(data=subset(chAgr, !(chAgr$verus=='other')),
aes(x=Dom, y=fWHR)) + geom_point() +
facet_grid(verus ~ Sex) +
stat_smooth(method='gam') +
theme_bw() + xlab('Dominance')
g
View(chAgr)
dim(chFP.std)
gc()
save.image("E:/backup/VADW_chimpFWHR_workspace.RData")
