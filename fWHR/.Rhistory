derivs1 <- mg.N@optinfo$derivs
sc_grad1 <- with(derivs1,solve(Hessian,gradient))
max(abs(sc_grad1))
max(pmin(abs(sc_grad1),abs(derivs1$gradient)))
mg.N <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optCtrl=list(maxfun=2e4
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.N)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
tt <- getME(mg.N,"theta")
ll <- getME(mg.N,"lower")
min(tt[ll==0])
derivs1 <- mg.N@optinfo$derivs
sc_grad1 <- with(derivs1,solve(Hessian,gradient))
max(abs(sc_grad1))
max(pmin(abs(sc_grad1),abs(derivs1$gradient)))
mg.N <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optCtrl=list(maxfun=2e4)
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.N)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
tt <- getME(mg.N,"theta")
ll <- getME(mg.N,"lower")
min(tt[ll==0])
derivs1 <- mg.N@optinfo$derivs
sc_grad1 <- with(derivs1,solve(Hessian,gradient))
max(abs(sc_grad1))
max(pmin(abs(sc_grad1),abs(derivs1$gradient)))
mg.N <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optCtrl=list(maxfun=2e4))
)
mg.N <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.N)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
tt <- getME(mg.N,"theta")
ll <- getME(mg.N,"lower")
min(tt[ll==0])
derivs1 <- mg.N@optinfo$derivs
sc_grad1 <- with(derivs1,solve(Hessian,gradient))
max(abs(sc_grad1))
max(pmin(abs(sc_grad1),abs(derivs1$gradient)))
mg.N <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='bobyqa',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.N)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mg.N <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
mduse = df_irr_melt[df_irr_melt$Dimension=='Agreeableness',]
mg.A <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.A)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mduse = df_irr_melt[df_irr_melt$Dimension=='Openness',]
mg.O <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.O)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mduse = df_irr_melt[df_irr_melt$Dimension=='Extraversion',]
mg.E <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE)
mg.D <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.D)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mg.D
mduse = df_irr_melt[df_irr_melt$Dimension=='Conscientiousness',]
mg.C <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.C)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mduse = df_irr_melt[df_irr_melt$Dimension=='Extraversion',]
mg.E <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.E)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
varCompTable(vcomp, vcompLbls)
vcomp <- VarCorr(model)
vcompLbls <- c("Rater","Chimp","Dimension",'Location',
"Chimp:Rater","Chimp:Dimension",'Chimp:Location',
"Rater:Dimension",'Dimension:Location','Rater:Location',
'Rater:Location:Dimension','Location:Chimp:Dimension')
varCompTable(vcomp, vcompLbls)
mg.D
vcomp <- VarCorr(mg.D)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
vcomp <- VarCorr(mg.E)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mduse = df_irr_melt[df_irr_melt$Dimension=='Dominance',]
mg.D <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.D)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mduse = df_irr_melt[df_irr_melt$Dimension=='Extraversion',]
mg.E <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.E)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mduse = df_irr_melt[df_irr_melt$Dimension=='Conscientiousness',]
mg.C <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.C)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mduse = df_irr_melt[df_irr_melt$Dimension=='Neuroticism',]
mg.N <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.N)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mduse = df_irr_melt[df_irr_melt$Dimension=='Agreeableness',]
mg.A <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.A)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
mduse = df_irr_melt[df_irr_melt$Dimension=='Openness',]
mg.O <- lmer(Score ~ 1 + (1|Rater) + (1|Chimp) + (1|Location) +
#(1|Chimp:Rater) +
(1|Chimp:Location) + (1|Location:Rater),
data=mduse, REML=FALSE,
lmerControl(optimizer='nloptwrap',optCtrl=list(maxfun=2e5))
)
counts <- list(length(levels(mduse$Rater)),length(levels(mduse$Location)))
names(counts) <- c("Rater","Location")
vcomp <- VarCorr(mg.O)
vcompLbls <- c("Rater","Chimp","Location",#"Chimp:Rater",
"Chimp:Location","Location:Rater")
varCompTable(vcomp, vcompLbls)
gcoeff <- calcGCoefficient("Chimp",vcomp,vcompLbls,grep(":Chimp\\b|\\bChimp:",vcompLbls),counts)
cat("G =", substr(sprintf("%.3f", round(gcoeff, 3)), 2, 5))
library(alphahull)
install.packages("alphahull")
library(tidyr)
library(alphahull)
install.packages("tripack")
library(alphahull)
install.packages("sgeostat")
library(alphahull)
install.packages("goftest")
library(alphahull)
install.packages("splancs")
library(alphahull)
Rversion
R.version
library(readxl)
getwd()
betsy <- read_xlsx('./Extra measures_Betsy photos.xlsx')
View(betsy)
View(yCh)
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy <- data.frame(lapply(betsy, function(x) as.numeric(x)))
View(betsy)
betsy <- read_xlsx('./Extra measures_Betsy photos.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
colname(betsy)
colnames(betsy)
betsy[,c(3:16)] <- data.frame(lapply(betsy[,c(3:16)], function(x) as.numeric(x)))
View(betsy)
tabl <- betsy
fWHRc <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRc[i] =   fWHR(points, i)
}
View(betsy)
gc()
betsy <- read_xlsx('./Extra measures_Betsy photos.xlsx')
library(readxl)
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx.xlsx')
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
library(alphahull)
library(tidyr)
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy[,c(3:16)] <- data.frame(lapply(betsy[,c(3:16)], function(x) as.numeric(x)))
tabl <- betsy
fWHRc <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRc[i] =   fWHR(points, i)
}
q
q90
q()
View(betsy)
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy[,c(3:16)] <- data.frame(lapply(betsy[,c(3:16)], function(x) as.numeric(x)))
tabl <- betsy
fWHRc <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRc[i] =   fWHR(points, i)
}
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy[,c(3:16)] <- data.frame(lapply(betsy[,c(3:16)], function(x) as.numeric(x)))
tabl <- betsy
fWHRc <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRc[i] =   fWHR(points, i)
}
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy[,c(3:16)] <- data.frame(lapply(betsy[,c(3:16)], function(x) as.numeric(x)))
tabl <- betsy
fWHRc <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRc[i] =   fWHR(points, i)
}
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy[,c(3:16)] <- data.frame(lapply(betsy[,c(3:16)], function(x) as.numeric(x)))
tabl <- betsy
fWHRc <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRc[i] =   fWHR(points, i)
}
View(betsy)
View(fwHRc)
tabl <- betsy
fWHRc <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRc[i] =   fWHR(points, i)
}
View(fwHRc)
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy[,c(3:16)] <- data.frame(lapply(betsy[,c(3:16)], function(x) as.numeric(x)))
tabl <- betsy
fWHRc <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRc[i] =   fWHR(points, i)
}
View(tabl)
View(fwHRc)
dim(tabl)
View(points)
tabl <- betsy
fWHRbetsy <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRbetsy[i] =   fWHR(points, i)
}
cbind(betsy, fWHRbetsy)
betsy = cbind(betsy, fWHRbetsy)
View(betsy)
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy[,c(3:16)] <- data.frame(lapply(betsy[,c(3:16)], function(x) as.numeric(x)))
tabl <- betsy
fWHRbetsy <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRbetsy[i] =   fWHR(points, i)
}
betsy = cbind(betsy, fWHRbetsy)
View(betsy)
betsy <- read_xlsx('./Extra measures_Betsy photos_DMA.xlsx')
betsy <- separate(data = betsy, col = A, into = c("A.x", "A.y"), sep = "\\,")
betsy <- separate(data = betsy, col = B, into = c("B.x", "B.y"), sep = "\\,")
betsy <- separate(data = betsy, col = C, into = c("C.x", "C.y"), sep = "\\,")
betsy <- separate(data = betsy, col = D, into = c("D.x", "D.y"), sep = "\\,")
betsy <- separate(data = betsy, col = E, into = c("E.x", "E.y"), sep = "\\,")
betsy <- separate(data = betsy, col = F, into = c("F.x", "F.y"), sep = "\\,")
betsy <- separate(data = betsy, col = G, into = c("G.x", "G.y"), sep = "\\,")
betsy[,c(3:16)] <- data.frame(lapply(betsy[,c(3:16)], function(x) as.numeric(x)))
tabl <- betsy
fWHRbetsy <- NULL
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHRbetsy[i] =   fWHR(points, i)
}
betsy = cbind(betsy, fWHRbetsy)
View(betsy)
gc()
