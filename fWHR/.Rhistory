points <- matrix(c(c(tabl$C$X1[i], tabl$D$X1[i], tabl$E$X1[i], tabl$F$X1[i], tabl$G$X1[i]),
c(tabl$C$X2[i], tabl$D$X2[i], tabl$E$X2[i], tabl$F$X2[i], tabl$G$X2[i])))
i = 7
points <- matrix(c(c(tabl$C$X1[i], tabl$D$X1[i], tabl$E$X1[i], tabl$F$X1[i], tabl$G$X1[i]),
c(tabl$C$X2[i], tabl$D$X2[i], tabl$E$X2[i], tabl$F$X2[i], tabl$G$X2[i])))
View(points)
points <- matrix(c(c(tabl$C$X1[i], tabl$D$X1[i], tabl$E$X1[i], tabl$F$X1[i], tabl$G$X1[i]),
c(tabl$C$X2[i], tabl$D$X2[i], tabl$E$X2[i], tabl$F$X2[i], tabl$G$X2[i]),
,nrow = 5, ncol = 2))
points <- matrix(c(c(tabl$C$X1[i], tabl$D$X1[i], tabl$E$X1[i], tabl$F$X1[i], tabl$G$X1[i]),
c(tabl$C$X2[i], tabl$D$X2[i], tabl$E$X2[i], tabl$F$X2[i], tabl$G$X2[i]),
nrow = 5, ncol = 2))
View(points)
points <- matrix(c(c(tabl$C$X1[i], tabl$D$X1[i], tabl$E$X1[i], tabl$F$X1[i], tabl$G$X1[i]),
c(tabl$C$X2[i], tabl$D$X2[i], tabl$E$X2[i], tabl$F$X2[i], tabl$G$X2[i]))
,nrow = 5, ncol = 2)
View(points)
tabl <- as.numeric(dfOHSU1)
library(reshape)
library(tidyr)
dfOHSU1 <- read.csv("ORmacaq1.csv", header=T)
separate(data = dfOHSU1, col = A, into = c("x", "y"), sep = "\\,")
dfOHSU1 <- read.csv("ORmacaq1.csv", header=T)
separate(data = dfOHSU1, col = A, into = c("A.x", "A.y"), sep = "\\,")
dfOHSU1 <- read.csv("ORmacaq1.csv", header=T)
dfOHSU1 <- separate(data = dfOHSU1, col = A, into = c("A.x", "A.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = B, into = c("B.x", "B.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = D, into = c("D.x", "D.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = C, into = c("C.x", "C.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = E, into = c("E.x", "E.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = F, into = c("F.x", "F.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = G, into = c("G.x", "G.y"), sep = "\\,")
tabl <- as.numeric(dfOHSU1)
View(dfOHSU1)
dfOHSU1 <- read.csv("ORmacaq1.csv", header=T)
dfOHSU1 <- separate(data = dfOHSU1, col = A, into = c("A.x", "A.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = B, into = c("B.x", "B.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = D, into = c("D.x", "D.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = C, into = c("C.x", "C.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = E, into = c("E.x", "E.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = F, into = c("F.x", "F.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = G, into = c("G.x", "G.y"), sep = "\\,")
names(dfOHSU1)
dfOHSU1[,c(2:15)] <- as.numeric(dfOHSU1[,c(2:15)])
dfOHSU1[,c(2:15)] <- as.numeric(unlist(dfOHSU1[,(c(2:15)]))
dfOHSU1[,c(2:15)] <- as.numeric(unlist(dfOHSU1[,c(2:15)]))
View(dfOHSU1)
tabl <- dfOHSU1
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
View(points)
fWHR <- function(points){
# Analyze the convex hull edges
a <- ashape(points, alpha=1000)                 # One way to get a convex hull...
e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions
norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths
v <- diag(1/norms) %*% e                        # Unit edge directions
w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges
# Find the MBR
vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices
minmax <- function(x) c(min(x), max(x))         # Computes min and max
x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges
y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges
areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas
k <- which.min(areas)                           # Index of the best edge (smallest area)
# Form a rectangle from the extremes of the best edge
k = 3
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
height = abs(limits[2,2]-limits[1,2])
width = limits[2,1]-limits[1,1]
fWHR = width/height
return(fWHR)
}
fWHR1[i] = fWHR(points)
fWHR1 <- NULL
for (i in seq.along(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
for (i in seq_along(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
fWHR1 <- NULL
for (i in seq_along(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
View(points)
i = 20
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
k = 4
a <- ashape(points, alpha=1000)                 # One way to get a convex hull...
e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions
norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths
v <- diag(1/norms) %*% e                        # Unit edge directions
w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges
# Find the MBR
vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices
minmax <- function(x) c(min(x), max(x))         # Computes min and max
x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges
y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges
areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas
k <- which.min(areas)                           # Index of the best edge (smallest area)
# Form a rectangle from the extremes of the best edge
k = 4
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
fWHR = width/height
fWHR
fWHR <- function(points){
# Analyze the convex hull edges
a <- ashape(points, alpha=1000)                 # One way to get a convex hull...
e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions
norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths
v <- diag(1/norms) %*% e                        # Unit edge directions
w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges
# Find the MBR
vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices
minmax <- function(x) c(min(x), max(x))         # Computes min and max
x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges
y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges
areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas
k <- which.min(areas)                           # Index of the best edge (smallest area)
# Form a rectangle from the extremes of the best edge
k = 4
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
height = abs(limits[2,2]-limits[1,2])
width = limits[2,1]-limits[1,1]
fWHR = width/height
return(fWHR)
}
tabl <- dfOHSU1
fWHR1 <- NULL
?df
?data.frame
fWHR1 <- NULL
for (i in seq_along(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
i in seq_along(dim(tabl)[1])
(i in seq_along(dim(tabl)[1])
seq_along(dim(tabl)[1])
seq_along(dim(tabl))
seq_along(dim(tabl)[2])
seq_along(dim(tabl))
dim(tabl)
dim(tabl)[1]
seq_along(99)
seq_len(99)
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
View(fWHR())
View(fWHR)
View(fWHR1)
fWHR1
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR(points)
i = 28
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
i = 28
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR(points)
tabl$monkey..photo.id[i]
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
s
a <- ashape(points, alpha=1000)                 # One way to get a convex hull...
e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions
norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths
v <- diag(1/norms) %*% e                        # Unit edge directions
w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges
# Find the MBR
vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices
minmax <- function(x) c(min(x), max(x))         # Computes min and max
x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges
y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges
areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas
k <- which.min(areas)                           # Index of the best edge (smallest area)
# Form a rectangle from the extremes of the best edge
k = 4
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
k = 3
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
k = 2
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
k = 1
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
k = 5
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
View(point)
View(points)
fWHR <- function(points){
# Analyze the convex hull edges
a <- ashape(points, alpha=1000)                 # One way to get a convex hull...
e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions
norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths
v <- diag(1/norms) %*% e                        # Unit edge directions
w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges
# Find the MBR
vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices
minmax <- function(x) c(min(x), max(x))         # Computes min and max
x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges
y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges
areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas
k <- which.min(areas)                           # Index of the best edge (smallest area)
# Form a rectangle from the extremes of the best edge
k = 5
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
height = abs(limits[2,2]-limits[1,2])
width = limits[2,1]-limits[1,1]
fWHR = width/height
return(fWHR)
}
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
i = 28
for (i in seq_len(dim(tabl)[1])){
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
i = 28
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
i = 27
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
i = 29
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
i = 30
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
fWHR <- function(points){
# Analyze the convex hull edges
a <- ashape(points, alpha=1000)                 # One way to get a convex hull...
e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions
norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths
v <- diag(1/norms) %*% e                        # Unit edge directions
w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges
# Find the MBR
vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices
minmax <- function(x) c(min(x), max(x))         # Computes min and max
x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges
y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges
areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas
k <- which.min(areas)                           # Index of the best edge (smallest area)
# Form a rectangle from the extremes of the best edge
k = 4
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2])                # The hull
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
height = abs(limits[2,2]-limits[1,2])
width = limits[2,1]-limits[1,1]
fWHR = width/height
return(fWHR)
}
i = 30
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
i = 29
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
i = 30
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
fWHR()
fWHR1
for (i in seq_len(dim(tabl)[1])){
#i = 30
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
fWHR1
fWHR1 <- NULL
for (i in seq_len(dim(tabl)[1])){
#i = 30
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] = fWHR(points)
}
fWHR1
i = 23
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR(points)
i = 24
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR(points)
i = 26
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR(points)
i = 27
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR(points)
i = 28
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR(points)
i = 29
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR(points)
tabl$monkey..photo.id[i]
View(points)
dfOHSU1 <- read.csv("ORmacaq1.csv", header=T)
dfOHSU1 <- separate(data = dfOHSU1, col = A, into = c("A.x", "A.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = B, into = c("B.x", "B.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = C, into = c("C.x", "C.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = D, into = c("D.x", "D.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = E, into = c("E.x", "E.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = F, into = c("F.x", "F.y"), sep = "\\,")
dfOHSU1 <- separate(data = dfOHSU1, col = G, into = c("G.x", "G.y"), sep = "\\,")
dfOHSU1[,c(2:15)] <- as.numeric(unlist(dfOHSU1[,c(2:15)]))
tabl <- dfOHSU1
fWHR1 <- NULL
for (i in seq_len(dim(tabl)[1])){
#i = 29
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] =   fWHR(points)
}
fWHR1
tabl <- dfOHSU1
fWHR1 <- NULL
for (i in seq_len(dim(tabl)[1])){
#i = 29
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] =   fWHR(points)
}
library(alphahull)                                  # Exposes ashape()
for (i in seq_len(dim(tabl)[1])){
#i = 29
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] =   fWHR(points)
}
fWHR1
max(fWHR1)
describe(fWHR1)
summary(fWHR1)
i = 38
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] =   fWHR(points)
?xlable
?xlabel
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2],                # The hull
xlab = i)
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2],                # The hull
xlab = i)
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
fWHR <- function(points, i){
# Analyze the convex hull edges
a <- ashape(points, alpha=1000)                 # One way to get a convex hull...
e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions
norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths
v <- diag(1/norms) %*% e                        # Unit edge directions
w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges
# Find the MBR
vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices
minmax <- function(x) c(min(x), max(x))         # Computes min and max
x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges
y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges
areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas
k <- which.min(areas)                           # Index of the best edge (smallest area)
# Form a rectangle from the extremes of the best edge
k = 4
mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])
# Plot the hull, the MBR, and the points
limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits
plot(ashape(points, alpha=1000), col="Gray", pch=20,
xlim=limits[,1], ylim=limits[,2],                # The hull
xlab = i)
lines(mbr, col="Blue", lwd=3)                         # The MBR
points(points, pch=19)
height = abs(limits[2,2]-limits[1,2])
width = limits[2,1]-limits[1,1]
fWHR = width/height
return(fWHR)
}
for (i in seq_len(dim(tabl)[1])){
#i = 38
points <- matrix(c(c(tabl$C.x[i], tabl$D.x[i], tabl$E.x[i], tabl$F.x[i], tabl$G.x[i]),
c(tabl$C.y[i], tabl$D.y[i], tabl$E.y[i], tabl$F.y[i], tabl$G.y[i]))
,nrow = 5, ncol = 2)
fWHR1[i] =   fWHR(points, i)
}
