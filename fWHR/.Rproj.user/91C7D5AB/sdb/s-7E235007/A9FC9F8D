{
    "collab_server" : "",
    "contents" : "library(alphahull)                                  # Exposes ashape()\n\nMBR <- function(points) {\n  # Analyze the convex hull edges                       \n  a <- ashape(points, alpha=1000)                 # One way to get a convex hull...\n  e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions\n  norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths\n  v <- diag(1/norms) %*% e                        # Unit edge directions\n  w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges\n  \n  # Find the MBR\n  vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices\n  minmax <- function(x) c(min(x), max(x))         # Computes min and max\n  x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges\n  y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges\n  areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas\n  k <- which.min(areas)                           # Index of the best edge (smallest area)\n  \n  # Form a rectangle from the extremes of the best edge\n  cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])\n    # set k to '3' among *5* points in order to draw miminum rectangle along top (brow) line\n}\n\n\n\n\n# Create sample data\nset.seed(runif(1,1,300))\npoints <- matrix(rnorm(5*2), ncol=2)                 # Random (normally distributed) points\n\n# a B C d e\n\n#points <- matrix(c(c(-1.9,-1,1,1.9,0),c(0,2,2,0,-4)),nrow = 5, ncol = 2)\n#points <- matrix(c(c(285, 430, 643, 781, 512),c(-459, -421, -427, -466, -831)),nrow = 5, ncol = 2)\n#points <- matrix(c(c(236, 430, 643, 869, 512),c(-459, -421, -427, -466, -831)),nrow = 5, ncol = 2)\n\n\n\n#mbr <- MBR(points)\n\n\nfWHR <- function(points, i){\n  \n  \n  \n  # Analyze the convex hull edges                       \n  a <- ashape(points, alpha=1000)                 # One way to get a convex hull...\n  e <- a$edges[, 5:6] - a$edges[, 3:4]            # Edge directions\n  norms <- apply(e, 1, function(x) sqrt(x %*% x)) # Edge lengths\n  v <- diag(1/norms) %*% e                        # Unit edge directions\n  w <- cbind(-v[,2], v[,1])                       # Normal directions to the edges\n  \n  # Find the MBR\n  vertices <- (points) [a$alpha.extremes, 1:2]    # Convex hull vertices\n  minmax <- function(x) c(min(x), max(x))         # Computes min and max\n  x <- apply(vertices %*% t(v), 2, minmax)        # Extremes along edges\n  y <- apply(vertices %*% t(w), 2, minmax)        # Extremes normal to edges\n  areas <- (y[1,]-y[2,])*(x[1,]-x[2,])            # Areas\n  k <- which.min(areas)                           # Index of the best edge (smallest area)\n  \n  # Form a rectangle from the extremes of the best edge\n  k = 4\n  mbr <- cbind(x[c(1,2,2,1,1),k], y[c(1,1,2,2,1),k]) %*% rbind(v[k,], w[k,])\n  \n  # Plot the hull, the MBR, and the points\n  limits <- apply(mbr, 2, function(x) c(min(x),max(x))) # Plotting limits\n  plot(ashape(points, alpha=1000), col=\"Gray\", pch=20, \n       xlim=limits[,1], ylim=limits[,2],                # The hull\n       xlab = i)\n  lines(mbr, col=\"Blue\", lwd=3)                         # The MBR\n  points(points, pch=19)    \n  \n  \n  height = abs(limits[2,2]-limits[1,2])\n  width = limits[2,1]-limits[1,1]\n  fWHR = width/height\n  \n  return(fWHR)\n  \n}\n",
    "created" : 1465293664390.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2544654263",
    "id" : "A9FC9F8D",
    "lastKnownWriteTime" : 1481560352,
    "last_content_update" : 1481560352025,
    "path" : "C:/Users/s1229179/GitHub/R/fWHR/MBRtopEdge.R",
    "project_path" : "MBRtopEdge.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}