{
    "collab_server" : "",
    "contents" : "Pers=read.csv(\"all personality ratings.csv\")\n\n\n\n### DMA - ICC code unnecessary for now\n#\n# source('~/Dropbox/PhD/R/R stats steps/ICC/icc3.R', chdir = TRUE)\n# \n# #Items 'depressed' is called 'socially withdrawn' in this study\n# \n# #ICC of shortened questionnaire items including Davis and newly rated animals\n# #For other items can refer to table in my Davis manuscript showing Affectionate, Stable, Solitary, and Prrotective to be unreliable\nnum_observations <- as.data.frame(table(Pers$Animal))\nav <- mean(num_observations$Freq)\nnames(num_observations)[1] <- \"Animal\"\nx <- merge(Pers,num_observations,by=\"Animal\")\n# items <- names(x[5:16])\n# items\n# icc3.reliability(x[x$Freq!=1,], items, \"Animal\", \"Rater\")\n\n\n\n#Removing three unreliable items (stable, solitary, and protective)\nPersdata=x[,c(1:13,14:24,25:44,45:58)]\n\nattach(Persdata)\nPersagg=aggregate(Persdata, by=list(Animal), FUN = mean, na.rm = TRUE)\ndetach(Persdata)\n\n#Shortened component scores\n\nattach(Persagg)\nPersagg$Short.con=scale((-Fearful -\n               Submissive -\n               Cautious +24)/3)\n\nPersagg$Short.opn=scale((Innovative +\n               Curious)/2)\n\nPersagg$Short.dom=scale((Bullying +\n               Dominant)/2)\n\nPersagg$Short.anx=scale((Quitting +\n               Anxious +\n               Erratic -\n               Cool +8)/4)\n\nPersagg$Confidence= scale(( -Fearful - Submissive - Timid - Cautious -Distractible -Disorganized - Dependent.Follower - Vulnerable + 64 )/8)\n\nPersagg$Openness = scale(( Inquisitive +Thoughtless + Innovative + Inventive + Curious + Imitative +Impulsive)/7 )\n\nPersagg$Dominance = scale((Bullying + Stingy.Greedy + Aggressive + Irritable + Manipulative + Defiant + Excitable \n                                 + Reckless + Dominant + Independent + Individualistic - Gentle +8)/12)\n\nPersagg$Friendliness= scale ((Helpful + Friendly + Sociable + Sensitive + Sympathetic + Intelligent + Persistent \n                                    +Decisive - Socially.withdrawn +8)/9) \n\nPersagg$Activity = scale((Active + Playful -Conventional - Predictable - Lazy -Clumsy +32 )/6 )\n\nPersagg$Anxiety = scale ((Quitting + Anxious + Erratic + Jealous  -Cool - Unemotional+16)/6)\n\n\ngeninfo=read.csv(\"All general info.csv\")\ngeninfo$Q.Date=as.Date(ISOdate(geninfo$Date.Year, geninfo$Date.Month, geninfo$Date.Day))\ngeninfo$dob.Date=as.Date(ISOdate(geninfo$Dob.year, geninfo$Dob.month, geninfo$Dob.day))\ngeninfo$age= geninfo$Q.Date - geninfo$dob.Date\n\ngeninfo$agenum=geninfo$age\ngeninfo$agenum=as.numeric(geninfo$agenum)\n#Having in days tends to cause a fit so divide by (usual) number of days in a year\ngeninfo$agenum=geninfo$agenum/365\n\ngeninfo$Age = s(geninfo$age) # DMA\ngeninfo$Age2 = s(geninfo$agenum^2)\ngeninfo$Age3 = s(geninfo$agenum^3)\n\nsetdiff(geninfo$Rhesus, Persagg$Group.1)\n\nnames(geninfo)\n\npersage=merge(geninfo,Persagg, by.x=\"Rhesus\", by.y=\"Group.1\")\n\n\n### DMA from this point fwd ###\n\nlibrary(alphahull)\nlibrary(tidyr)\n\n\n### Face import and final merge\nfaces=read.csv(\"coded faces.csv\",header=T)\n\nfaces = faces[!faces$C=='',]\nfaces = faces[!is.na(faces$C),]\n\n\n## Double check to make sure the face measures are all fine\n\nfaces <- separate(data = faces, col = A, into = c(\"A.x\", \"A.y\"), sep = \"\\\\,\")\nfaces <- separate(data = faces, col = B, into = c(\"B.x\", \"B.y\"), sep = \"\\\\,\")\nfaces <- separate(data = faces, col = C, into = c(\"C.x\", \"C.y\"), sep = \"\\\\,\")\nfaces <- separate(data = faces, col = D, into = c(\"D.x\", \"D.y\"), sep = \"\\\\,\")\nfaces <- separate(data = faces, col = E, into = c(\"E.x\", \"E.y\"), sep = \"\\\\,\")\nfaces <- separate(data = faces, col = F, into = c(\"F.x\", \"F.y\"), sep = \"\\\\,\")\nfaces <- separate(data = faces, col = G, into = c(\"G.x\", \"G.y\"), sep = \"\\\\,\")\n\nfaces[,c(2:15)] <- as.numeric(unlist(faces[,c(2:15)]))\n\nrownames(faces) <- NULL\n\n\n\n### fWHR\n\nfaces$fWHR = NA\n\n\nfor (i in seq_len(dim(faces)[1])){\n  points <- matrix(c(c(faces$C.x[i], faces$D.x[i], faces$E.x[i], faces$F.x[i], faces$G.x[i]), \n                     c(faces$C.y[i], faces$D.y[i], faces$E.y[i], faces$F.y[i], faces$G.y[i]))\n                   ,nrow = 5, ncol = 2)\n  \n  \n  faces$fWHR[i] = calcfWHR(points, i)\n  \n}\n\n# redo = faces$Rhesus[c(210, 209, 106, 81)] #81? 106 is key\n# fWHR[redo,]\n# #[1] FW226838 FW226838 - CA\n# # XO265798 - OR\n# # DW494999 - OR\n# table(faces$Rhesus)\n# \n# faces[c(210, 209, 106, 81),]\n# #Estrella6887\n# #Estrella6888\n# #Ramsay05178 - OR1\n# #26596 - OR2\n\n## Done.\n\n\n\nsum(levels(faces$Rhesus)!=0)\n\n\n\n### LFFH\n\n# a: top of the forehead\n# b: bottom of the chin\n# c,d: tops of the eyes, it doesn't matter which one is which\n# i: index from for loop\n\ncalcLFFH <- function(a,b,c,d){   # these arguments are coordinates\n  \n  # colnames(faces)\n  # i = 70\n  # a = faces[i,2:3]\n  # b = faces[i,4:5]\n  # c = faces[i,6:7]\n  # d = faces[i,8:9]\n  \n  # Finding the intersection point of two lines:\n  k.1 <- ((c[2]-a[2])/(c[1]-a[1]))\n  k.2 <- ((b[2]-d[2])/(b[1]-d[1]))  \n  # Reshaping the two functions you get a final form for y:\n  y <- (((-k.1/k.2)*d[2]+k.1*d[1]-k.1*c[1]+d[2])/(1-k.1/k.2))\n  # Can now calculate the x-value:\n  x <- ((y-d[2])+d[1]*k.2)/k.2\n  \n  # From LeFevre et al. 2012,\n  # LF/FH = c-b/a-b\n  \n  LFFH = dist(mapply(c,c(x,y),b)) / dist(mapply(c,a,b))\n    \n  return(LFFH)\n  \n}\n\n\nfor (i in seq_len(dim(faces)[1])){\n  faces$LFFH[i] = calcLFFH(c(faces$A.x[i],faces$A.y[i]),\n                       c(faces$B.x[i],faces$B.y[i]),\n                       c(faces$C.x[i],faces$C.y[i]),\n                       c(faces$D.x[i],faces$D.y[i]))\n  }\n\n\n\n## Merging:\n\nfWHR = merge(faces, persage, by.x=\"Rhesus\", by.y=\"Rhesus\", all =T)\n\n\n\n# ### Scaling:  # ??? Seemingly unnecessary... except maybe for Dominance.status\n# # grapple with this at a later stage\n# \n# s <- function(x) {scale(x)}\n# \n# #colnames(dfall)\n# \n# dfall[,c(24,29,89:98)] = s(dfall[,c(24,29,89:98)])\n\n      \n\n\ntable(persage$agenum > 5.5)\n\n\nhist(persage$Dominance.status)\nhist(persage$Dominance.status[persage$agenum < 5.5])\nhist(persage$Dominance.status[(persage$agenum >= 5.5)&(persage$Facility.x=='ZX6012')], breaks=3)\n\n\n\nlibrary(mixtools)\n\nmixture = normalmixEM(persage$Dominance.status[!is.na(persage$Dominance.status)])\nsummary(mixture)\nplot(mixture)\n\nindex.lower <- which.min(mixture$mu)  # Index of component with lower mean\n\nfind.cutoff <- function(proba=0.5, i=index.lower, model, x) {\n  ## Cutoff such that Pr[drawn from bad component] == proba\n  f <- function(x) {\n    proba - (model$lambda[i]*dnorm(x, model$mu[i], model$sigma[i]) /\n               (model$lambda[1]*dnorm(x, model$mu[1], model$sigma[1]) + model$lambda[2]*dnorm(x, model$mu[2], model$sigma[2])))\n  }\n  return(uniroot(f=f, lower=as.numeric(quantile(x,0.05)), upper=as.numeric(quantile(x,0.95))))  # Careful with division by zero if changing lower and upper\n}\n\ncutoffs <- c(find.cutoff(proba=0.5, model=mixture, x = persage$Dominance.status[!is.na(persage$Dominance.status)])\n             , find.cutoff(proba=0.75, model=mixture, x = persage$Dominance.status[!is.na(persage$Dominance.status)]))  # Around c(1.8, 1.5)\n\nhist(persage$Dominance.status[!is.na(persage$Dominance.status)], breaks=20)\nabline(v=cutoffs, col=c(\"red\", \"blue\"), lty=2)\nabline(v= 6 #cutoffs[1]\n       , col=\"red\", lty=2)\n\n\n\n# Add back into dataframe\n\nfWHR$Dominance.bin = fWHR$Dominance.status > cutoffs[1]\n\n\n",
    "created" : 1506075704625.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "223016275",
    "id" : "A235FAF8",
    "lastKnownWriteTime" : 1509977335,
    "last_content_update" : 1509977335346,
    "path" : "~/GitHub/R/fWHR/RhesusLaurenFWHR/rhesusImport.R",
    "project_path" : "rhesusImport.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}