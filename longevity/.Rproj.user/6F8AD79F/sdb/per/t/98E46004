{
    "contents" : "### Frailty ###\n\n### this script includes the most advanced, up-to-date models\n  # ... or should\n\n\n### Current flow\n\n# 1+2. unadjusted models with & without Origin \n#\n# 3+4. models adjusted with LASSO'd residuals\n\n\n\nlibrary(bbmle)\n\n\nattr(yLt, 'type') <- 'mcounting'\n\nattr(y.ahaz, 'type') <- 'mcounting'\n\n\nmodel.Ltrunc.spec = (yLt ~ as.factor(datX$sex) + #as.factor(datX$origin) + #as.factor(LvZ) + \n                       datX$Dom_CZ + datX$Con_CZ + datX$Agr_CZ + datX$Neu_CZ \n                     #+ datX$O.r1.DoB + datX$E.r2.DoB\n                     + datX$Opn_CZ + datX$Ext_CZ\n                     + frailty.gaussian(datX$sample)\n                     + strata(datX$strt))\ntestSurvDist(truncdistributions, model.Ltrunc.spec)\n # so it sure looks like log\n\n\n\nfrail.AFT <- survreg(yLt ~ as.factor(sex) +                       \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ\n                     + frailty.gaussian(sample) # should be gaussian\n                     + strata(strt)\n                     , data=datX, dist='logistic') # this model is NOT informed by LASSO\n\n# this is the model to end all models\nfrail.AFT.wild <- survreg(yLt ~ as.factor(sex) + \n                       as.factor(origin) +  \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ\n                     + frailty.gaussian(sample)\n                     + strata(strt)\n                     , data=datX, dist='logistic') # this model is NOT informed by LASSO\nsummary(frail.AFT.wild)\nconfint(frail.AFT.wild)\n\n\n# Scale:\n#   strt=1 strt=2 strt=3 strt=4 strt=5 \n# 4.30   5.36   3.67   2.46   8.32 \n\n\nHazRat = exp(frail.AFT.wild$coefficients * -1 * 1/8.32)\nHazRat\n\nr.sq.M(frail.AFT.wild, datX)\n\nfrail.AFT.unstrat <- survreg(yLt ~ as.factor(sex) + \n                            as.factor(origin) +  \n                            Dom_CZ + Ext_CZ + Con_CZ +\n                            Agr_CZ + Neu_CZ + Opn_CZ\n                          + frailty.gaussian(sample)\n                          , data=datX, dist='logistic') # this model is NOT informed by LASSO\n\n\n# O and E residulized\n\nfrail.A.EOr2 <- survreg(y.ahaz ~ as.factor(sex) + # this model is informed by LASSO\n                       as.factor(origin) +  \n                       Dom_CZ + E.r2.DoB + Con_CZ + \n                       Agr_CZ + Neu_CZ + O.r2.DoB\n                       + frailty(sample)\n                     , data=datX, dist='logistic')  # 'logistic' , 'extreme' , 't'\n\n# FT... also means FALSE/TRUE, as in the input given to the Surv object\nfrail.AFT.EAD <- survreg(yLt ~ as.factor(sex) + # this model is informed by LASSO(s)\n                            as.factor(origin) +  \n                            Dom_CZ + E.r2.DoB + Agr_CZ\n                          + frailty(sample)\n                          , data=datX, dist='logistic') \n\nfrail.AFT.ECAN <- survreg(yLt ~ as.factor(sex) + # this model is informed by LASSO(s)\n                           as.factor(origin) +  \n                           E.r2.DoB + Agr_CZ + Neu_CZ + Con_CZ\n                         + frailty(sample)\n                         , data=datX, dist='extreme') \n\n\nfrail.AFT.EOr2 <- survreg(yLt ~ as.factor(sex) + # this model is informed by LASSO\n                            Dom_CZ + E.r2.DoB + Con_CZ + \n                            Agr_CZ + Neu_CZ + O.r2.DoB\n                          + frailty.gaussian(sample)\n                          , data=datX, dist='logistic')  # 'logistic' , 'extreme' , 't'\nsummary(frail.AFT.EOr2)\nfrail.AFT.EOr2.wild <- survreg(yLt ~ as.factor(sex) + # this model is informed by LASSO\n                            as.factor(origin) +  \n                            Dom_CZ + E.r2.DoB + Con_CZ + \n                            Agr_CZ + Neu_CZ + O.r2.DoB\n                          + frailty.gaussian(sample)\n                          , data=datX, dist='logistic')  # 'logistic' , 'extreme' , 't'\nsummary(frail.AFT.EOr2.wild)\n\n\nfrail.AFT.Er2Or1.g <- survreg(yLt ~ as.factor(sex) + # this model is informed by LASSO\n                            as.factor(origin) +  \n                            Dom_CZ + E.r2.DoB + Con_CZ + \n                            Agr_CZ + Neu_CZ + O.r1.DoB\n                          + frailty.gamma(sample)\n                          , data=datX, dist='logistic')  # 'logistic' , '*extreme' , 't'\nfrail.AFT.Er2Or1 <- survreg(yLt ~ as.factor(sex) + # this model is informed by LASSO\n                              Dom_CZ + E.r2.DoB + Con_CZ + \n                              Agr_CZ + Neu_CZ + O.r1.DoB # is the O effect real?\n                            + frailty.gaussian(sample)\n                            , data=datX, dist='logistic')  # 'logistic' , '*extreme' , 't'\nsummary(frail.AFT.Er2Or1)\nfrail.AFT.Er2Or1.wild <- survreg(yLt ~ as.factor(sex) + # this model is informed by LASSO\n                              as.factor(origin) +  \n                              Dom_CZ + E.r2.DoB + Con_CZ + \n                              Agr_CZ + Neu_CZ + O.r1.DoB # is the O effect real?\n                            + frailty.gaussian(sample)\n                            , data=datX, dist='logistic')  # 'logistic' , '*extreme' , 't'\nsummary(frail.AFT.Er2Or1.wild)\n\nconfint(frail.AFT.Er2Or1.g)\n\n# http://rstudio-pubs-static.s3.amazonaws.com/5564_bc9e2d9a458c4660aa82882df90b7a6b.html\n\ninterp = exp(frail.AFT.Er2Or1.g$coefficients)\nshape = 1/frail.AFT.Er2Or1.g$scale\n\nHazRat = exp(frail.AFT.Er2Or1.g$coefficients * -1 * shape)\n\nr.sq.M <- function(model, data){\n  1-exp((2/length(data[,1]))*(model$loglik[1] - model$loglik[2]))\n}\n\nr.square <- r.sq.M(frail.AFT.Er2Or1, datX)\n1-exp((2/length(datX[,1]))*(frail.AFT.Er2Or1.g$loglik[1] - frail.AFT.Er2Or1.g$loglik[2]))\nr.square\n\nshape = 1/frail.AFT$scale\nHazRat = exp(frail.AFT$coefficients * -1 * shape)\n\nr.square <- 1-exp((2/length(datX[,1]))*(frail.AFT$loglik[1] - frail.AFT$loglik[2]))\nr.square\n\n\n### whhaa?\n\nfit.km = survfit(y ~ 1#, data=datX#, type='fleming'\n)\n\nquantile(fit.km)\nplot(fit.km)\n\n\nggsurv(fit.km) + theme_bw()\n\n\nf.EOr.km = npsurv(yLt ~ as.factor(sex), data=datX)\n\n#plot.flexsurvreg(frail.AFT.Er2Or1)\n                    \n                     as.factor(origin) +  \n                     Dom_CZ + E.r2.DoB + Con_CZ + \n                     Agr_CZ + Neu_CZ + O.r1.DoB, data=datX)\n\n\n\nplot(f.EOr.km)\n\nlibrary(Design)\n## Plot KM curves\nsurvplot(mod.EOr)\n         conf = c(\"none\",\"bands\",\"bars\")[1],\n         xlab = \"\", ylab = \"Survival\",\n         label.curves = TRUE,                     # label curves directly\n         time.inc = 100,                          # time increment\n         n.risk   = TRUE,                         # show number at risk\n)\n\n\n\n\n\n\n### No left truncation, but intervalized stuff instead\n\nf.10.DoB <-  survreg(y ~ as.factor(sex) + \n                         as.factor(origin) + DoB +\n                         Dom_CZ + Ext_CZ + Con_CZ +\n                         Agr_CZ + Neu_CZ + Opn_CZ\n                       + frailty(sample), data=Dataset,\n                       dist = 'weibull')\n                         \n                         \n\nf.10.age_pr <-  survreg(y ~ as.factor(sex) + \n                       as.factor(origin) + age_pr +\n                     Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ\n                     + frailty(sample), data=Dataset,\n                     dist = 'weibull')\n\nf.10.age <-  survreg(y ~ as.factor(sex) + \n                                as.factor(origin) + age +\n                              Dom_CZ + Ext_CZ + Con_CZ +\n                                Agr_CZ + Neu_CZ + Opn_CZ\n                              + frailty(sample), data=Dataset,\n                              dist = 'weibull')\n\n\n\n### Residualized from optimally tuned Elastic Net models\n\nmodel.Ltrunc.ENr = (yLt ~ as.factor(datX$sex) + #as.factor(datX$origin) + #as.factor(LvZ) + \n                       datX$D.cv.r + datX$C.cv.r + datX$A.cv.r \n                    + datX$N.cv.r + datX$O.cv.r + datX$E.cv.r\n                     + frailty.gaussian(datX$sample))\ntestSurvDist(truncdistributions, model.Ltrunc.ENr)\n\n\nf.ENr.1.l <- survreg(yLt ~ as.factor(datX$sex) + #as.factor(datX$origin) + #as.factor(LvZ) + \n                     datX$D.cv.r + datX$C.cv.r + datX$A.cv.r \n                   + datX$N.cv.r + datX$O.cv.r + datX$E.cv.r\n                   + frailty.gaussian(datX$sample), dist = 'logistic'\n                   )\n\nf.ENr.1.e <- survreg(yLt ~ as.factor(datX$sex) + #as.factor(datX$origin) + #as.factor(LvZ) + \n                     datX$D.cv.r + datX$C.cv.r + datX$A.cv.r \n                   + datX$N.cv.r + datX$O.cv.r + datX$E.cv.r\n                   + frailty.gaussian(datX$sample), dist = 'extreme'\n)\n\nf.ENr.2.l <- survreg(yLt ~ as.factor(datX$sex) + as.factor(datX$origin) + #as.factor(LvZ) + \n                       datX$D.cv.r + datX$C.cv.r + datX$A.cv.r \n                     + datX$N.cv.r + datX$O.cv.r + datX$E.cv.r\n                     + frailty.gaussian(datX$sample), dist = 'logistic'\n)\n\nf.ENr.2.e <- survreg(yLt ~ as.factor(datX$sex) + as.factor(datX$origin) + #as.factor(LvZ) + \n                       datX$D.cv.r + datX$C.cv.r + datX$A.cv.r \n                     + datX$N.cv.r + datX$O.cv.r + datX$E.cv.r\n                     + frailty.gaussian(datX$sample), dist = 'extreme'\n)\nAICtab(f.ENr.1.e, f.ENr.1.l, f.ENr.2.e, f.ENr.2.l,\n  f.stab.1.gamma.e,f.stab.1.gauss.e,f.stab.1.gamma.l,f.stab.1.gauss.l,\n  f.stab.2.gamma.e,f.stab.2.gauss.e,f.stab.2.gamma.l,f.stab.2.gauss.l,\n  frail.AFT, frail.AFT.wild, frail.AFT.unstrat,\n       logLik=T, sort=T, delta=T, base=T,weights=T)\n\nr.sq.M(f.ENr.1.l, datX)\n# [1] 0.1654328 # l.min\n# 0.19\nr.sq.M(f.ENr.2.l, datX)\n# [1] 0.2151364 # l.min\n# 0.228\n\nsummary(f.ENr.2.l) # seems like this is the best model out of all (?)\n\nAICtab(f.ENr.2.l, f.ENr.1.l, mod.ENr.2, f.stab.1.gauss.l, f.stab.2.gauss.l,\n       logLik=T, sort=T, delta=T, base=T,weights=T)\n\n\n\n### Residualized from lm's, chosen by stability selection\n\nr.sq.M(f.stab.2.gauss.l, datX)\n\n\nmodel.Ltrunc.stab = (yLt ~ as.factor(datX$sex) + #as.factor(datX$origin) + #as.factor(LvZ) + \n                      datX$D.r2.DoB + datX$C.r.DoB + datX$A.r.DoB \n                    + datX$N.r1.DoB + datX$O.r1.DoB + datX$E.r2.DoB\n                    + frailty.gaussian(datX$sample))\ntestSurvDist(truncdistributions, model.Ltrunc.stab)\n\nf.stab.1.gauss.l <- survreg(yLt ~ as.factor(sex) + #as.factor(origin) + #as.factor(LvZ) + \n                      D.r2.DoB + C.r.DoB + A.r.DoB \n                    + N.r1.DoB + O.r1.DoB + E.r2.DoB\n                    + frailty.gaussian(sample), data=datX,\n                    dist='logistic')\n\nf.stab.1.gamma.l <- survreg(yLt ~ as.factor(sex) + #as.factor(origin) + #as.factor(LvZ) + \n                      D.r2.DoB + C.r.DoB + A.r.DoB \n                    + N.r1.DoB + O.r1.DoB + E.r2.DoB\n                    + frailty.gamma(sample), data=datX,\n                    dist='logistic')\n\n\nf.stab.1.gauss.e <- survreg(yLt ~ as.factor(sex) + #as.factor(origin) + #as.factor(LvZ) + \n                      D.r2.DoB + C.r.DoB + A.r.DoB \n                    + N.r1.DoB + O.r1.DoB + E.r2.DoB\n                    + frailty.gaussian(sample), data=datX,\n                    dist='extreme')\n\nf.stab.1.gamma.e <- survreg(yLt ~ as.factor(sex) + #as.factor(origin) + #as.factor(LvZ) + \n                      D.r2.DoB + C.r.DoB + A.r.DoB \n                    + N.r1.DoB + O.r1.DoB + E.r2.DoB\n                    + frailty.gamma(sample), data=datX,\n                    dist='extreme')\n\nAICtab(f.stab.1.gamma.e,f.stab.1.gauss.e,f.stab.1.gamma.l,f.stab.1.gauss.l,\n       logLik=T, sort=T, delta=T, base=T,weights=T)\n\n\nf.stab.2.gauss.l <- survreg(yLt ~ as.factor(sex) + as.factor(origin) + #as.factor(LvZ) + \n                              D.r2.DoB + C.r.DoB + A.r.DoB \n                            + N.r1.DoB + O.r1.DoB + E.r2.DoB\n                            + frailty.gaussian(sample), data=datX,\n                            dist='logistic')\n\nf.stab.2.gamma.l <- survreg(yLt ~ as.factor(sex) + as.factor(origin) + #as.factor(LvZ) + \n                              D.r2.DoB + C.r.DoB + A.r.DoB \n                            + N.r1.DoB + O.r1.DoB + E.r2.DoB\n                            + frailty.gamma(sample), data=datX,\n                            dist='logistic')\n\n\nf.stab.2.gauss.e <- survreg(yLt ~ as.factor(sex) + as.factor(origin) + #as.factor(LvZ) + \n                              D.r2.DoB + C.r.DoB + A.r.DoB \n                            + N.r1.DoB + O.r1.DoB + E.r2.DoB\n                            + frailty.gaussian(sample), data=datX,\n                            dist='extreme')\n\nf.stab.2.gamma.e <- survreg(yLt ~ as.factor(sex) + as.factor(origin) + #as.factor(LvZ) + \n                              D.r2.DoB + C.r.DoB + A.r.DoB \n                            + N.r1.DoB + O.r1.DoB + E.r2.DoB\n                            + frailty.gamma(sample), data=datX,\n                            dist='extreme')\n\nAICtab(f.stab.2.gamma.e,f.stab.2.gauss.e,f.stab.2.gamma.l,f.stab.2.gauss.l,\n       logLik=T, sort=T, delta=T, base=T,weights=T)\nsummary(f.stab.2.gauss.l)\nsummary(f.stab.1.gauss.l)\nconfint(f.stab.2.gauss.l)\n\nr.sq.M(f.stab.2.gauss.l, data = datX)\nr.sq.M(f.stab.1.gauss.l, data = datX)\n\n\n# Cox is basically useless for all this\nfrail.cox.EOr2 <- coxph(yLt ~ as.factor(sex) + \n                          as.factor(origin) +  \n                          Dom_CZ + E.r2.DoB + Con_CZ + #E.resid3 +\n                          Agr_CZ + Neu_CZ + O.r2.DoB\n                        + frailty(sample)\n                        , data=datX) # this model is informed by LASSO\n\nrequire(coxme)\n\nattr(yLt, 'type') <- 'counting'\n#attr(yLt, 'type') <- 'mcounting'\n\ncoxme.1 <- coxme(yLt ~ as.factor(sex) + \n                       as.factor(origin) +  \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ\n                     + (1 | sample)\n                     , data=datX)\n\ncoxme.2 <- coxme(yLt ~ as.factor(sex) + \n                   as.factor(origin) +  \n                   Dom_CZ + E.r2.DoB + Con_CZ + \n                   Agr_CZ + Neu_CZ + O.r2.DoB\n                 + (1 | sample)\n                 , data=datX)\n\ncoxme.2.1 <- coxme(yLt ~ as.factor(sex) + \n                   as.factor(origin) +  \n                   Dom_CZ + E.r2.DoB + Con_CZ + \n                   Agr_CZ + Neu_CZ + O.r1.DoB\n                 + (1 | sample)\n                 , data=datX)\n\ncoxme.3 <- coxme(yLt ~ as.factor(sex) + \n                   as.factor(origin) +  \n                   Dom_CZ + E.r2.DoB + Agr_CZ + \n                 + (1 | sample)\n                 , data=datX)\n\n\n\ncoxme.4 <- coxme(y.ahaz ~ as.factor(sex) + \n                   as.factor(origin) +  \n                   Dom_CZ + E.r2.DoB + Con_CZ + \n                   Agr_CZ + Neu_CZ + O.r2.DoB\n                   + (1 | sample)\n                 , data=datX)\n\n\n\ncoxme.5 = coxme(yLt ~ as.factor(sex) + as.factor(origin) + #as.factor(LvZ) + \n                               D.cv.r + C.cv.r + A.cv.r \n                             + N.cv.r + O.cv.r + E.cv.r\n                             + (1 | sample), data=datX)\n\n\ncoxme.6 = coxme(yLt ~ as.factor(sex) + \n                  as.factor(origin) +  \n                  Dom_CZ + Ext_CZ + Con_CZ +\n                  Agr_CZ + Neu_CZ + Opn_CZ\n                + (1 | sample) + strata(strt)\n                , data=datX)\n\n\nAICtab(coxme.1, coxme.6, coxme.5,\n       logLik=T, sort=T, delta=T, base=T,weights=T)\n",
    "created" : 1457987720726.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3680824146",
    "id" : "98E46004",
    "lastKnownWriteTime" : 1463072923,
    "path" : "~/GitHub/R/longevity/frailty.R",
    "project_path" : "frailty.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "type" : "r_source"
}