{
    "contents" : "# Survival Analyses\n#   (only)\n\nlibrary(survival)\n\n# library(OutlierDC)\n# \n# foA <- odc(themodel, data=Dataset, method=\"score\")\n# foB <- odc(themodel, data=Dataset, method=\"residual\")\n# foC <- odc(themodel, data=Dataset, method=\"boxplot\")\n# \n# fo1 <- odc(yLt ~ as.factor(sex) + \n#              as.factor(origin) + as.factor(LvZ) + \n#              Dom_CZ + Ext_CZ + Con_CZ +\n#              Agr_CZ + Neu_CZ + Opn_CZ, data=datX, method=\"score\")\n# fo2 <- odc(yLt ~ as.factor(sex) + \n#              as.factor(origin) + as.factor(LvZ) + \n#              Dom_CZ + Ext_CZ + Con_CZ +\n#              Agr_CZ + Neu_CZ + Opn_CZ, data=datX, method=\"residual\")\n# fo3 <- odc(yLt ~ as.factor(sex) + \n#              as.factor(origin) + as.factor(LvZ) + \n#              Dom_CZ + Ext_CZ + Con_CZ +\n#              Agr_CZ + Neu_CZ + Opn_CZ, data=datX, method=\"boxplot\")\n## seem pretty meaningless\ndetach(\"package:OutlierDC\")\n\n\n# Alex's code for finding the ideal distribution\n\nthedistributions<-c(\"weibull\",\"exponential\",\"lognormal\",\"loglogistic\")\n\nthemodel <- (y ~ as.factor(Dataset$sex) + #Dataset$DoB + #Dataset$age_pr + Dataset$age + \n               as.factor(Dataset$origin) + as.factor(Dataset$LvZ) + \n               Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n               Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ\n)\n\nmodel.p <- (y ~ Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n               Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ\n)\n\nmodel.agexE <- (y ~ as.factor(Dataset$sex) + \n                  as.factor(Dataset$origin) + as.factor(Dataset$LvZ) +\n                Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n              Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ +\n                Dataset$Ext_CZ*Dataset$age_pr_adj\n              )\n\n\ntestSurvDist(distlist, model.p)\n\n# loglogistic? weibull?\n\n\n### The model(s)\n\nmod0.w <- survreg(y ~ 1, dist='weibull', control=list(maxiter = 10000))\n\nmod1.w <- survreg(themodel, dist = 'weibull', control=list(maxiter = 10000))\nmod1.ll <- survreg(themodel, dist = 'loglogistic')\nmod1.e <- survreg(themodel, dist = 'exponential')\n\nmod.p.ll <- survreg(model.p, dist = 'loglogistic')\n  \nsummary(mod1.ll)\n\nfit1 <- survfit(yLt ~ 1 + as.factor(Dataset$sex)\n                )\nplot(fit1)\nsummary(fit1)\n\nmod2.ll <- survreg(model.agexE, dist = 'loglogistic')\n\nmod.3 <- coxph(themodel)\n# Cox model doesn't support \"mright\" survival data\n\n# what happens if we build in the adjusted E and O\n\nmod.10.DoB <-  survreg(y ~ as.factor(Dataset$sex) + Dataset$DoB + #Dataset$age_pr + Dataset$age + \n              as.factor(Dataset$origin) + as.factor(Dataset$LvZ) + \n              Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n              Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ,\n              dist = 'weibull'\n)\n\nmod.10.age_pr <- survreg(y ~ as.factor(Dataset$sex) + Dataset$age_pr +\n                        as.factor(Dataset$origin) + as.factor(Dataset$LvZ) + \n                        Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n                        Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ,\n                        dist = 'weibull'\n)\n\nmod.10.age <- survreg(y ~ as.factor(Dataset$sex) + Dataset$age +\n                           as.factor(Dataset$origin) + as.factor(Dataset$LvZ) + \n                           Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n                           Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ,\n                      dist = 'weibull'\n)\n# so with just age, the Personality stuff comes through\n  \n\n\n# testing\nattr(y, 'type') <- 'right'\n#Surv(age,status)\nmod.99 <-  survreg(y ~ 1 + as.factor(sex) #+ #Dataset$DoB + #Dataset$age_pr + Dataset$age + \n                         #as.factor(Dataset$origin) + #as.factor(Dataset$LvZ) + \n                        # Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ\n                        #+ Dataset$Agr_CZ #+ Dataset$Neu_CZ# + Dataset$Opn_CZ\n                   , data = Dataset    \n                   , dist = 'weibull'\n)  \n\nmod.199 <- survreg(yLt ~ 1, , dist = 't')\n# fuck\n\n\n\n\nlibrary(car)\n\n\n### INTERVAL censoring?\n### ... left TRUNCATION (!)\n#library(flexsurv)\n\n\n#“extreme”, “logistic”, “gaussian”, “weibull”, “exponential”, “rayleigh”, “loggaussian”, \n# “lognormal”, “loglogistic”, “t\ndistlist = c('extreme', 'logistic', 'gaussian', 'weibull', 'exponential', 'rayleigh', 'loggaussian', \n 'lognormal', 'loglogistic', 't')\n\nmod.trunc <- survreg(yLt ~ as.factor(sex) + \n                       #as.factor(origin) + # as.factor(LvZ) + \n                       Dom_CZ + Con_CZ + Ext_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ #+ adjE\n                     ,dist = \"t\", data=datX\n                     )\n# Log(scale)                2.061     0.0465  44.340 0.00e+00\n# maybe change from extreme to t?\n\n# Log(scale)                 1.505     0.0627 23.989 3.66e-127\n# better with t\n\nsummary(mod.trunc)\n\nconfint(mod.trunc)\n\nexp(as.numeric(mod.trunc$coefficients[7]))\n\nmod.t.adj <- survreg(yLt ~ as.factor(sex) + \n                       as.factor(origin) + as.factor(LvZ) + \n                       adjD + adjE + adjC +\n                       adjA + adjN + adjO,\n                     dist = \"t\", data=datX\n)\n\n\n                 \n# Thought:                  \n# subtract year(s) from DoD of those who died before being rated...? \n# Done - see importProcess\n\nmod.t.agexE <- survreg(yLt ~ as.factor(sex) + \n                       as.factor(origin) + as.factor(LvZ) + \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ\n                       + DoB:Ext_CZ\n                       , dist = \"t\", data=datX\n)\nsummary(mod.t.agexE)\n                 \nanova(mod.t.agexE)\n\nmod.t.agexEDNO <- survreg(yLt ~ as.factor(sex) + \n                         as.factor(origin) + as.factor(LvZ) + \n                         Dom_CZ + Ext_CZ + Con_CZ +\n                         Agr_CZ + Neu_CZ + Opn_CZ\n                       + age_pr:Ext_CZ + age_pr:Dom_CZ\n                       + age_pr:Neu_CZ + age_pr:Opn_CZ\n                       , dist = \"t\", data=datX\n)\n\n\nsource(\"https://bioconductor.org/biocLite.R\")\nbiocLite(\"survcomp\")\n\nsurvdiff(themodel)\n#Error in survdiff(themodel) : Right censored data only   # what the hell\n\nlibrary(coin)\n#logrank_test(themodel)\n\n\n\nfit.T1 <- survfit(yLt ~ as.factor(sex) + \n                    as.factor(origin) + as.factor(LvZ) + \n                    Dom_CZ + Ext_CZ + Con_CZ +\n                    Agr_CZ + Neu_CZ + Opn_CZ\n                  , data=datX)\n\n\n# residualized E in AFT?\n\nmod.E.r2 <- survreg(yLt ~ as.factor(sex) + \n                    as.factor(origin) + as.factor(LvZ) + \n                    Dom_CZ + E.r2.DoB + Con_CZ + #E.resid3 +\n                    Agr_CZ + Neu_CZ + Opn_CZ\n                  , data=datX, dist='t')\n\nsummary(mod.t.Er2)\n\n\n## O and E residulized\n\nmod.EOr <- survreg(yLt ~ as.factor(sex) + \n                       as.factor(origin) + #as.factor(LvZ) + \n                       Dom_CZ + E.r2.DoB + Con_CZ +\n                       Agr_CZ + Neu_CZ + O.r1.DoB\n                     , data=datX, dist='logistic') # this model is informed by LASSO\nsummary(mod.EOr)\n\nmodel.Ltrunc.spec = (yLt ~ as.factor(datX$sex) + as.factor(datX$origin) + #as.factor(LvZ) + \n                       datX$Dom_CZ + datX$E.r2.DoB + datX$Con_CZ + datX$Agr_CZ + datX$Neu_CZ + datX$O.r2.DoB)\ntestSurvDist(truncdistributions, model.Ltrunc.spec)\n                             \n\ndatX$Yerkes = as.factor(datX$sample=='Yerkes')\ndatX$Japan = as.factor(datX$sample=='Japan')\n\nmod.Alex.int <- survreg(yLt ~ as.factor(sex) + \n                       as.factor(origin) +# as.factor(LvZ) + \n                       Dom_CZ + Con_CZ + \n                       Agr_CZ + Neu_CZ + O.r2.DoB\n                       + E.r2.DoB * as.numeric(Yerkes)\n                       + E.r2.DoB * as.numeric(Japan)\n                       \n                     , data=datX, dist='t') # this model is informed by LASSO\n\n\n\n# with all significantly confounded dimensions properly residualized\nmod.EODN.r <- survreg(yLt ~ as.factor(sex) + \n                       as.factor(origin) + as.factor(LvZ) + \n                        D.r3.DoB + E.r3.DoB + Con_CZ + #E.resid3 +\n                       Agr_CZ + N.r1.DoB + O.r2.DoB\n                     , data=datX, dist='t')\n\n\nmod.EODN.r.betr <- survreg(yLt ~ as.factor(sex) + \n                           as.factor(origin) + as.factor(LvZ) + \n                           D.r3 + E.r3 + Con_CZ + #E.resid3 +\n                           Agr_CZ + N.r1 + O.r2\n                         , data=datX, dist='t')\n\n\nmod.ENr.2 <- survreg(yLt ~ as.factor(sex) + \n                         as.factor(origin) + #as.factor(LvZ) + \n                         D.cv.r + E.cv.r + C.cv.r +\n                         A.cv.r + N.cv.r + O.cv.r\n                       , data=datX, dist='logistic')\n\n\n\n### LASSO...\n\n# library(glmnet)\n# \n# netform <- Dataset[,c(2,62,66,71,72,73,74,75,76,77)]\n# netform$origin <- droplevels(netform$origin)\n# x <- model.matrix( ~ sex + age_pr + origin + LvZ + \n#                      Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ - 1, netform)\n# \n# x <- x[,-3] # fix some origin glitches\n# y1 <- y[-354,]\n#   \n# net1 <- glmnet(x, y1, family=\"cox\")\n# \n# # this isn't working:\n# net1.cv <- cv.glmnet(x, y1, family=\"cox\", type.measure = \"deviance\", grouped=FALSE)\n# plot(net1.cv)\n# \n# plot(net1, label=T)\n# plot(net1, xvar=\"lambda\", label=T)  \n# plot(net1, xvar=\"dev\", label=T) \n# \n# \n# coef(net1, s=net1.cv$lambda.min\n#      )\n# coef(net1, s=0.01)\n\n\n### testing distr for left truncation\n\ntruncdistributions = c(\"t\",\"extreme\",\"logistic\")\n\ntruncmod <- (yLt ~ as.factor(datX$sex) + \n                       as.factor(datX$origin) + #as.factor(datX$LvZ) + \n               datX$Dom_CZ + datX$Ext_CZ + datX$Con_CZ +\n               datX$Agr_CZ + datX$Neu_CZ + datX$Opn_CZ)\n\n\n# Extreme value distribution\n# Loglik(model)= -846.9   Loglik(intercept only)= -957.9\n# Chisq= 221.83 on 10 degrees of freedom, p= 0 \n# Number of Newton-Raphson Iterations: 6 \n# n=361 (1 observation deleted due to missingness)\n# \n# 1            t        1793.482    1577.619 0.11779359 215.8636\n# 3     logistic        1797.079    1587.880 0.08042083 209.1991\n# 2      extreme        1915.704    1693.870 0.02409324 221.8341\n\n\n# not really informative or useful\n\nlibrary(flexsurv)\nattr(yLt, 'type') <- 'counting'\n\n\n# distlist = c('gengamma', 'genf', 'gompertz', 'weibull', 'exp', 'gamma', 'llogis', \n#              'lnorm')\n# mod.l.f = (yLt ~ as.factor(datX$sex) + as.factor(datX$origin) + #as.factor(LvZ) + \n#                        datX$Dom_CZ + datX$E.r2.DoB + datX$Con_CZ + datX$Agr_CZ + datX$Neu_CZ + datX$O.r1.DoB\n#                      + frailty.gamma(datX$sample))\n# testSurvDist <- function(thedistributions, model){\n#   distlist = 0\n#   LLlist1 = 0\n#   LLlist2 = 0\n#   estimates = 0\n#   fAIC = NULL\n#   for (i in 1:length(thedistributions)) {\n#     thisdist = thedistributions[i]\n#     fit = flexsurvreg(model, dist = thisdist)\n#     distlist[i] = thisdist\n#     LLlist1[i] = -2*(fit$loglik[1])\n#     LLlist2[i] = -2*(fit$loglik[2])\n#     fAIC[i] = extractAIC(fit)[2]\n#     estimates[i] = exp(as.numeric(fit$coefficients[2]))  }\n#   Result = data.frame(distlist, LLlist1, LLlist2, estimates, LLlist1 - LLlist2, fAIC)\n#   names(Result) = c(\"Distribution\", \"-2*LL(Baseline)\", \"-2*LL(Full)\",\"Estimate\", 'LL diff','AIC')\n#   Result = Result[order(Result[,3]),]\n#   Result\n# }\n# testSurvDist(distlist, mod.l.f)\n\nm.flx.EOr <- flexsurvreg(yLt ~ as.factor(sex) +\n                       as.factor(origin) + #as.factor(LvZ) +\n                       Dom_CZ + E.r2.DoB + Con_CZ +\n                       Agr_CZ + Neu_CZ + O.r1.DoB\n                       + frailty.gaussian(sample)\n                     , data=datX, dist='gengamma')\nm.flx.EOr\nconfint(m.flx.EOr)\nplot.flexsurvreg(m.flx.EOr)\n\n# \n# model.Ltrunc.spec = (yLt ~ as.factor(datX$sex) + as.factor(datX$origin) + #as.factor(LvZ) + \n#                        datX$Dom_CZ + datX$E.r2.DoB + datX$Con_CZ + datX$Agr_CZ + datX$Neu_CZ + datX$O.r1.DoB)\n# testSurvDist(truncdistributions, model.Ltrunc.spec)\n\nattr(yLt, 'type') <- 'mcounting'\n",
    "created" : 1448132166304.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1205310498",
    "id" : "9F20AF72",
    "lastKnownWriteTime" : 1461234737,
    "path" : "~/GitHub/R/longevity/chimpAnalyses.R",
    "project_path" : "chimpAnalyses.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}