{
    "contents" : "# survival analyses\n\n#\n\nlibrary(survival)\n\nDataset <- all[(all$sample == 'AZA') \n               | (all$sample == 'Yerkes') | (all$sample == 'Taronga'),]\n\n# Alex's code for finding the ideal distribution\n\nthedistributions<-c(\"weibull\",\"exponential\",\"lognormal\",\"loglogistic\")\n\n# RIGHT censoring - matching 'time' and 'event'\n\nlevels(Dataset$status)[levels(Dataset$status)==\"Death\"] <- 1\nlevels(Dataset$status)[levels(Dataset$status)==\"Alive\"] <- 0\n\ny <- Surv(as.numeric(Dataset$lastDate),Dataset$status)\n\n\nthemodel <- (y ~ as.factor(Dataset$sex) + Dataset$age_pr + #Dataset$age + \n               as.factor(Dataset$origin) + as.factor(Dataset$LvZ) + \n               Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n               Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ\n)\n\nmodel.p <- (y ~ Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n               Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ\n)\n\ndistlist = 0\nLLlist1 = 0\nLLlist2 = 0\nestimates = 0\nfor (i in 1:length(thedistributions)) {\n  thisdist = thedistributions[i]\n  fit = survreg(themodel, dist = thisdist)\n  distlist[i] = thisdist\n  LLlist1[i] = -2*(fit$loglik[1])\n  LLlist2[i] = -2*(fit$loglik[2])\n  estimates[i] = exp(as.numeric(fit$coefficients[2]))  }\nResult = data.frame(distlist, LLlist1, LLlist2, estimates, LLlist1 - LLlist2)\nnames(Result) = c(\"Distribution\", \"-2*LL(Baseline)\", \"-2*LL(Full)\",\"Estimate\")\nResult = Result[order(Result[,3]),]\nResult\n\n# loglogistic? weibull?\n\n\n### The model(s)\n\nmod1.w <- survreg(themodel, dist = 'weibull')\nmod1.ll <- survreg(themodel, dist = 'loglogistic')\nmod1.e <- survreg(themodel, dist = 'exponential')\n\nmod.p.ll <- survreg(model.p, dist = 'loglogistic')\n  \nsummary(mod1.ll)\n\nlibrary(car)\n\n\n### INTERVAL censoring\n\ny.Ltrunc <- Surv(as.numeric(Dataset$DOPRmin), as.numeric(Dataset$lastDate),Dataset$status ,\n                 type='counting')\n\nrmNAs = !is.na(y.Ltrunc)\n\nyLt = y.Ltrunc[rmNAs]\ndatX = Dataset[rmNAs,]\n\nmod.trunc <- survreg(yLt ~ as.factor(sex) + #Dataset$age + \n                       as.factor(origin) + as.factor(LvZ) + \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ,\n                     dist = \"loglogistic\", data=datX\n                     )\n                 \n# Thought:                  \n# subtract a year from DoD of those who died before being rated...?                 \n                 \n\n### left TRUNCATION??\n\n\n\n### LASSO...\n\nlibrary(glmnet)\n\nnetform <- Dataset[,c(2,62,66,71,72,73,74,75,76,77)]\nnetform$origin <- droplevels(netform$origin)\nx <- model.matrix( ~ sex + age_pr + origin + LvZ + \n                     Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ - 1, netform)\n\nx <- x[,-3] # fix some origin glitches\ny1 <- y[-354,]\n  \nnet1 <- glmnet(x, y1, family=\"cox\")\n\n# this isn't working:\nnet1.cv <- cv.glmnet(x, y1, family=\"cox\", type.measure = \"deviance\", grouped=FALSE)\nplot(net1.cv)\n\nplot(net1, label=T)\nplot(net1, xvar=\"lambda\", label=T)  \nplot(net1, xvar=\"dev\", label=T) \n\n\ncoef(net1, s=net1.cv$lambda.min\n     )\ncoef(net1, s=0.01)\n\n\n",
    "created" : 1448132166304.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "984045802",
    "id" : "9F20AF72",
    "lastKnownWriteTime" : 1448233422,
    "path" : "~/GitHub/R/longevity/chimpAnalyses.R",
    "project_path" : "chimpAnalyses.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}