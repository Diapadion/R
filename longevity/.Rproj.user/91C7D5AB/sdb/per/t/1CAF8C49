{
    "contents" : "# survival analyses\n\n#\n\nlibrary(survival)\n\nDataset <- all[(all$sample == 'AZA') \n               | (all$sample == 'Yerkes') | (all$sample == 'Taronga'),]\n\nDataset$origin <- droplevels(Dataset$origin)\n\nlibrary(OutlierDC)\n\nfoA <- odc(themodel, data=Dataset, method=\"score\")\nfoB <- odc(themodel, data=Dataset, method=\"residual\")\nfoC <- odc(themodel, data=Dataset, method=\"boxplot\")\n\nfo1 <- odc(yLt ~ as.factor(sex) + \n             as.factor(origin) + as.factor(LvZ) + \n             Dom_CZ + Ext_CZ + Con_CZ +\n             Agr_CZ + Neu_CZ + Opn_CZ, data=datX, method=\"score\")\nfo2 <- odc(yLt ~ as.factor(sex) + \n             as.factor(origin) + as.factor(LvZ) + \n             Dom_CZ + Ext_CZ + Con_CZ +\n             Agr_CZ + Neu_CZ + Opn_CZ, data=datX, method=\"residual\")\nfo3 <- odc(yLt ~ as.factor(sex) + \n             as.factor(origin) + as.factor(LvZ) + \n             Dom_CZ + Ext_CZ + Con_CZ +\n             Agr_CZ + Neu_CZ + Opn_CZ, data=datX, method=\"boxplot\")\n# seem pretty meaningless\n\n\n# Alex's code for finding the ideal distribution\n\nthedistributions<-c(\"weibull\",\"exponential\",\"lognormal\",\"loglogistic\")\n\n# RIGHT censoring - matching 'time' and 'event'\n\nlevels(Dataset$status)[levels(Dataset$status)==\"Death\"] <- 1\nlevels(Dataset$status)[levels(Dataset$status)==\"Alive\"] <- 0\n\ny <- Surv(as.numeric(Dataset$lastDate),Dataset$status)\n\n\nthemodel <- (y ~ as.factor(Dataset$sex) + Dataset$age_pr + #Dataset$age + \n               as.factor(Dataset$origin) + as.factor(Dataset$LvZ) + \n               Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n               Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ\n)\n\nmodel.p <- (y ~ Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n               Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ\n)\n\nmodel.agexE <- (y ~ as.factor(Dataset$sex) + \n                  as.factor(Dataset$origin) + as.factor(Dataset$LvZ) +\n                Dataset$Dom_CZ + Dataset$Ext_CZ + Dataset$Con_CZ +\n              Dataset$Agr_CZ + Dataset$Neu_CZ + Dataset$Opn_CZ +\n                Dataset$Ext_CZ*Dataset$age_pr_adj\n              )\n\ndistlist = 0\nLLlist1 = 0\nLLlist2 = 0\nestimates = 0\nfor (i in 1:length(thedistributions)) {\n  thisdist = thedistributions[i]\n  fit = survreg(themodel, dist = thisdist)\n  distlist[i] = thisdist\n  LLlist1[i] = -2*(fit$loglik[1])\n  LLlist2[i] = -2*(fit$loglik[2])\n  estimates[i] = exp(as.numeric(fit$coefficients[2]))  }\nResult = data.frame(distlist, LLlist1, LLlist2, estimates, LLlist1 - LLlist2)\nnames(Result) = c(\"Distribution\", \"-2*LL(Baseline)\", \"-2*LL(Full)\",\"Estimate\")\nResult = Result[order(Result[,3]),]\nResult\n\n# loglogistic? weibull?\n\n\n### The model(s)\n\nmod1.w <- survreg(themodel, dist = 'weibull')\nmod1.ll <- survreg(themodel, dist = 'loglogistic')\nmod1.e <- survreg(themodel, dist = 'exponential')\n\nmod.p.ll <- survreg(model.p, dist = 'loglogistic')\n  \nsummary(mod1.ll)\n\nfit1 <- survfit(themodel)\n\nmod2.ll <- survreg(model.agexE, dist = 'loglogistic')\n\nmod.3 <- coxph(themodel)\n# Cox model doesn't support \"mright\" survival data\n\nlibrary(car)\n\n\n### INTERVAL censoring?\n### ... left TRUNCATION (!)\nlibrary(flexsurv)\n\n# currently optional - my attempt to control for age effects within E\nDataset$adjE <- scale(Dataset$Ext_CZ-scale(1/(1 + Dataset$age_pr_adj)))\n# and now O\nDataset$adjO <- scale(Dataset$Opn_CZ-scale(1/(1 + Dataset$age_pr_adj)))\n# hell, what if we do it for all of them?\nDataset$adjD <- scale(Dataset$Dom_CZ-scale(1/(1 + Dataset$age_pr_adj)))\nDataset$adjC <- scale(Dataset$Con_CZ-scale(1/(1 + Dataset$age_pr_adj)))\nDataset$adjA <- scale(Dataset$Agr_CZ-scale(1/(1 + Dataset$age_pr_adj)))\nDataset$adjN <- scale(Dataset$Neu_CZ-scale(1/(1 + Dataset$age_pr_adj)))\n\n\n### LOOK ABOVE\n\n#y.Ltrunc <- Surv(as.numeric(Dataset$DOPRmin), as.numeric(Dataset$lastDate),Dataset$status ,\n#                 type='counting')\ny.Ltrunc <- Surv(Dataset$age_pr_adj, Dataset$age,Dataset$status,\n                 type='counting')\n\n# attr(y.Ltrunc, 'type') <- 'counting'\n\nrmNAs = !is.na(y.Ltrunc)\n\nyLt = y.Ltrunc[rmNAs]\nattr(y.Ltrunc, 'type')\nattr(yLt, 'type')\ndatX = Dataset[rmNAs,]\n\n\n\n#“extreme”, “logistic”, “gaussian”, “weibull”, “exponential”, “rayleigh”, “loggaussian”, \n# “lognormal”, “loglogistic”, “t\n\nmod.trunc <- survreg(yLt ~ as.factor(sex) + \n                       as.factor(origin) + as.factor(LvZ) + \n                       Dom_CZ + adjE + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ,\n                     dist = \"t\", data=datX\n                     )\n# Log(scale)                2.061     0.0465  44.340 0.00e+00\n# maybe change from extreme to t?\n\n# Log(scale)                 1.505     0.0627 23.989 3.66e-127\n# better with t\n\nsummary(mod.trunc)\n\nconfint(mod.trunc)\n\nexp(as.numeric(mod.trunc$coefficients[7]))\n\nmod.t.adj <- survreg(yLt ~ as.factor(sex) + \n                       as.factor(origin) + as.factor(LvZ) + \n                       adjD + adjE + adjC +\n                       adjA + adjN + adjO,\n                     dist = \"t\", data=datX\n)\n\n\n                 \n# Thought:                  \n# subtract year(s) from DoD of those who died before being rated...? \n# Done - see importProcess\n\nmod.t.agexE <- survreg(yLt ~ as.factor(sex) + \n                       as.factor(origin) + as.factor(LvZ) + \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ\n                       + DoB:Ext_CZ\n                       , dist = \"t\", data=datX\n)\nsummary(mod.t.agexE)\n                 \nanova(mod.t.agexE)\n\nmod.t.agexEDNO <- survreg(yLt ~ as.factor(sex) + \n                         as.factor(origin) + as.factor(LvZ) + \n                         Dom_CZ + Ext_CZ + Con_CZ +\n                         Agr_CZ + Neu_CZ + Opn_CZ\n                       + age_pr:Ext_CZ + age_pr:Dom_CZ\n                       + age_pr:Neu_CZ + age_pr:Opn_CZ\n                       , dist = \"t\", data=datX\n)\n\n\nsource(\"https://bioconductor.org/biocLite.R\")\nbiocLite(\"survcomp\")\n\nsurvdiff(themodel)\n#Error in survdiff(themodel) : Right censored data only   # what the hell\n\nlibrary(coin)\n#logrank_test(themodel)\n\n\n\nfit.T1 <- survfit(yLt ~ as.factor(sex) + \n                    as.factor(origin) + as.factor(LvZ) + \n                    Dom_CZ + Ext_CZ + Con_CZ +\n                    Agr_CZ + Neu_CZ + Opn_CZ\n                  , data=datX)\n\n\n\n\n### LASSO...\n\nlibrary(glmnet)\n\nnetform <- Dataset[,c(2,62,66,71,72,73,74,75,76,77)]\nnetform$origin <- droplevels(netform$origin)\nx <- model.matrix( ~ sex + age_pr + origin + LvZ + \n                     Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ - 1, netform)\n\nx <- x[,-3] # fix some origin glitches\ny1 <- y[-354,]\n  \nnet1 <- glmnet(x, y1, family=\"cox\")\n\n# this isn't working:\nnet1.cv <- cv.glmnet(x, y1, family=\"cox\", type.measure = \"deviance\", grouped=FALSE)\nplot(net1.cv)\n\nplot(net1, label=T)\nplot(net1, xvar=\"lambda\", label=T)  \nplot(net1, xvar=\"dev\", label=T) \n\n\ncoef(net1, s=net1.cv$lambda.min\n     )\ncoef(net1, s=0.01)\n\n\n### testing distr for left truncation\n\ntruncdistributions = c(\"t\",\"extreme\",\"logistic\")\n\ntruncmod <- (yLt ~ as.factor(datX$sex) + \n                       as.factor(datX$origin) + as.factor(datX$LvZ) + \n               datX$Dom_CZ + datX$Ext_CZ + datX$Con_CZ +\n               datX$Agr_CZ + datX$Neu_CZ + datX$Opn_CZ)\n\ndistlist = 0\nLLlist1 = 0\nLLlist2 = 0\nestimates = 0\nfor (i in 1:length(truncdistributions)) {\n  thisdist = truncdistributions[i]\n  fit = survreg(truncmod, dist = thisdist)\n  distlist[i] = thisdist\n  LLlist1[i] = -2*(fit$loglik[1])\n  LLlist2[i] = -2*(fit$loglik[2])\n  estimates[i] = exp(as.numeric(fit$coefficients[2]))  }\nResult = data.frame(distlist, LLlist1, LLlist2, estimates, LLlist1 - LLlist2)\nnames(Result) = c(\"Distribution\", \"-2*LL(Baseline)\", \"-2*LL(Full)\",\"Estimate\")\nResult = Result[order(Result[,3]),]\nResult\n\n\n# Extreme value distribution\n# Loglik(model)= -846.9   Loglik(intercept only)= -957.9\n# Chisq= 221.83 on 10 degrees of freedom, p= 0 \n# Number of Newton-Raphson Iterations: 6 \n# n=361 (1 observation deleted due to missingness)\n# \n# 1            t        1793.482    1577.619 0.11779359 215.8636\n# 3     logistic        1797.079    1587.880 0.08042083 209.1991\n# 2      extreme        1915.704    1693.870 0.02409324 221.8341\n",
    "created" : 1448036952550.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1487363292",
    "id" : "1CAF8C49",
    "lastKnownWriteTime" : 1448395861,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/chimpAnalyses.R",
    "project_path" : "chimpAnalyses.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "type" : "r_source"
}