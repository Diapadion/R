{
    "collab_server" : "",
    "contents" : "### Decision tree analyses\n\n\nlibrary(party)\nlibrary(partykit)\nlibrary(LTRCtrees)\nlibrary(rpart.plot)\nlibrary(ipred)\n\n\n\n\ncit.1 = LTRCIT(Surv(age_pr, age, status) ~ \n                 as.factor(sex) + as.factor(origin) +  \n                 Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n               data=datX)\n\ncit.1.x = LTRCIT(Surv(age_pr, age, status) ~ \n                   # as.factor(sex) + as.factor(origin) +  \n                   Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                 data=datX)\n\n\ncit.2 = LTRCIT(Surv(age_pr, age, status) ~ \n                 as.factor(sex) + as.factor(origin) +  \n                 D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n               data=datX)\n\ncit.2.x = LTRCIT(Surv(age_pr, age, status) ~ \n                   # as.factor(sex) + as.factor(origin) +  \n                   D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                 data=datX)\n\n\nplot(cit.1)\nprint(cit.1.x)\n\n\n### Random forest\n\ncif.1 = cforest(Surv(age_pr, age, status) ~ \n                  as.factor(sex) + as.factor(origin) +  \n                  Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                control = cforest_control(mincriterion = 0.1),\n                data=datX)\n\n\npt <- prettytree(cif.1@ensemble[[90]], names(cif.1@data@get(\"input\"))) \nnt <- new(\"BinaryTree\") \nnt@tree <- pt \nnt@data <- cif.1@data \nnt@responses <- cif.1@responses \n\nplot(nt)\n\ncforestImpPlot <- function(x) {\n  cforest_importance <<- v <- varimp(x)\n  dotchart(v[order(v)])\n}\n\n\ncforestImpPlot(cif.1)\n\nvarimp(cif.1)\n\n\nimportance(cif.1)\n\n###\n\n\n\n\n#cit.1.pred = predict(cit.1, newdata=datX, type = 'prob')\n\nrrt.1 = LTRCART(Surv(age_pr, age, status) ~\n                  as.factor(sex) + as.factor(origin) +\n                  Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                data=datX)\nrpart.plot(rrt.1)\ntext(rrt.1)\n\n\n\n\n# cv.rrt.1 = validate(rrt.1, data=datX)\n\n\nhttp://luisdva.github.io/Plotting-conditional-inference-trees-in-R/\n\n\n  \n  \n  \n# library(rms)\n\n\n\nlibrary(randomForest) #SRC)\n\nrf.1 <- rfsrc(Surv(age, status) ~ \n                as.factor(sex) + as.factor(origin) +  \n                #Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n              D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n              nsplit = 10, ntree=100, data=datX)\nprint(rf.1)\nplot(rf.1)\nmatplot(rf.1$time.interest, 100 * t(rf.1$survival[1:10, ]),\n        xlab = \"Time\", ylab = \"Survival\", type = \"l\", lty = 1)\nplot.survival(rf.1, subset = 1:10, haz.model='ggamma')\n\nset.seed(779)\nvsel = var.select(Surv(age, status) ~\n                    as.factor(sex) + as.factor(origin) +\n                    Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                  conservative = 'high', sub.order =T,\n                  data=datX)\nvsel = var.select(Surv(age, status) ~\n                    as.factor(sex) + as.factor(origin) +\n                    #Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                    D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                  conservative = 'high', sub.order =T,\n                  data=datX)\n\n#vsel = max.subtree(rf.1, max.order = 3, sub.order = T)\n\n\nplot.variable(rf.1, c(\"Dom_CZ\",\"Ext_CZ\",\"Con_CZ\",\"Neu_CZ\",\"Agr_CZ\",\"Opn_CZ\"))\n\n\n\n### some figures aggreagated from __\n\nIT.bin.x1 = c(99.9, 100, 100, 99.9, 100, 100)\nIT.bin.x2 = c(100, 99.9, 100, 100, 100, 100)\n\nART.bin.x1 = c(98, 99.9, 100, 98.9, 99.9, 100)\nART.bin.x2 = c(99.9, 99.5, 100, 100, 100, 100)\n\nIT.cont.x1 = c(99.9, 100, 100, 99.9, 99.9, 100)\nIT.cont.x2 = c(99.7, 87.6, 100, 100, 98, 100)\n\nART.cont.x1 = c(95.7, 99.9, 100, 97.3, 99.4, 100)\nART.cont.x2 = c(99.8, 99.2, 100, 100, 99.6, 100)\n\n\nmean(c(IT.bin.x1,IT.bin.x2,IT.cont.x1,IT.cont.x2))\nmean(c(ART.bin.x1,ART.bin.x2,ART.cont.x1,ART.cont.x2))\n",
    "created" : 1489664597167.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1945116447",
    "id" : "28D78B54",
    "lastKnownWriteTime" : 1489759678,
    "last_content_update" : 1489759678337,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/trees.R",
    "project_path" : "trees.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 10,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}