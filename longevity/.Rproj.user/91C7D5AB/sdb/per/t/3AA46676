{
    "collab_server" : "",
    "contents" : "### Models to weight and aggregate\n\nlibrary(frailtypack)\nlibrary(parfm)\n\nlibrary(AICcmodavg)\n\n\n\n### How can the specification vary?\n\n\n# x2\n# In/exclude Origin\n\n# x2\n# In/exclude sex\n\n# x2\n# Leave confounded\n# Residulaize data by DoB\n\n# x3 [ ??]\n# Method used\n# pwe - piecewise equidistant\n# pwp - piecewise percent\n# wb - weibull\n# \n# x2 \n# including Age * Agr interaction\n\n\n\nparfm.tst.all = parfm(Surv(age_pr, age, status) ~ \n                        as.factor(sex) + as.factor(origin) +  \n                        Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                      cluster=\"sample\" #strata = \"strt\"\n                      , frailty = 'gamma'\n                      , data=datX, dist='logskewnormal', method ='ucminf')\nprint(parfm.tst.all)\n\n\n\n\n# pf.u.x.x.pw(e/p)\n# pf.r.o.s.wb\n\n\n### Piecewise\npf.u.o.s.pwe = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                         as.factor(origin) + as.factor(sex) +\n                          Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                       data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.u.x.x.pwe = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.u.x.s.pwe = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) +  \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.u.o.x.pwe = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.r.o.s.pwe = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) + as.factor(sex) + \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.r.x.x.pwe = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.r.x.s.pwe = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) +  \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.r.o.x.pwe = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\n\npf.u.o.s.pwp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(origin) + as.factor(sex) +   \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.u.x.x.pwp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.u.x.s.pwp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) +  \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.u.o.x.pwp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.r.o.s.pwp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(origin) + as.factor(sex) +   \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.r.x.x.pwp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.r.x.s.pwp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) +  \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.r.o.x.pwp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\n# Interaction\npf.u.o.s.pwe.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(origin) + as.factor(sex) * Agr_CZ \n                            + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                            data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.u.x.s.pwe.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(sex) * Agr_CZ \n                            + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                            data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.r.o.s.pwe.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(origin) + as.factor(sex)* Agr_CZ \n                            + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                            data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.r.x.s.pwe.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(sex)* Agr_CZ \n                            + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                            data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\n\npf.u.o.s.pwp.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                  as.factor(origin) + as.factor(sex) * Agr_CZ \n                                + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                                data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.u.x.s.pwp.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                  as.factor(sex) * Agr_CZ \n                                + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                                data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.r.o.s.pwp.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(origin) + as.factor(sex)* Agr_CZ \n                            + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                            data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.r.x.s.pwp.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(sex)* Agr_CZ \n                            + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                            data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\n\n\n\n\n\n\n\n\nsummary(pf.r.x.s.pwp.int)\n\n\n\n### Weibull\n\npf.u.o.s.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) +\n                             as.factor(origin) + as.factor(sex) + \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'LogN'\n                             ,data = datX, hazard =  'Weibull' \n)\npf.u.x.x.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Weibull' \n)\npf.u.x.s.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + #as.factor(origin) +  \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Weibull' \n)\npf.u.o.x.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Weibull' \n)\n\n\npf.r.x.s.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                             as.factor(sex) +\n                             Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             RandDist = 'LogN'\n                             ,data = datX, hazard =  'Weibull' \n)\npf.r.o.x.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                             as.factor(origin) +  \n                             Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                           RandDist = 'LogN'\n                           ,data = datX, hazard =  'Weibull' \n)\npf.r.o.s.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) +\n                             as.factor(origin) + as.factor(sex) +\n                             Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                           RandDist = 'Gamma', maxit = 1000, recurrentAG=F\n                           ,data = datX, hazard =  'Weibull'\n)  ## won't converge...\npf.r.x.x.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                             Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                           RandDist = 'Gamma'\n                           ,data = datX, hazard =  'Weibull' \n)\n\npf.u.o.s.wb.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                  as.factor(origin) + as.factor(sex) * Agr_CZ \n                                + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                                data = datX, hazard =  'Weibull'\n)\npf.u.x.s.wb.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                  as.factor(sex) * Agr_CZ \n                                + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                                data = datX, hazard =  'Weibull'\n)\npf.r.o.s.wb.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                  as.factor(origin) + as.factor(sex) * Agr_CZ \n                                + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                                data = datX, hazard =  'Weibull'\n)\npf.r.x.s.wb.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                  as.factor(sex) * Agr_CZ \n                                + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                                data = datX, hazard =  'Weibull'\n)\n\n\n\n### Gompertz via parfm\n\npf.u.o.s.gm = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(origin) + as.factor(sex) + Agr_CZ\n                    + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ\n                    ,cluster=\"sample\"\n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.u.x.s.gm = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(sex) + Agr_CZ\n                    + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ\n                    ,cluster=\"sample\"\n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.u.o.x.gm = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(origin) + Agr_CZ\n                    + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ\n                    ,cluster=\"sample\" \n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.u.x.x.gm = parfm(Surv(age_pr, age, status) ~ \n                      Agr_CZ\n                    + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ\n                    ,cluster=\"sample\" \n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.r.o.s.gm = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(origin) + as.factor(sex) + Agr_CZ\n                    + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB\n                    ,cluster=\"sample\" \n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.r.x.s.gm = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(sex) + Agr_CZ\n                    + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB\n                    ,cluster=\"sample\" \n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.r.o.x.gm = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(origin) + Agr_CZ\n                    + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB\n                    ,cluster=\"sample\" \n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.r.x.x.gm = parfm(Surv(age_pr, age, status) ~ \n                      Agr_CZ\n                    + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB\n                    ,cluster=\"sample\" \n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\n\npf.u.o.s.gm.int = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(origin) + as.factor(sex) * Agr_CZ\n                    + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ\n                    ,cluster=\"sample\"\n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.u.x.s.gm.int = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(sex) * Agr_CZ\n                    + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ\n                    ,cluster=\"sample\"\n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.r.o.s.gm.int = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(origin) + as.factor(sex) * Agr_CZ\n                    + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB\n                    ,cluster=\"sample\" \n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\npf.r.x.s.gm.int = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(sex) * Agr_CZ\n                    + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB\n                    ,cluster=\"sample\" \n                    , frailty = 'gamma'\n                    , data=datX, dist='gompertz', method ='ucminf')\n\n\n\n\n\npf.u.o.s.gm.m = parfm(Surv(age_pr, age, status) ~ \n                      as.factor(origin) + Agr_CZ\n                      + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB\n                    ,cluster=\"sample\"\n                    , frailty = 'gamma'\n                    , data=datX[datX$sex==1,], dist='gompertz', method ='ucminf')\nprint(pf.u.o.s.gm.m)\n\npf.u.o.s.gm.f = parfm(Surv(age_pr, age, status) ~ \n                        as.factor(origin) + Agr_CZ\n                      + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB\n                      ,cluster=\"sample\"\n                      , frailty = 'gamma'\n                      , data=datX[datX$sex==0,], dist='gompertz', method ='ucminf')\nprint(pf.u.o.s.gm.f)\n\n\n\n\n\n\n\nsummary(pf.r.x.s.wb)\npf.r.x.s.wb$AIC\nplot(pf.u.x.x.wb, type= 'Survival')\n\n\n\n\n\nsummary(pf.u.o.s.6.wb)\nplot(pf.u.o.s.6.wb, type = 'Survival')\npf.u.o.s.6.wb$logLik * -2\n\n\n\n\n\n\n\n\n\n\n\n\n# pf.u.o.s.6.gm\n# -2 * -789.542\n# \n# u <- predict(pf.u.o.s.6.gm)\n# plot(u)\n\nplot(pf.u.o.s.6.gm, sort='i')\n\n\n\n\npf.r.x.s.6.sp$logLikPenal\n\n\n\npf.u.o.s.pwp.3 = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(origin) + as.factor(sex) +\n                               Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                            data = datX, hazard =  'Piecewise-per' , nb.int = 3\n)\npf.u.o.s.pwp.3\n\n\npf.u.o.s.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                as.factor(origin) + as.factor(sex)*Opn_CZ\n                                #+ Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ\n                              ,data = datX, hazard =  'Piecewise-equi' , nb.int = 3\n)\npf.u.o.s.int\nplot(pf.r.o.s.int, type='Hazard')\n\npf.r.o.s.int = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              as.factor(origin) + as.factor(sex)*Agr_CZ\n                              + D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB\n                            ,data = datX, hazard =  'Weibull' #, nb.int = 3\n)\npf.r.o.s.int\n\n\n\n\n\n### AIC weighting average regression tables ###\n\n\n\n# Remember: unadjusted and adjusted models are not based on the same data,\n# so they should be tabulated separately\n\n\n\n# # rememeber, AIC = 2k - 2LL\n# # so, if all K = 1; LL = 1 - (AIC)/2\n# \n# AIC2LL <- function(AIC,k=1){\n#   LL = k - AIC/2\n#   return(LL)\n# }\n\n\n\n# LLv = c(AIC2LL(pf.u.o.s.wb$AIC),AIC2LL(pf.u.o.s.pwe$AIC),AIC2LL(pf.u.o.s.pwp$AIC),\n#         AIC2LL(pf.u.o.x.wb$AIC),AIC2LL(pf.u.o.x.pwe$AIC),AIC2LL(pf.u.o.x.pwp$AIC),\n#         AIC2LL(pf.u.x.s.wb$AIC),AIC2LL(pf.u.x.s.pwe$AIC),AIC2LL(pf.u.x.s.pwp$AIC),\n#         AIC2LL(pf.u.x.x.wb$AIC),AIC2LL(pf.u.x.x.pwe$AIC),AIC2LL(pf.u.x.x.pwp$AIC),\n#         AIC2LL(pf.r.o.s.wb$AIC),AIC2LL(pf.r.o.s.pwe$AIC),AIC2LL(pf.r.o.s.pwp$AIC),\n#         AIC2LL(pf.r.o.x.wb$AIC),AIC2LL(pf.r.o.x.pwe$AIC),AIC2LL(pf.r.o.x.pwp$AIC),\n#         AIC2LL(pf.r.x.s.wb$AIC),AIC2LL(pf.r.x.s.pwe$AIC),AIC2LL(pf.r.x.s.pwp$AIC),\n#         AIC2LL(pf.r.x.x.wb$AIC),AIC2LL(pf.r.x.x.pwe$AIC),AIC2LL(pf.r.x.x.pwp$AIC))\nLLv.u = c(pf.u.o.s.wb$logLik,pf.u.o.s.pwe$logLik,pf.u.o.s.pwp$logLik,logLik(pf.u.o.s.gm)[1],\n        pf.u.o.x.wb$logLik,pf.u.o.x.pwe$logLik,pf.u.o.x.pwp$logLik,logLik(pf.u.o.x.gm)[1],\n        pf.u.x.s.wb$logLik,pf.u.x.s.pwe$logLik,pf.u.x.s.pwp$logLik,logLik(pf.u.x.s.gm)[1],\n        pf.u.x.x.wb$logLik,pf.u.x.x.pwe$logLik,pf.u.x.x.pwp$logLik,logLik(pf.u.x.x.gm)[1])\nLLv.r = c(pf.r.o.s.wb$logLik,\n        pf.r.o.s.pwe$logLik,pf.r.o.s.pwp$logLik,logLik(pf.r.o.s.gm)[1],\n        pf.r.o.x.wb$logLik,pf.r.o.x.pwe$logLik,pf.r.o.x.pwp$logLik,logLik(pf.r.o.x.gm)[1],\n        pf.r.x.s.wb$logLik,pf.r.x.s.pwe$logLik,pf.r.x.s.pwp$logLik,logLik(pf.r.x.s.gm)[1],\n        pf.r.x.x.wb$logLik,pf.r.x.x.pwe$logLik,pf.r.x.x.pwp$logLik,logLik(pf.r.x.x.gm)[1])\n        # ,pf.u.o.s.wb.int$logLik,pf.u.o.s.pwe.int$logLik,pf.u.o.s.pwp.int$logLik,logLik(pf.u.o.s.gm.int)[1],\n        # pf.u.x.s.wb.int$logLik,pf.u.x.s.pwe.int$logLik,pf.u.x.s.pwp.int$logLik,logLik(pf.u.x.s.gm.int)[1],\n        # pf.r.o.s.wb.int$logLik,pf.r.o.s.pwe.int$logLik,pf.r.o.s.pwp.int$logLik,logLik(pf.r.o.s.gm.int)[1],\n        # pf.r.x.s.wb.int$logLik,pf.r.x.s.pwe.int$logLik,pf.r.x.s.pwp.int$logLik,logLik(pf.r.x.s.gm.int)[1]\nKv.u = c(pf.u.o.s.wb$npar,pf.u.o.s.pwe$npar,pf.u.o.s.pwp$npar,attr(logLik(pf.u.o.s.gm),'df'),\n        pf.u.o.x.wb$npar,pf.u.o.x.pwe$npar,pf.u.o.x.pwp$npar,attr(logLik(pf.u.o.x.gm),'df'),\n        pf.u.x.s.wb$npar,pf.u.x.s.pwe$npar,pf.u.x.s.pwp$npar,attr(logLik(pf.u.x.s.gm),'df'),\n        pf.u.x.x.wb$npar,pf.u.x.x.pwe$npar,pf.u.x.x.pwp$npar,attr(logLik(pf.u.x.x.gm),'df'))\nKv.r = c(pf.r.o.s.wb$npar,\n        pf.r.o.s.pwe$npar,pf.r.o.s.pwp$npar,attr(logLik(pf.r.o.s.gm),'df'),\n        pf.r.o.x.wb$npar,pf.r.o.x.pwe$npar,pf.r.o.x.pwp$npar,attr(logLik(pf.r.o.x.gm),'df'),\n        pf.r.x.s.wb$npar,pf.r.x.s.pwe$npar,pf.r.x.s.pwp$npar,attr(logLik(pf.r.x.s.gm),'df'),\n        pf.r.x.x.wb$npar,pf.r.x.x.pwe$npar,pf.r.x.x.pwp$npar,attr(logLik(pf.r.x.x.gm),'df'))\n       # ,pf.u.o.s.wb.int$npar,pf.u.o.s.pwe.int$npar,pf.u.o.s.pwp.int$npar,attr(logLik(pf.u.o.s.gm.int),'df'),\n       # pf.u.x.s.wb.int$npar,pf.u.x.s.pwe.int$npar,pf.u.x.s.pwp.int$npar,attr(logLik(pf.u.x.s.gm.int),'df'),\n       # pf.r.o.s.wb.int$npar,pf.r.o.s.pwe.int$npar,pf.r.o.s.pwp.int$npar,attr(logLik(pf.r.o.s.gm.int),'df'),\n       # pf.r.x.s.wb.int$npar,pf.r.x.s.pwe.int$npar,pf.r.x.s.pwp.int$npar,attr(logLik(pf.r.x.s.gm.int),'df')\nmnv.u = c('pf.u.o.s.wb','pf.u.o.s.pwe','pf.u.o.s.pwp','pf.u.o.s.gm',\n        'pf.u.o.x.wb','pf.u.o.x.pwe','pf.u.o.x.pwp','pf.u.o.x.gm',\n        'pf.u.x.s.wb','pf.u.x.s.pwe','pf.u.x.s.pwp','pf.u.x.s.gm',\n        'pf.u.x.x.wb','pf.u.x.x.pwe','pf.u.x.x.pwp','pf.u.x.x.gm')\nmnv.r = c('pf.r.o.s.wb',\n        'pf.r.o.s.pwe','pf.r.o.s.pwp','pf.r.o.s.gm',\n        'pf.r.o.x.wb','pf.r.o.x.pwe','pf.r.o.x.pwp','pf.r.o.x.gm',\n        'pf.r.x.s.wb','pf.r.x.s.pwe','pf.r.x.s.pwp','pf.r.x.s.gm',\n        'pf.r.x.x.wb','pf.r.x.x.pwe','pf.r.x.x.pwp','pf.r.x.x.gm')\n        # ,'pf.u.o.s.wb.int','pf.u.o.s.pwe.int','pf.u.o.s.pwp.int','pf.u.o.s.gm.int',\n        # 'pf.u.x.s.wb.int','pf.u.x.s.pwe.int','pf.u.x.s.pwp.int','pf.u.x.s.gm.int',\n        # 'pf.r.o.s.wb.int','pf.r.o.s.pwe.int','pf.r.o.s.pwp.int','pf.r.o.s.gm.int',\n        # 'pf.r.x.s.wb.int','pf.r.x.s.pwe.int','pf.r.x.s.pwp.int','pf.r.x.s.gm.int'\n        \n\n\n### Agreeableness\nestv.u.A = c(pf.u.o.s.wb$coef['Agr_CZ'],pf.u.o.s.pwe$coef['Agr_CZ'],pf.u.o.s.pwp$coef['Agr_CZ'],coef(pf.u.o.s.gm)['Agr_CZ'],\n         pf.u.o.x.wb$coef['Agr_CZ'],pf.u.o.x.pwe$coef['Agr_CZ'],pf.u.o.x.pwp$coef['Agr_CZ'],coef(pf.u.o.x.gm)['Agr_CZ'],\n         pf.u.x.s.wb$coef['Agr_CZ'],pf.u.x.s.pwe$coef['Agr_CZ'],pf.u.x.s.pwp$coef['Agr_CZ'],coef(pf.u.x.s.gm)['Agr_CZ'],\n         pf.u.x.x.wb$coef['Agr_CZ'],pf.u.x.x.pwe$coef['Agr_CZ'],pf.u.x.x.pwp$coef['Agr_CZ'],coef(pf.u.x.x.gm)['Agr_CZ'])\nestv.r.A = c(pf.r.o.s.wb$coef['Agr_CZ'],\n         pf.r.o.s.pwe$coef['Agr_CZ'],pf.r.o.s.pwp$coef['Agr_CZ'],coef(pf.r.o.s.gm)['Agr_CZ'],\n         pf.r.o.x.wb$coef['Agr_CZ'],pf.r.o.x.pwe$coef['Agr_CZ'],pf.r.o.x.pwp$coef['Agr_CZ'],coef(pf.r.o.x.gm)['Agr_CZ'],\n         pf.r.x.s.wb$coef['Agr_CZ'],pf.r.x.s.pwe$coef['Agr_CZ'],pf.r.x.s.pwp$coef['Agr_CZ'],coef(pf.r.x.s.gm)['Agr_CZ'],\n         pf.r.x.x.wb$coef['Agr_CZ'],pf.r.x.x.pwe$coef['Agr_CZ'],pf.r.x.x.pwp$coef['Agr_CZ'],coef(pf.r.x.x.gm)['Agr_CZ'])\n         # ,pf.u.o.s.wb.int$coef['Agr_CZ'],pf.u.o.s.pwe.int$coef['Agr_CZ'],pf.u.o.s.pwp.int$coef['Agr_CZ'],coef(pf.u.o.s.gm.int)['Agr_CZ'],\n         # pf.u.x.s.wb.int$coef['Agr_CZ'],pf.u.x.s.pwe.int$coef['Agr_CZ'],pf.u.x.s.pwp.int$coef['Agr_CZ'],coef(pf.u.x.s.gm.int)['Agr_CZ'],\n         # pf.r.o.s.wb.int$coef['Agr_CZ'],pf.r.o.s.pwe.int$coef['Agr_CZ'],pf.r.o.s.pwp.int$coef['Agr_CZ'],coef(pf.r.o.s.gm.int)['Agr_CZ'],\n         # pf.r.x.s.wb.int$coef['Agr_CZ'],pf.r.x.s.pwe.int$coef['Agr_CZ'],pf.r.x.s.pwp.int$coef['Agr_CZ'],coef(pf.r.x.s.gm.int)['Agr_CZ']\nind = 3\nsev.u.A=c(sqrt(diag(pf.u.o.s.wb$varH))[ind],sqrt(diag(pf.u.o.s.pwe$varH))[ind],sqrt(diag(pf.u.o.s.pwp$varH))[ind],pf.u.o.s.gm[ind+3,'SE'],\n      sqrt(diag(pf.u.o.x.wb$varH))[ind-1],sqrt(diag(pf.u.o.x.pwe$varH))[ind-1],sqrt(diag(pf.u.o.x.pwp$varH))[ind-1],pf.u.o.x.gm[ind+2,'SE'],\n      sqrt(diag(pf.u.x.s.wb$varH))[ind-1],sqrt(diag(pf.u.x.s.pwe$varH))[ind-1],sqrt(diag(pf.u.x.s.pwp$varH))[ind-1],pf.u.x.s.gm[ind+2,'SE'],\n      sqrt(diag(pf.u.x.x.wb$varH))[ind-2],sqrt(diag(pf.u.x.x.pwe$varH))[ind-2],sqrt(diag(pf.u.x.x.pwp$varH))[ind-2],pf.u.x.s.gm[ind+1,'SE'])\nsev.r.A=c(sqrt(diag(pf.r.o.s.wb$varH))[ind],\n      sqrt(diag(pf.r.o.s.pwe$varH))[ind],sqrt(diag(pf.r.o.s.pwp$varH))[ind],pf.r.o.s.gm[ind+3,'SE'],\n      sqrt(diag(pf.r.o.x.wb$varH))[ind-1],sqrt(diag(pf.r.o.x.pwe$varH))[ind-1],sqrt(diag(pf.r.o.x.pwp$varH))[ind-1],pf.r.o.x.gm[ind+2,'SE'],\n      sqrt(diag(pf.r.x.s.wb$varH))[ind-1],sqrt(diag(pf.r.x.s.pwe$varH))[ind-1],sqrt(diag(pf.r.x.s.pwp$varH))[ind-1],pf.r.x.s.gm[ind+2,'SE'],\n      sqrt(diag(pf.r.x.x.wb$varH))[ind-2],sqrt(diag(pf.r.x.x.pwe$varH))[ind-2],sqrt(diag(pf.r.x.x.pwp$varH))[ind-2],pf.r.x.x.gm[ind+1,'SE'])\n      # ,sqrt(diag(pf.u.o.s.wb.int$varH))[ind],sqrt(diag(pf.u.o.s.pwe.int$varH))[ind],sqrt(diag(pf.u.o.s.pwp.int$varH))[ind],pf.u.o.s.gm.int[ind+3,'SE'],\n      # sqrt(diag(pf.u.x.s.wb.int$varH))[ind-1],sqrt(diag(pf.u.x.s.pwe.int$varH))[ind-1],sqrt(diag(pf.u.x.s.pwp.int$varH))[ind-1],pf.u.x.s.gm.int[ind+2,'SE'],\n      # sqrt(diag(pf.r.o.s.wb.int$varH))[ind],sqrt(diag(pf.r.o.s.pwe.int$varH))[ind],sqrt(diag(pf.r.o.s.pwp.int$varH))[ind],pf.r.o.s.gm.int[ind+3,'SE'],\n      # sqrt(diag(pf.r.x.s.wb.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwe.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwp.int$varH))[ind-1],pf.r.x.s.gm.int[ind+2,'SE']\nmodavgCustom(LLv.u,Kv.u,mnv.u,estv.u.A,sev.u.A,second.ord=F)\nmodavgCustom(LLv.r,Kv.r,mnv.r,estv.r.A,sev.r.A,second.ord=F)\n\n\n### Openness  \nestv.u.O = c(pf.u.o.s.wb$coef['Opn_CZ'],pf.u.o.s.pwe$coef['Opn_CZ'],pf.u.o.s.pwp$coef['Opn_CZ'],coef(pf.u.o.s.gm)['Opn_CZ'],\n         pf.u.o.x.wb$coef['Opn_CZ'],pf.u.o.x.pwe$coef['Opn_CZ'],pf.u.o.x.pwp$coef['Opn_CZ'],coef(pf.u.o.x.gm)['Opn_CZ'],\n         pf.u.x.s.wb$coef['Opn_CZ'],pf.u.x.s.pwe$coef['Opn_CZ'],pf.u.x.s.pwp$coef['Opn_CZ'],coef(pf.u.x.s.gm)['Opn_CZ'],\n         pf.u.x.x.wb$coef['Opn_CZ'],pf.u.x.x.pwe$coef['Opn_CZ'],pf.u.x.x.pwp$coef['Opn_CZ'],coef(pf.u.x.x.gm)['Opn_CZ'])\nestv.r.O = c(pf.r.o.s.wb$coef['O.r2.DoB'],\n         pf.r.o.s.pwe$coef['O.r2.DoB'],pf.r.o.s.pwp$coef['O.r2.DoB'],coef(pf.r.o.s.gm)['O.r2.DoB'],\n         pf.r.o.x.wb$coef['O.r2.DoB'],pf.r.o.x.pwe$coef['O.r2.DoB'],pf.r.o.x.pwp$coef['O.r2.DoB'],coef(pf.r.o.x.gm)['O.r2.DoB'],\n         pf.r.x.s.wb$coef['O.r2.DoB'],pf.r.x.s.pwe$coef['O.r2.DoB'],pf.r.x.s.pwp$coef['O.r2.DoB'],coef(pf.r.x.s.gm)['O.r2.DoB'],\n         pf.r.x.x.wb$coef['O.r2.DoB'],pf.r.x.x.pwe$coef['O.r2.DoB'],pf.r.x.x.pwp$coef['O.r2.DoB'],coef(pf.r.x.x.gm)['O.r2.DoB'])\n         # pf.u.o.s.wb.int$coef['Opn_CZ'],pf.u.o.s.pwe.int$coef['Opn_CZ'],pf.u.o.s.pwp.int$coef['Opn_CZ'],coef(pf.u.o.s.gm.int)['Opn_CZ'],\n         # pf.u.x.s.wb.int$coef['Opn_CZ'],pf.u.x.s.pwe.int$coef['Opn_CZ'],pf.u.x.s.pwp.int$coef['Opn_CZ'],coef(pf.u.x.s.gm.int)['Opn_CZ'],\n         # pf.r.o.s.wb.int$coef['O.r2.DoB'],pf.r.o.s.pwe.int$coef['O.r2.DoB'],pf.r.o.s.pwp.int$coef['O.r2.DoB'],coef(pf.r.o.s.gm.int)['O.r2.DoB'],\n         # pf.r.x.s.wb.int$coef['O.r2.DoB'],pf.r.x.s.pwe.int$coef['O.r2.DoB'],pf.r.x.s.pwp.int$coef['O.r2.DoB'],coef(pf.r.x.s.gm.int)['O.r2.DoB']\n\nind = 8\nsev.u.O=c(sqrt(diag(pf.u.o.s.wb$varH))[ind],sqrt(diag(pf.u.o.s.pwe$varH))[ind],sqrt(diag(pf.u.o.s.pwp$varH))[ind],pf.u.o.s.gm[ind+3,'SE'],\n      sqrt(diag(pf.u.o.x.wb$varH))[ind-1],sqrt(diag(pf.u.o.x.pwe$varH))[ind-1],sqrt(diag(pf.u.o.x.pwp$varH))[ind-1],pf.u.o.x.gm[ind+2,'SE'],\n      sqrt(diag(pf.u.x.s.wb$varH))[ind-1],sqrt(diag(pf.u.x.s.pwe$varH))[ind-1],sqrt(diag(pf.u.x.s.pwp$varH))[ind-1],pf.u.x.s.gm[ind+2,'SE'],\n      sqrt(diag(pf.u.x.x.wb$varH))[ind-2],sqrt(diag(pf.u.x.x.pwe$varH))[ind-2],sqrt(diag(pf.u.x.x.pwp$varH))[ind-2],pf.u.x.s.gm[ind+1,'SE'])\nsev.r.O=c(sqrt(diag(pf.r.o.s.wb$varH))[ind],\n      sqrt(diag(pf.r.o.s.pwe$varH))[ind],sqrt(diag(pf.r.o.s.pwp$varH))[ind],pf.r.o.s.gm[ind+3,'SE'],\n      sqrt(diag(pf.r.o.x.wb$varH))[ind-1],sqrt(diag(pf.r.o.x.pwe$varH))[ind-1],sqrt(diag(pf.r.o.x.pwp$varH))[ind-1],pf.r.o.x.gm[ind+2,'SE'],\n      sqrt(diag(pf.r.x.s.wb$varH))[ind-1],sqrt(diag(pf.r.x.s.pwe$varH))[ind-1],sqrt(diag(pf.r.x.s.pwp$varH))[ind-1],pf.r.x.s.gm[ind+2,'SE'],\n      sqrt(diag(pf.r.x.x.wb$varH))[ind-2],sqrt(diag(pf.r.x.x.pwe$varH))[ind-2],sqrt(diag(pf.r.x.x.pwp$varH))[ind-2],pf.r.x.x.gm[ind+1,'SE'])\n      # sqrt(diag(pf.u.o.s.wb.int$varH))[ind],sqrt(diag(pf.u.o.s.pwe.int$varH))[ind],sqrt(diag(pf.u.o.s.pwp.int$varH))[ind],pf.u.o.s.gm.int[ind+3,'SE'],\n      # sqrt(diag(pf.u.x.s.wb.int$varH))[ind-1],sqrt(diag(pf.u.x.s.pwe.int$varH))[ind-1],sqrt(diag(pf.u.x.s.pwp.int$varH))[ind-1],pf.u.x.s.gm.int[ind+2,'SE'],\n      # sqrt(diag(pf.r.o.s.wb.int$varH))[ind],sqrt(diag(pf.r.o.s.pwe.int$varH))[ind],sqrt(diag(pf.r.o.s.pwp.int$varH))[ind],pf.r.o.s.gm.int[ind+3,'SE'],\n      # sqrt(diag(pf.r.x.s.wb.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwe.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwp.int$varH))[ind-1],pf.r.x.s.gm.int[ind+2,'SE'])\nmodavgCustom(LLv.u,Kv.u,mnv.u,estv.u.O,sev.u.O,second.ord=F)\nmodavgCustom(LLv.r,Kv.r,mnv.r,estv.r.O,sev.r.O,second.ord=F)\n\n\n### Extraversion\nestv.u.E = c(pf.u.o.s.wb$coef['Ext_CZ'],pf.u.o.s.pwe$coef['Ext_CZ'],pf.u.o.s.pwp$coef['Ext_CZ'],coef(pf.u.o.s.gm)['Ext_CZ'],\n         pf.u.o.x.wb$coef['Ext_CZ'],pf.u.o.x.pwe$coef['Ext_CZ'],pf.u.o.x.pwp$coef['Ext_CZ'],coef(pf.u.o.x.gm)['Ext_CZ'],\n         pf.u.x.s.wb$coef['Ext_CZ'],pf.u.x.s.pwe$coef['Ext_CZ'],pf.u.x.s.pwp$coef['Ext_CZ'],coef(pf.u.x.s.gm)['Ext_CZ'],\n         pf.u.x.x.wb$coef['Ext_CZ'],pf.u.x.x.pwe$coef['Ext_CZ'],pf.u.x.x.pwp$coef['Ext_CZ'],coef(pf.u.x.x.gm)['Ext_CZ'])\nestv.r.E = c(pf.r.o.s.wb$coef['E.r2.DoB'],\n         pf.r.o.s.pwe$coef['E.r2.DoB'],pf.r.o.s.pwp$coef['E.r2.DoB'],coef(pf.r.o.s.gm)['E.r2.DoB'],\n         pf.r.o.x.wb$coef['E.r2.DoB'],pf.r.o.x.pwe$coef['E.r2.DoB'],pf.r.o.x.pwp$coef['E.r2.DoB'],coef(pf.r.o.x.gm)['E.r2.DoB'],\n         pf.r.x.s.wb$coef['E.r2.DoB'],pf.r.x.s.pwe$coef['E.r2.DoB'],pf.r.x.s.pwp$coef['E.r2.DoB'],coef(pf.r.x.s.gm)['E.r2.DoB'],\n         pf.r.x.x.wb$coef['E.r2.DoB'],pf.r.x.x.pwe$coef['E.r2.DoB'],pf.r.x.x.pwp$coef['E.r2.DoB'],coef(pf.r.x.x.gm)['E.r2.DoB'])\n         # ,pf.u.o.s.wb.int$coef['Ext_CZ'],pf.u.o.s.pwe.int$coef['Ext_CZ'],pf.u.o.s.pwp.int$coef['Ext_CZ'],coef(pf.u.o.s.gm.int)['Ext_CZ'],\n         # pf.u.x.s.wb.int$coef['Ext_CZ'],pf.u.x.s.pwe.int$coef['Ext_CZ'],pf.u.x.s.pwp.int$coef['Ext_CZ'],coef(pf.u.x.s.gm.int)['Ext_CZ'],\n         # pf.r.o.s.wb.int$coef['E.r2.DoB'],pf.r.o.s.pwe.int$coef['E.r2.DoB'],pf.r.o.s.pwp.int$coef['E.r2.DoB'],coef(pf.r.o.s.gm.int)['E.r2.DoB'],\n         # pf.r.x.s.wb.int$coef['E.r2.DoB'],pf.r.x.s.pwe.int$coef['E.r2.DoB'],pf.r.x.s.pwp.int$coef['E.r2.DoB'],coef(pf.r.x.s.gm.int)['E.r2.DoB'])\nind = 5\nsev.u.E=c(sqrt(diag(pf.u.o.s.wb$varH))[ind],sqrt(diag(pf.u.o.s.pwe$varH))[ind],sqrt(diag(pf.u.o.s.pwp$varH))[ind],pf.u.o.s.gm[ind+3,'SE'],\n      sqrt(diag(pf.u.o.x.wb$varH))[ind-1],sqrt(diag(pf.u.o.x.pwe$varH))[ind-1],sqrt(diag(pf.u.o.x.pwp$varH))[ind-1],pf.u.o.x.gm[ind+2,'SE'],\n      sqrt(diag(pf.u.x.s.wb$varH))[ind-1],sqrt(diag(pf.u.x.s.pwe$varH))[ind-1],sqrt(diag(pf.u.x.s.pwp$varH))[ind-1],pf.u.x.s.gm[ind+2,'SE'],\n      sqrt(diag(pf.u.x.x.wb$varH))[ind-2],sqrt(diag(pf.u.x.x.pwe$varH))[ind-2],sqrt(diag(pf.u.x.x.pwp$varH))[ind-2],pf.u.x.s.gm[ind+1,'SE'])\nsev.r.E=c(sqrt(diag(pf.r.o.s.wb$varH))[ind],\n      sqrt(diag(pf.r.o.s.pwe$varH))[ind],sqrt(diag(pf.r.o.s.pwp$varH))[ind],pf.r.o.s.gm[ind+3,'SE'],\n      sqrt(diag(pf.r.o.x.wb$varH))[ind-1],sqrt(diag(pf.r.o.x.pwe$varH))[ind-1],sqrt(diag(pf.r.o.x.pwp$varH))[ind-1],pf.r.o.x.gm[ind+2,'SE'],\n      sqrt(diag(pf.r.x.s.wb$varH))[ind-1],sqrt(diag(pf.r.x.s.pwe$varH))[ind-1],sqrt(diag(pf.r.x.s.pwp$varH))[ind-1],pf.r.x.s.gm[ind+2,'SE'],\n      sqrt(diag(pf.r.x.x.wb$varH))[ind-2],sqrt(diag(pf.r.x.x.pwe$varH))[ind-2],sqrt(diag(pf.r.x.x.pwp$varH))[ind-2],pf.r.x.x.gm[ind+1,'SE'])\n      # sqrt(diag(pf.u.o.s.wb.int$varH))[ind],sqrt(diag(pf.u.o.s.pwe.int$varH))[ind],sqrt(diag(pf.u.o.s.pwp.int$varH))[ind],pf.u.o.s.gm.int[ind+3,'SE'],\n      # sqrt(diag(pf.u.x.s.wb.int$varH))[ind-1],sqrt(diag(pf.u.x.s.pwe.int$varH))[ind-1],sqrt(diag(pf.u.x.s.pwp.int$varH))[ind-1],pf.u.x.s.gm.int[ind+2,'SE'],\n      # sqrt(diag(pf.r.o.s.wb.int$varH))[ind],sqrt(diag(pf.r.o.s.pwe.int$varH))[ind],sqrt(diag(pf.r.o.s.pwp.int$varH))[ind],pf.r.o.s.gm.int[ind+3,'SE'],\n      # sqrt(diag(pf.r.x.s.wb.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwe.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwp.int$varH))[ind-1],pf.r.x.s.gm.int[ind+2,'SE'])\nmodavgCustom(LLv.u,Kv.u,mnv.u,estv.u.E,sev.u.E,second.ord=F)\nmodavgCustom(LLv.r,Kv.r,mnv.r,estv.r.E,sev.r.E,second.ord=F)\n\n\n\n\n\n\n\n\n\n### E - adjusted only\nLLv = c(pf.r.o.s.pwe$logLik,pf.r.o.s.pwp$logLik,logLik(pf.r.o.s.gm)[1],\n        pf.r.o.x.wb$logLik,pf.r.o.x.pwe$logLik,pf.r.o.x.pwp$logLik,logLik(pf.r.o.x.gm)[1],\n        pf.r.x.s.wb$logLik,pf.r.x.s.pwe$logLik,pf.r.x.s.pwp$logLik,logLik(pf.r.x.s.gm)[1],\n        pf.r.x.x.wb$logLik,pf.r.x.x.pwe$logLik,pf.r.x.x.pwp$logLik,logLik(pf.r.x.x.gm)[1],\n        pf.r.o.s.wb.int$logLik,pf.r.o.s.pwe.int$logLik,pf.r.o.s.pwp.int$logLik,logLik(pf.r.o.s.gm.int)[1],\n        pf.r.x.s.wb.int$logLik,pf.r.x.s.pwe.int$logLik,pf.r.x.s.pwp.int$logLik,logLik(pf.r.x.s.gm.int)[1]\n)\nKv = c(pf.r.o.s.pwe$npar,pf.r.o.s.pwp$npar,attr(logLik(pf.r.o.s.gm),'df'),\n       pf.r.o.x.wb$npar,pf.r.o.x.pwe$npar,pf.r.o.x.pwp$npar,attr(logLik(pf.r.o.x.gm),'df'),\n       pf.r.x.s.wb$npar,pf.r.x.s.pwe$npar,pf.r.x.s.pwp$npar,attr(logLik(pf.r.x.s.gm),'df'),\n       pf.r.x.x.wb$npar,pf.r.x.x.pwe$npar,pf.r.x.x.pwp$npar,attr(logLik(pf.r.x.x.gm),'df'),\n       pf.r.o.s.wb.int$npar,pf.r.o.s.pwe.int$npar,pf.r.o.s.pwp.int$npar,attr(logLik(pf.r.o.s.gm.int),'df'),\n       pf.r.x.s.wb.int$npar,pf.r.x.s.pwe.int$npar,pf.r.x.s.pwp.int$npar,attr(logLik(pf.r.x.s.gm.int),'df')\n)\nmnv = c(\n        'pf.r.o.s.pwe','pf.r.o.s.pwp','pf.r.o.s.gm',\n        'pf.r.o.x.wb','pf.r.o.x.pwe','pf.r.o.x.pwp','pf.r.o.x.gm',\n        'pf.r.x.s.wb','pf.r.x.s.pwe','pf.r.x.s.pwp','pf.r.x.s.gm',\n        'pf.r.x.x.wb','pf.r.x.x.pwe','pf.r.x.x.pwp','pf.r.x.x.gm',\n        'pf.r.o.s.wb.int','pf.r.o.s.pwe.int','pf.r.o.s.pwp.int','pf.r.o.s.gm.int',\n        'pf.r.x.s.wb.int','pf.r.x.s.pwe.int','pf.r.x.s.pwp.int','pf.r.x.s.gm.int'\n)\n\nestv = c(pf.r.o.s.pwe$coef['E.r2.DoB'],pf.r.o.s.pwp$coef['E.r2.DoB'],coef(pf.r.o.s.gm)['E.r2.DoB'],\n         pf.r.o.x.wb$coef['E.r2.DoB'],pf.r.o.x.pwe$coef['E.r2.DoB'],pf.r.o.x.pwp$coef['E.r2.DoB'],coef(pf.r.o.x.gm)['E.r2.DoB'],\n         pf.r.x.s.wb$coef['E.r2.DoB'],pf.r.x.s.pwe$coef['E.r2.DoB'],pf.r.x.s.pwp$coef['E.r2.DoB'],coef(pf.r.x.s.gm)['E.r2.DoB'],\n         pf.r.x.x.wb$coef['E.r2.DoB'],pf.r.x.x.pwe$coef['E.r2.DoB'],pf.r.x.x.pwp$coef['E.r2.DoB'],coef(pf.r.x.x.gm)['E.r2.DoB'],\n         pf.r.o.s.wb.int$coef['E.r2.DoB'],pf.r.o.s.pwe.int$coef['E.r2.DoB'],pf.r.o.s.pwp.int$coef['E.r2.DoB'],coef(pf.r.o.s.gm.int)['E.r2.DoB'],\n         pf.r.x.s.wb.int$coef['E.r2.DoB'],pf.r.x.s.pwe.int$coef['E.r2.DoB'],pf.r.x.s.pwp.int$coef['E.r2.DoB'],coef(pf.r.x.s.gm.int)['E.r2.DoB']\n)\nind = 4\nsev=c(sqrt(diag(pf.r.o.s.pwe$varH))[ind],sqrt(diag(pf.r.o.s.pwp$varH))[ind],pf.r.o.s.gm[ind+3,'SE'],\n      sqrt(diag(pf.r.o.x.wb$varH))[ind-1],sqrt(diag(pf.r.o.x.pwe$varH))[ind-1],sqrt(diag(pf.r.o.x.pwp$varH))[ind-1],pf.r.o.x.gm[ind+2,'SE'],\n      sqrt(diag(pf.r.x.s.wb$varH))[ind-1],sqrt(diag(pf.r.x.s.pwe$varH))[ind-1],sqrt(diag(pf.r.x.s.pwp$varH))[ind-1],pf.r.x.s.gm[ind+2,'SE'],\n      sqrt(diag(pf.r.x.x.wb$varH))[ind-2],sqrt(diag(pf.r.x.x.pwe$varH))[ind-2],sqrt(diag(pf.r.x.x.pwp$varH))[ind-2],pf.r.x.x.gm[ind+1,'SE'],\n      sqrt(diag(pf.r.o.s.wb.int$varH))[ind],sqrt(diag(pf.r.o.s.pwe.int$varH))[ind],sqrt(diag(pf.r.o.s.pwp.int$varH))[ind],pf.r.o.s.gm.int[ind+3,'SE'],\n      sqrt(diag(pf.r.x.s.wb.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwe.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwp.int$varH))[ind-1],pf.r.x.s.gm.int[ind+2,'SE']\n)\nmodavgCustom(LLv,Kv,mnv,estv,sev,second.ord=F,nobs=538)\n\n\n### Age * Agr\nLLv = c(pf.u.o.s.wb.int$logLik,pf.u.o.s.pwe.int$logLik,pf.u.o.s.pwp.int$logLik,logLik(pf.u.o.s.gm.int)[1],\n        pf.u.x.s.wb.int$logLik,pf.u.x.s.pwe.int$logLik,pf.u.x.s.pwp.int$logLik,logLik(pf.u.x.s.gm.int)[1],\n        pf.r.o.s.wb.int$logLik,pf.r.o.s.pwe.int$logLik,pf.r.o.s.pwp.int$logLik,logLik(pf.r.o.s.gm.int)[1],\n        pf.r.x.s.wb.int$logLik,pf.r.x.s.pwe.int$logLik,pf.r.x.s.pwp.int$logLik,logLik(pf.r.x.s.gm.int)[1]\n)\nKv = c(pf.u.o.s.wb.int$npar,pf.u.o.s.pwe.int$npar,pf.u.o.s.pwp.int$npar,attr(logLik(pf.u.o.s.gm.int),'df'),\n       pf.u.x.s.wb.int$npar,pf.u.x.s.pwe.int$npar,pf.u.x.s.pwp.int$npar,attr(logLik(pf.u.x.s.gm.int),'df'),\n       pf.r.o.s.wb.int$npar,pf.r.o.s.pwe.int$npar,pf.r.o.s.pwp.int$npar,attr(logLik(pf.r.o.s.gm.int),'df'),\n       pf.r.x.s.wb.int$npar,pf.r.x.s.pwe.int$npar,pf.r.x.s.pwp.int$npar,attr(logLik(pf.r.x.s.gm.int),'df')\n)\nmnv = c('pf.u.o.s.wb.int','pf.u.o.s.pwe.int','pf.u.o.s.pwp.int','pf.u.o.s.gm.int',\n        'pf.u.x.s.wb.int','pf.u.x.s.pwe.int','pf.u.x.s.pwp.int','pf.u.x.s.gm.int',\n        'pf.r.o.s.wb.int','pf.r.o.s.pwe.int','pf.r.o.s.pwp.int','pf.r.o.s.gm.int',\n        'pf.r.x.s.wb.int','pf.r.x.s.pwe.int','pf.r.x.s.pwp.int','pf.r.x.s.gm.int'\n)\nestv = c(   pf.u.o.s.wb.int$coef['sex1:Agr_CZ'],pf.u.o.s.pwe.int$coef['sex1:Agr_CZ'],pf.u.o.s.pwp.int$coef['sex1:Agr_CZ'],coef(pf.u.o.s.gm.int)['as.factor(sex)1:Agr_CZ'],\n            pf.u.x.s.wb.int$coef['sex1:Agr_CZ'],pf.u.x.s.pwe.int$coef['sex1:Agr_CZ'],pf.u.x.s.pwp.int$coef['sex1:Agr_CZ'],coef(pf.u.x.s.gm.int)['as.factor(sex)1:Agr_CZ'],\n            pf.r.o.s.wb.int$coef['sex1:Agr_CZ'],pf.r.o.s.pwe.int$coef['sex1:Agr_CZ'],pf.r.o.s.pwp.int$coef['sex1:Agr_CZ'],coef(pf.r.o.s.gm.int)['as.factor(sex)1:Agr_CZ'],\n            pf.r.x.s.wb.int$coef['sex1:Agr_CZ'],pf.r.x.s.pwe.int$coef['sex1:Agr_CZ'],pf.r.x.s.pwp.int$coef['sex1:Agr_CZ'],coef(pf.r.x.s.gm.int)['as.factor(sex)1:Agr_CZ']\n) \nind=9\nsev=c(      sqrt(diag(pf.u.o.s.wb.int$varH))[ind],sqrt(diag(pf.u.o.s.pwe.int$varH))[ind],sqrt(diag(pf.u.o.s.pwp.int$varH))[ind],pf.u.o.s.gm.int[ind+3,'SE'],\n            sqrt(diag(pf.u.x.s.wb.int$varH))[ind-1],sqrt(diag(pf.u.x.s.pwe.int$varH))[ind-1],sqrt(diag(pf.u.x.s.pwp.int$varH))[ind-1],pf.u.x.s.gm.int[ind+2,'SE'],\n            sqrt(diag(pf.r.o.s.wb.int$varH))[ind],sqrt(diag(pf.r.o.s.pwe.int$varH))[ind],sqrt(diag(pf.r.o.s.pwp.int$varH))[ind],pf.r.o.s.gm.int[ind+3,'SE'],\n            sqrt(diag(pf.r.x.s.wb.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwe.int$varH))[ind-1],sqrt(diag(pf.r.x.s.pwp.int$varH))[ind-1],pf.r.x.s.gm.int[ind+2,'SE']\n)\nmodavgCustom(LLv,Kv,mnv,estv,sev,second.ord=F,nobs=538)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### Old - Cox not appropriate\n\n\n# AIC2LL(pf.r.o.s.6.sp$LCV),AIC2LL(pf.u.o.s.6.sp$LCV),\n#       AIC2LL(pf.r.o.x.6.sp$LCV),AIC2LL(pf.u.o.x.6.sp$LCV),\n#       AIC2LL(pf.r.x.s.6.sp$LCV),AIC2LL(pf.u.x.s.6.sp$LCV),\n#       AIC2LL(pf.r.x.x.6.sp$LCV),AIC2LL(pf.u.x.x.6.sp$LCV),\n#       AIC2LL(pf.r.o.s.6.pw$AIC),AIC2LL(pf.u.o.s.6.pw$AIC),\n#       AIC2LL(pf.r.o.x.6.pw$AIC),AIC2LL(pf.u.o.x.6.pw$AIC),\n#       AIC2LL(pf.r.x.s.6.pw$AIC),AIC2LL(pf.u.x.s.6.pw$AIC),\n#       AIC2LL(pf.r.x.x.6.pw$AIC),AIC2LL(pf.u.x.x.6.pw$AIC),\n#       AIC2LL(pf.u.o.s.A.sp$LCV),AIC2LL(pf.u.o.s.A.pw$AIC),\n#       AIC2LL(pf.u.x.s.A.sp$LCV),AIC2LL(pf.u.x.s.A.pw$AIC),\n#       AIC2LL(pf.u.o.x.A.sp$LCV),AIC2LL(pf.u.o.x.A.pw$AIC),\n#       AIC2LL(pf.u.x.x.A.sp$LCV),AIC2LL(pf.u.x.x.A.pw$AIC))\n# c(pf.r.o.s.6.sp$coef['Agr_CZ'],pf.u.o.s.6.sp$coef['Agr_CZ'],\n#   pf.r.o.x.6.sp$coef['Agr_CZ'],pf.u.o.x.6.sp$coef['Agr_CZ'],\n#   pf.r.x.s.6.sp$coef['Agr_CZ'],pf.u.x.s.6.sp$coef['Agr_CZ'],\n#   pf.r.x.x.6.sp$coef['Agr_CZ'],pf.u.x.x.6.sp$coef['Agr_CZ'],\n#   pf.r.o.s.6.pw$coef['Agr_CZ'],pf.u.o.s.6.pw$coef['Agr_CZ'],\n#   pf.r.o.x.6.pw$coef['Agr_CZ'],pf.u.o.x.6.pw$coef['Agr_CZ'],\n#   pf.r.x.s.6.pw$coef['Agr_CZ'],pf.u.x.s.6.pw$coef['Agr_CZ'],\n#   pf.r.x.x.6.pw$coef['Agr_CZ'],pf.u.x.x.6.pw$coef['Agr_CZ'],\n#   pf.u.o.s.A.sp$coef['Agr_CZ'],pf.u.o.s.A.pw$coef['Agr_CZ'],\n#   pf.u.x.s.A.sp$coef['Agr_CZ'],pf.u.x.s.A.pw$coef['Agr_CZ'],\n#   pf.u.o.x.A.sp$coef['Agr_CZ'],pf.u.o.x.A.pw$coef['Agr_CZ'],\n#   pf.u.x.x.A.sp$coef['Agr_CZ'],pf.u.x.x.A.pw$coef['Agr_CZ']\n# c(sqrt(diag(pf.r.o.s.6.sp$varH))[6],sqrt(diag(pf.u.o.s.6.sp$varH))[6],\n#   sqrt(diag(pf.r.o.x.6.sp$varH))[5],sqrt(diag(pf.u.o.x.6.sp$varH))[5],\n#   sqrt(diag(pf.r.x.s.6.sp$varH))[5],sqrt(diag(pf.u.x.s.6.sp$varH))[5],\n#   sqrt(diag(pf.r.x.x.6.sp$varH))[4],sqrt(diag(pf.u.x.x.6.sp$varH))[4],\n#   sqrt(diag(pf.r.o.s.6.pw$varH))[6],sqrt(diag(pf.u.o.s.6.pw$varH))[6],\n#   sqrt(diag(pf.r.o.x.6.pw$varH))[5],sqrt(diag(pf.u.o.x.6.pw$varH))[5],\n#   sqrt(diag(pf.r.x.s.6.pw$varH))[5],sqrt(diag(pf.u.x.s.6.pw$varH))[5],\n#   sqrt(diag(pf.r.x.x.6.pw$varH))[4],sqrt(diag(pf.u.x.x.6.pw$varH))[4],\n#   sqrt(diag(pf.u.o.s.A.sp$varH))[3],sqrt(diag(pf.u.o.s.A.pw$varH))[3],\n#   sqrt(diag(pf.u.x.s.A.sp$varH))[2],sqrt(diag(pf.u.x.s.A.pw$varH))[2],\n#   sqrt(diag(pf.u.o.x.A.sp$varH))[2],sqrt(diag(pf.u.o.x.A.pw$varH))[2],\n#   sqrt(pf.u.x.x.A.sp$varH),sqrt(pf.u.x.x.A.pw$varH))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n### not run\n\n## Agr\npf.u.o.s.A.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + as.factor(origin) +  \n                               Agr_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.u.x.x.A.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               Agr_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.u.x.s.A.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) +  \n                               Agr_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.u.o.x.A.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                               Agr_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\n\n\n\n\n\n\n### Splines\npf.u.o.s.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + as.factor(origin) +  \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.o.x.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               + as.factor(origin) +  \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.x.s.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.x.x.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                                Agr_CZ + Dom_CZ + Ext_CZ + Con_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.r.o.s.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + as.factor(origin) +  \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.r.o.x.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               + as.factor(origin) +  \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.r.x.s.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.r.x.x.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               Agr_CZ + D.r2.DoB + E.r2.DoB + Con_CZ + N.r1.DoB + O.r2.DoB,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\n\n\n\n\n\nprint(pf.u.x.s.A.sp)\npf.u.x.x.A.sp$logLikPenal\npf.u.x.x.A.sp$LCV\n\n\n\n\n\n\n\n\npf.u.x.x.A.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               Agr_CZ ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.o.s.A.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + as.factor(origin) + Agr_CZ ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.o.x.A.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) + Agr_CZ ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.x.s.A.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + Agr_CZ ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\n",
    "created" : 1495040457012.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3334151583",
    "id" : "3AA46676",
    "lastKnownWriteTime" : 1495110578,
    "last_content_update" : 1495110578650,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/modWeighting.R",
    "project_path" : "modWeighting.R",
    "properties" : {
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}