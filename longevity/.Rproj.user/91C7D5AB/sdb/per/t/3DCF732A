{
    "contents" : "# Cox models instead\n\nlibrary(survival)\n\nattr(y, 'type') <- 'right'\ncox.m <- coxph(themodel)\n\n\nattr(yLt, 'type') <- 'counting'\n\ncox.trunc <- coxph(yLt ~ as.factor(sex) + as.factor(origin) + as.factor(LvZ) + \n                                    Dom_CZ + Ext_CZ + Con_CZ +\n                                    Agr_CZ + Neu_CZ + Opn_CZ,  data=datX\n                                  #dist = \"t\"\n)\n\nanova(cox.trunc)\n\ncox.trunc.x <- coxph(yLt ~ as.factor(sex) + as.factor(origin) + as.factor(LvZ) + \n                     Dom_CZ + Ext_CZ + Con_CZ +\n                     Agr_CZ + Neu_CZ + Opn_CZ + Ext_CZ:DoB,  data=datX\n             \n)\n\nanova(cox.trunc.x,cox.trunc)\n\n# predictable time-dependent covariate: Extraversion\n\npfit1 <- coxph(Surv(time, status==2) ~ log(bili) + ascites + age, pbc)\npfit2 <- coxph(Surv(time, status==2) ~ log(bili) + ascites + tt(age),\n                 data=pbc,\n                 tt=function(x, t, ...) {\n                   age <- x + t/365.25\n                   cbind(age=age, age2= (age-50)^2, age3= (age-50)^3)\n                 })\n\n# what is the best model for tt'ing extraversion\n\nplot(Dataset$Ext_CZ ~ Dataset$age_pr_adj)\n\nfit.e <- lm(Ext_CZ ~ age_pr_adj, data=Dataset)\nsummary(fit.e)\nabline(fit.e)\n\nfit.e2 <- lm(Ext_CZ ~ age_pr_adj + I(age_pr_adj^2), data=Dataset)\nsummary(fit.e2)\nlines(predict(fit.e2, data.frame(age_pr_adj = 1:55)))\n\n# Quadratic is the better model\n\n# in general, E\n\n# want to predict what E would have been if all were the same age\n\nDataset$adjE <- scale(Dataset$age_pr_adj) - Dataset$Ext_CZ \nplot(adjE ~ Ext_CZ, data=Dataset)\nplot(adjE ~ age_pr_adj, data=Dataset)\n\nplot(Ext_CZ ~ age_pr_adj, data=Dataset)\n\n# try again \n# Dataset$adjE <- scale(Dataset$Ext_CZ-scale(1/(1 + Dataset$age_pr_adj)))\n# which way?\n# Dataset$adjE <- scale(1/scale(Dataset$age_pr_adj) - Dataset$Ext_CZ)\n\n\n\n\ncox.trunc.adjE <- coxph(yLt ~ as.factor(sex) + as.factor(origin) + as.factor(LvZ) + \n                       Dom_CZ + adjE + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ,  data=datX\n                     \n)\n\nfit.e <- lm(Ext_CZ ~ adjE, data=Dataset)\nsummary(fit.e)\nabline(fit.e)\n\nfit.e2 <- lm(Ext_CZ ~ adjE + I(adjE^2), data=Dataset)\nsummary(fit.e2)\n#plot(Ext_CZ, fitted(fit.e2), type=\"l\", data=datX)\n#abline(fit.e2)\nlines(predict(fit.e2, data.frame(age_pr = scale(1:55), Ext_CZ = scale(1:55))))\n\npredict(fit.e2, data.frame(adjE = 0:4))\n\n\nfit.e3 <- lm(Ext_CZ ~ adjE + I(adjE^2) + I(adjE^3), data=Dataset)\nsummary(fit.e3)\nlines(predict(fit.e3, data.frame(age_pr = 1:55)))\n\nanova(fit.e, fit.e2, fit.e3)\n\ncox.tt <- coxph(yLt ~ as.factor(sex) + as.factor(origin) + as.factor(LvZ) + \n                   Dom_CZ + tt(Ext_CZ) + Con_CZ +\n                   Agr_CZ + Neu_CZ + Opn_CZ\n                 , tt=function(x,t,...){\n                   # Ext = x - scale(1/(t + 1))\n                   pspline(x + t, df= 2, nterm = 3)\n                 }\n                 , data=datX\n)\n\ncox.tt2 <- coxph(yLt ~ as.factor(sex) + as.factor(origin) + as.factor(LvZ) + \n                   Dom_CZ +  tt(Ext_CZ) + Con_CZ +\n                   Agr_CZ + Neu_CZ + Opn_CZ\n                 , tt=function(x,t,...){\n                   Ext = x - t   # to scale or not to scale\n                   cbind(Ext = Ext, Ext2 = (Ext)^2)\n                   \n                   #pspline(x + t)\n                 }\n                 , data=datX, x=TRUE\n)\ncox.tt2$loglik\n\ncox.tt2.a <- coxph(yLt ~ as.factor(sex) + as.factor(origin) + as.factor(LvZ) + \n                   Dom_CZ +  tt(Ext_CZ) + Con_CZ +\n                   Agr_CZ + Neu_CZ + Opn_CZ\n                 , tt=function(x,t,...){\n                   Ext = scale(t) - x   # to scale or not to scale\n                   #Ext = 1.74 + t * -0.15 + t^2 * 0.002 \n                   #Ext = -0.086 + Ext * -0.532 + Ext^2 * 0.037 \n                   cbind(Ext = -0.532 * Ext, Ext2 = 0.037 *(Ext)^2)\n                   #pspline(x - t, method='aic', )\n                 }\n                 , data=datX, x=TRUE\n)\n\n\ncox.tt3 <- coxph(yLt ~ as.factor(sex) + as.factor(origin) + as.factor(LvZ) + \n                               Dom_CZ +  tt(Ext_CZ) + Con_CZ +\n                               Agr_CZ + Neu_CZ + Opn_CZ\n                 , tt=function(x,t,...){\n                   Ext = x - t\n                   cbind(Ext = Ext, Ext2 = (Ext-1)^2, Ext3 = (Ext-1)^3)\n                }\n                , data=datX, x=TRUE\n)\n\n\nsummary(cox.tt2)\nanova(cox.tt2.a)\n\nll = 2*(cox.tt$loglik - cox.trunc$loglik)[2]\nll = 2*(cox.tt2$loglik - cox.trunc$loglik)[2]\nll = 2*(cox.tt2$loglik - cox.tt2.a$loglik)[2]\nll = 2*(cox.tt3$loglik - cox.tt2$loglik)[2]\nll\ndchisq(ll, 2)\n\n### are the tt effects doing what I think they're doing?\n\ntt.deets = coxph.detail(cox.tt)\n\ncolnames(tt.deets$means)\n\nplot(rownames(tt.deets$means) # these are the same as time\n     ,tt.deets$means[,5]) # Ext1\n\nplot(rownames(tt.deets$means), tt.deets$means[,6]) # Ext2\n\nplot(rownames(tt.deets$means), tt.deets$means[,9]) # Opn, for comparison\n\n\n\n",
    "created" : 1448364822998.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2796510268",
    "id" : "3DCF732A",
    "lastKnownWriteTime" : 1448396592,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/cox.R",
    "project_path" : "cox.R",
    "properties" : {
    },
    "relative_order" : 8,
    "source_on_save" : false,
    "type" : "r_source"
}