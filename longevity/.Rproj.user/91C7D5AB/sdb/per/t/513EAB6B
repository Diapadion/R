{
    "collab_server" : "",
    "contents" : "### temp\n\nlibrary(frailtypack)\nlibrary(parfm)\n\n\n### How can the specification vary?\n\n\n# x2\n# In/exclude Origin\n\n# x2\n# In/exclude sex\n\n# x2\n# with and without other personality covariates\n\n# x2\n# Leave confounded\n# Residulaize data by DoB\n\n# x2 [X - do not pursue]\n# With and without frailty\n\n# x3 [ ??]\n# Method used\n# pw - piecewise\n# sp - splines\n# gm - gompertz\n# \n# ...\n\n\nparfm.tst.all = parfm(Surv(age_pr, age, status) ~ \n                        as.factor(sex) + as.factor(origin) +  \n                        D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                      cluster=\"sample\" #strata = \"strt\"\n                      , frailty = 'gamma'\n                      , data=datX, dist='logskewnormal', method ='ucminf')\nprint(parfm.tst.all)\n\n\n\n\n# pf.u.x.x.D.gm\n# pf.r.o.s.6.pc\n\n\n### Piecewise\n## all 6\npf.u.o.s.6.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                         as.factor(sex) + as.factor(origin) +  \n                         Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                       data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.u.x.x.6.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.u.x.s.6.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) +  \n                               Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.u.o.x.6.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                               Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.r.o.s.6.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + as.factor(origin) +  \n                               D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.r.x.x.6.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.r.x.s.6.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) +  \n                               D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.r.o.x.6.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                               D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\n\n## Agr\npf.u.o.s.A.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + as.factor(origin) +  \n                               Agr_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.u.x.x.A.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               Agr_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.u.x.s.A.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) +  \n                               Agr_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\npf.u.o.x.A.pw = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                               Agr_CZ,\n                             data = datX, hazard =  'Piecewise-equi' , nb.int = 9\n)\n\n\nsummary(pf.u.x.s.A.pw)\n\n\n\n### Weibull\n# won't run:\n# pf.u.o.s.6.wb\n# pf.r.* # problem visible in the plots\npf.u.x.x.6.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Weibull' \n)\npf.u.x.s.6.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + #as.factor(origin) +  \n                               Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Weibull' \n)\npf.u.o.x.6.wb = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) +  \n                               Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Weibull' \n)\n\n\nsummary(pf.r.x.s.6.wb)\npf.r.x.s.6.wb$AIC\nplot(pf.r.o.x.6.wb, type= 'Survival')\n\n\n\n### Splines\npf.u.o.s.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                            as.factor(sex) + as.factor(origin) +  \n                            Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                           RandDist = 'Gamma'\n                          ,data = datX, hazard =  'Splines' \n                          , n.knots = 4, kappa = 1\n)\npf.u.o.x.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               + as.factor(origin) +  \n                               Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.x.s.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + \n                               Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.x.x.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.r.o.s.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + as.factor(origin) +  \n                               D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.r.o.x.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               + as.factor(origin) +  \n                               D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.r.x.s.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + \n                               D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.r.x.x.6.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\n\n\n\n\npf.u.x.x.A.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                              Agr_CZ ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.o.s.A.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + as.factor(origin) + Agr_CZ ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.o.x.A.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(origin) + Agr_CZ ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\npf.u.x.s.A.sp = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                               as.factor(sex) + Agr_CZ ,\n                             RandDist = 'Gamma'\n                             ,data = datX, hazard =  'Splines' \n                             , n.knots = 4, kappa = 1\n)\n\nprint(pf.u.x.s.A.sp)\npf.u.x.x.A.sp$logLikPenal\npf.u.x.x.A.sp$LCV\n\n\n\nsummary(pf.u.o.s.6.wb)\nplot(pf.u.o.s.6.wb, type = 'Survival')\npf.u.o.s.6.wb$logLik * -2\n\n\nplot(fpack.r.9, type = 'Hazard')\n\n\n# pf.u.o.s.6.gm\n# -2 * -789.542\n# \n# u <- predict(pf.u.o.s.6.gm)\n# plot(u)\n\nplot(pf.u.o.s.6.gm, sort='i')\n\n\n\n\npf.r.x.s.6.sp$logLikPenal\n\n\n\n\n\n\nfpack.u.spl = frailtyPenal(Surv(age_pr, age, status) ~ cluster(sample) + \n                             as.factor(sex) + as.factor(origin) +  \n                             Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                           RandDist = 'Gamma'\n                           ,data = datX, hazard =  'Splines' \n                           , n.knots = 4, kappa = 1\n)\n\n\nlibrary(AICcmodavg)\n\n\n# rememeber, AIC = 2k - 2LL\n# so, if all K = 1; LL = 1 - (AIC)/2\n\nAIC2LL <- function(AIC,k=1){\n  LL = k - AIC/2\n  return(LL)\n}\n\nLLv = c(AIC2LL(pf.r.o.s.6.sp$LCV), \n        AIC2LL(pf.u.o.s.6.sp$LCV),\n        AIC2LL(fpack.r.9$AIC))\n\nLLv = c('pf.r.o.s.6.sp','pf.u.o.s.6.sp',\n        'pf.r.o.x.6.sp','pf.u.o.x.6.sp',\n        'pf.r.x.s.6.sp','pf.u.x.s.6.sp',\n        'pf.r.x.x.6.sp','pf.u.x.x.6.sp',\n        'pf.r.o.s.6.pw','pf.u.o.s.6.pw',\n        'pf.r.o.x.6.pw','pf.u.o.x.6.pw',\n        'pf.r.x.s.6.pw','pf.u.x.s.6.pw',\n        'pf.r.x.x.6.pw','pf.u.x.x.6.pw',\n        'pf.u.o.s.A.sp','pf.u.o.s.A.pw',\n        'pf.u.x.s.A.sp','pf.u.x.s.A.pw',\n        'pf.u.o.x.A.sp','pf.u.o.x.A.pw',\n        'pf.u.x.x.A.sp','pf.u.x.x.A.pw')\n\n\nKv = rep(1,times=24)\nmnv = c('pf.r.o.s.6.sp','pf.u.o.s.6.sp',\n  'pf.r.o.x.6.sp','pf.u.o.x.6.sp',\n  'pf.r.x.s.6.sp','pf.u.x.s.6.sp',\n  'pf.r.x.x.6.sp','pf.u.x.x.6.sp',\n  'pf.r.o.s.6.pw','pf.u.o.s.6.pw',\n  'pf.r.o.x.6.pw','pf.u.o.x.6.pw',\n  'pf.r.x.s.6.pw','pf.u.x.s.6.pw',\n  'pf.r.x.x.6.pw','pf.u.x.x.6.pw',\n  'pf.u.o.s.A.sp','pf.u.o.s.A.pw',\n  'pf.u.x.s.A.sp','pf.u.x.s.A.pw',\n  'pf.u.o.x.A.sp','pf.u.o.x.A.pw',\n  'pf.u.x.x.A.sp','pf.u.x.x.A.pw')\nestv = c(pf.r.o.s.6.sp$coef['Agr_CZ'],pf.u.o.s.6.sp$coef['Agr_CZ'],\n         pf.r.o.x.6.sp$coef['Agr_CZ'],pf.u.o.x.6.sp$coef['Agr_CZ'],\n         pf.r.x.s.6.sp$coef['Agr_CZ'],pf.u.x.s.6.sp$coef['Agr_CZ'],\n         pf.r.x.x.6.sp$coef['Agr_CZ'],pf.u.x.x.6.sp$coef['Agr_CZ'],\n         pf.r.o.s.6.pw$coef['Agr_CZ'],pf.u.o.s.6.pw$coef['Agr_CZ'],\n         pf.r.o.x.6.pw$coef['Agr_CZ'],pf.u.o.x.6.pw$coef['Agr_CZ'],\n         pf.r.x.s.6.pw$coef['Agr_CZ'],pf.u.x.s.6.pw$coef['Agr_CZ'],\n         pf.r.x.x.6.pw$coef['Agr_CZ'],pf.u.x.x.6.pw$coef['Agr_CZ'],\n         pf.u.o.s.A.sp$coef['Agr_CZ'],pf.u.o.s.A.pw$coef['Agr_CZ'],\n         pf.u.x.s.A.sp$coef['Agr_CZ'],pf.u.x.s.A.pw$coef['Agr_CZ'],\n         pf.u.o.x.A.sp$coef['Agr_CZ'],pf.u.o.x.A.pw$coef['Agr_CZ'],\n         pf.u.x.x.A.sp$coef['Agr_CZ'],pf.u.x.x.A.pw$coef['Agr_CZ']\n)\n\n         \n         \n# seH <- sqrt(diag(x$varH))\n# seHIH <- sqrt(diag(x$varHIH))\nsev = c(sqrt(diag(pf.r.o.s.6.sp$varH))[6],sqrt(diag(pf.u.o.s.6.sp$varH))[6],sqrt(diag(fpack.r.9$varH))[6])\n\nmodavgCustom(LLv,Kv,mnv,estv,sev,\n             nobs=NULL,second.ord=F, uncond.se='revised')\n",
    "created" : 1494932481668.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4218837761",
    "id" : "513EAB6B",
    "lastKnownWriteTime" : 1494949135,
    "last_content_update" : 1494949135755,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/tempToDelete.R",
    "project_path" : "tempToDelete.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 12,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}