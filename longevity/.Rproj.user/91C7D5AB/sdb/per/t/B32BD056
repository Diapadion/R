{
    "collab_server" : "",
    "contents" : "### Kaplan-Meier survfit curves\n\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(survival)\nlibrary(grid)\n\n\n\nplot1 <- ggsurv(survfit(y ~ 1)) + theme_bw() + theme(axis.title.y=element_blank(),\n                                                     axis.title.x=element_blank())\n\ncuto = 0.5\n\ndatX$Etert = 2\nE.sd = sd(datX$Ext_CZ)\nfor (i in 1:dim(datX)[1]){\n  if (datX$Ext_CZ[i] > (cuto * E.sd)){\n    datX$Etert[i] = 3\n  }\n  if (datX$Ext_CZ[i] < (-cuto * E.sd)){\n    datX$Etert[i] = 1\n  }\n}\nsf.E = survfit(y ~ Etert, data=datX)\nplot5 <- ggsurv(sf.E) + theme_bw() + theme(axis.title.y=element_blank(),\n                                           axis.title.x=element_blank(),\n                                           legend.position=\"none\") +\n  labs(title = 'Extraversion')\n\n\ndatX$Atert = 2\nA.sd = sd(datX$Agr_CZ)\nfor (i in 1:dim(datX)[1]){\n  if (datX$Agr_CZ[i] > (cuto * A.sd)){\n    datX$Atert[i] = 3\n  }\n  if (datX$Agr_CZ[i] < (-cuto * A.sd)){\n    datX$Atert[i] = 1\n  }\n}\nsf.A = survfit(y ~ Atert, data=datX)\nplot7 <- ggsurv(sf.A) + theme_bw() + theme(axis.title.y=element_blank(),\n                                           axis.title.x=element_blank(),\n                                           legend.position=\"none\") +\n  labs(title = 'Agreeableness')\n\ndatX$Dtert = 2\nD.sd = sd(datX$Dom_CZ)\nfor (i in 1:dim(datX)[1]){\n  if (datX$Dom_CZ[i] > (cuto * D.sd)){\n    datX$Dtert[i] = 3\n  }\n  if (datX$Dom_CZ[i] < (-cuto * D.sd)){\n    datX$Dtert[i] = 1\n  }\n}\nsf.D = survfit(y ~ Dtert, data=datX)\nplot4 <- ggsurv(sf.D) + theme_bw() + theme(axis.title.y=element_blank(),\n                                           axis.title.x=element_blank()\n                                           ,legend.position=\"none\" \n                                           ) +\n  labs(title = 'Dominance')\n\ndatX$Ntert = 2\nN.sd = sd(datX$Neu_CZ)\nfor (i in 1:dim(datX)[1]){\n  if (datX$Neu_CZ[i] > (cuto * N.sd)){\n    datX$Ntert[i] = 3\n  }\n  if (datX$Neu_CZ[i] < (-cuto * N.sd)){\n    datX$Ntert[i] = 1\n  }\n}\nsf.N = survfit(y ~ Ntert, data=datX)\nplot8 <- ggsurv(sf.N) + theme_bw() + theme(axis.title.y=element_blank(),\n                                           axis.title.x=element_blank(),\n                                           legend.position=\"none\") +\n  labs(title = 'Neuroticism')\n\ndatX$Ctert = 2\nC.sd = sd(datX$Con_CZ)\nfor (i in 1:dim(datX)[1]){\n  if (datX$Con_CZ[i] > (cuto * C.sd)){\n    datX$Ctert[i] = 3\n  }\n  if (datX$Con_CZ[i] < (-cuto * C.sd)){\n    datX$Ctert[i] = 1\n  }\n}\nsf.C = survfit(y ~ Ctert, data=datX)\nplot6 <- ggsurv(sf.C) + theme_bw() + theme(axis.title.y=element_blank(),\n                                           axis.title.x=element_blank(),\n                                           legend.position=\"none\") +\n  labs(title = 'Conscientiousness')\n\ndatX$Otert = 2\nO.sd = sd(datX$Opn_CZ)\nfor (i in 1:dim(datX)[1]){\n  if (datX$Opn_CZ[i] > (cuto * O.sd)){\n    datX$Otert[i] = 3\n  }\n  if (datX$Opn_CZ[i] < (-cuto * O.sd)){\n    datX$Otert[i] = 1\n  }\n}\nsf.O = survfit(y ~ Otert, data=datX)\nplot9 <- ggsurv(sf.O) + theme_bw() + theme(axis.title.y=element_blank(),\n                                           axis.title.x=element_blank(),\n                                           legend.position=\"none\") +\n  labs(title = \"Openness\")\n\n\n### non personality\nsf.Sex = survfit(y ~ sex, data=datX)\nplot2 <- ggsurv(sf.Sex) + theme_bw() + theme(axis.title.y=element_blank(),\n                                             axis.title.x=element_blank(),\n                                             legend.position=\"none\")\n\nsf.Wild = survfit(y ~ origin, data=datX)\nplot3 <- ggsurv(sf.Wild) + theme_bw() + theme(axis.title.y=element_blank(),\n                                              axis.title.x=element_blank(),\n                                              legend.position=\"none\")\n\n# facet_wrap(nrow = 2) # can't be done...?\n# Not that way. This way:\n\n\n\n### Paper figure ###\n\n# return to later\n\n# grid.newpage()\n# pushViewport(viewport(layout = grid.layout(3, 3)))\n# print(plot1, vp = vplayout(1, 1))\n# print(plot2, vp = vplayout(1, 2))\n# print(plot3, vp = vplayout(1, 3))\n# print(plot4, vp = vplayout(2, 1))\n# print(plot5, vp = vplayout(2, 2))\n# print(plot6, vp = vplayout(2, 3))\n# print(plot7, vp = vplayout(3, 1))\n# print(plot8, vp = vplayout(3, 2))\n# print(plot9, vp = vplayout(3, 3))\n\n\n\n### Publication plot(s)!\nlibrary(rms)\n\nnpsf.1 = npsurv(y.wild ~ Sample, data=wch)\n\npar(family = 'serif', cex.lab = 1.25, cex.axis = 1.1)\nsurvplot(npsf.1, xlab = 'Age')\n\n\n# \n# par(mfrow=c(1,1))\n# \n# npsf.Wild = npsurv(y ~ origin + strata(strt), data=datX) # stratification doesn't really work\n# survplot(npsf.Wild)\n# \n# npsf.N = npsurv(y ~ Ntert, data=datX)\n# survplot(npsf.N)\n# \n# \n# \n# ##\n# par(mfrow=c(3,3),\n#     oma = c(5,4,0,0) + 0.3,\n#     mar = c(0,0,1,1) + 0.5)\n# \n# survplot(npsurv(y ~ 1))\n# survplot(npsurv(y ~ datX$origin))\n# \n# survplot(npsurv(y ~ datX$Etert ))\n# \n# \n# \n# plot(survfit(y ~ age_pr, data=Dataset))\n# \n# plot(survfit(yLt ~ Ext_CZ, data=datX))\n\n\n\n### for Alex APS presentation ###\n\n#1. just the basic curve\n\nplot1 <- ggsurv(survfit(y ~ 1)) + theme_bw() #+ theme(axis.title.y=element_blank(),\n#       axis.title.x=element_blank())\nplot1\n\n\nplot1a <- ggsurv(survfit(y.wild ~ Sample, data=wch), CI=T, xlab='Age') + theme_bw() \nplot1a\n\n\n\n#2. sex and wild-born\n\nsurvplot(npsurv(y ~ origin, data=datX), loglog=T)\nsurvplot(npsurv(y ~ sex, data=datX), loglog=T)\nsurvplot(npsurv(y ~ Etert, data=datX), loglog=T)\n\n\nplot2 <- ggsurv(sf.Sex) + theme_bw() + theme(legend.position=\"none\")\nplot3 <- ggsurv(sf.Wild) + theme_bw() + theme(axis.title.y=element_blank(),legend.position=\"none\")#,\n# axis.title.x=element_blank())\ngrid.newpage()\npushViewport(viewport(layout = grid.layout(1, 2)))\nprint(plot2, vp = vplayout(1, 1))\nprint(plot3, vp = vplayout(1, 2))\n# fix labels externally\n\n\n#3. personality curves\ngrid.newpage()\npushViewport(viewport(layout = grid.layout(2, 3)))\nprint(plot4 + coord_cartesian(xlim = c(0, 65)), vp = vplayout(1, 1))\nprint(plot5 + coord_cartesian(xlim = c(0, 65)), vp = vplayout(1, 2))\nprint(plot6 + coord_cartesian(xlim = c(0, 65)), vp = vplayout(1, 3))\nprint(plot7 + coord_cartesian(xlim = c(0, 65)), vp = vplayout(2, 1))\nprint(plot8 + coord_cartesian(xlim = c(0, 65)), vp = vplayout(2, 2))\nprint(plot9 + coord_cartesian(xlim = c(0, 65)), vp = vplayout(2, 3))\n\n\n\n\n####### Functions #######\n\n\n\nvplayout <- function(x, y) viewport(layout.pos.row = x, layout.pos.col = y)\n\n\n\nggsurv <- function(s, CI = 'def', plot.cens = T, surv.col = 'gg.def',\n                   cens.col = 'lightgrey', lty.est = 1, lty.ci = 2,\n                   cens.shape = 5, back.white = F, xlab = 'Time',\n                   ylab = 'Survival', main = ''){\n  \n  library(ggplot2)\n  strata <- ifelse(is.null(s$strata) ==T, 1, length(s$strata))\n  stopifnot(length(surv.col) == 1 | length(surv.col) == strata)\n  stopifnot(length(lty.est) == 1 | length(lty.est) == strata)\n  \n  ggsurv.s <- function(s, CI = 'def', plot.cens = T, surv.col = 'gg.def',\n                       cens.col = 'red', lty.est = 1, lty.ci = 2,\n                       cens.shape = 3, back.white = F, xlab = 'Time',\n                       ylab = 'Survival', main = ''){\n    \n    dat <- data.frame(time = c(0, s$time),\n                      surv = c(1, s$surv),\n                      up = c(1, s$upper),\n                      low = c(1, s$lower),\n                      cens = c(0, s$n.censor))\n    dat.cens <- subset(dat, cens != 0)\n    \n    col <- ifelse(surv.col == 'gg.def', 'black', surv.col)\n    \n    pl <- ggplot(dat, aes(x = time, y = surv)) +\n      xlab(xlab) + ylab(ylab) + ggtitle(main)\n    \n    pl <- if(plot.cens == T & length(dat.cens) > 0){\n      pl + geom_point(data = dat.cens, aes(y = surv), shape = cens.shape,\n                      col = cens.col)\n    } else if (plot.cens == T & length(dat.cens) == 0){\n      stop ('There are no censored observations')\n    } else(pl)\n    \n    pl <- pl + geom_step(col = col, lty = lty.est)\n    \n    pl <- if(CI == T | CI == 'def') {\n      pl + geom_step(aes(y = up), color = col, lty = lty.ci) +\n        geom_step(aes(y = low), color = col, lty = lty.ci)\n    } else (pl)\n    \n\n    pl <- if(back.white == T) {pl + theme_bw()\n    } else (pl)\n    pl\n  }\n  \n  ggsurv.m <- function(s, CI = 'def', plot.cens = T, surv.col = 'gg.def',\n                       cens.col = 'lightgrey', lty.est = 1, lty.ci = 2,\n                       cens.shape = 5, back.white = F, xlab = 'Time',\n                       ylab = 'Survival', main = '') {\n    n <- s$strata\n    \n    groups <- factor(unlist(strsplit(names\n                                     (s$strata), '='))[seq(2, 2*strata, by = 2)])\n    gr.name <-  unlist(strsplit(names(s$strata), '='))[1]\n    gr.df <- vector('list', strata)\n    ind <- vector('list', strata)\n    n.ind <- c(0,n); n.ind <- cumsum(n.ind)\n    for(i in 1:strata) ind[[i]] <- (n.ind[i]+1):n.ind[i+1]\n    \n    for(i in 1:strata){\n      gr.df[[i]] <- data.frame(\n        time = c(0, s$time[ ind[[i]] ]),\n        surv = c(1, s$surv[ ind[[i]] ]),\n        up = c(1, s$upper[ ind[[i]] ]),\n        low = c(1, s$lower[ ind[[i]] ]),\n        cens = c(0, s$n.censor[ ind[[i]] ]),\n        group = rep(groups[i], n[i] + 1))\n    }\n    \n    dat <- do.call(rbind, gr.df)\n    dat.cens <- subset(dat, cens != 0)\n    \n    pl <- ggplot(dat, aes(x = time, y = surv, group = group)) +\n      xlab(xlab) + ylab(ylab) + ggtitle(main)\n      \n    \n    # point section (moved)\n    pl <- if(plot.cens == T & length(dat.cens) > 0){\n      pl + geom_point(data = dat.cens, aes(y = surv), shape = cens.shape,\n                      col = cens.col)\n    } else if (plot.cens == T & length(dat.cens) == 0){\n      stop ('There are no censored observations')\n    } else(pl)\n    \n    \n    pl <- pl + geom_step(aes(col = group, lty = group))\n    \n    col <- if(length(surv.col == 1)){\n      scale_colour_manual(name = gr.name, values = rep(surv.col, strata))\n    } else{\n      scale_colour_manual(name = gr.name, values = surv.col)\n    }\n    \n    pl <- if(surv.col[1] != 'gg.def'){\n      pl + col\n    } else {pl + scale_colour_discrete(name = gr.name)}\n    \n    line <- if(length(lty.est) == 1){\n      scale_linetype_manual(name = gr.name, values = rep(lty.est, strata))\n    } else {scale_linetype_manual(name = gr.name, values = lty.est)}\n    \n\n    pl <- pl + line\n    \n    pl <- if(CI == T) {\n      if(length(surv.col) > 1 && length(lty.est) > 1){\n        stop('Either surv.col or lty.est should be of length 1 in order\n             to plot 95% CI with multiple strata')\n      }else if((length(surv.col) > 1 | surv.col == 'gg.def')[1]){\n        pl + geom_step(aes(y = up, color = group), lty = lty.ci) +\n          geom_step(aes(y = low, color = group), lty = lty.ci)\n      } else{pl +  geom_step(aes(y = up, lty = group), col = surv.col) +\n          geom_step(aes(y = low,lty = group), col = surv.col)}\n    } else {pl}\n    \n    \n\n\n    \n    pl <- if(back.white == T) {pl + theme_bw()\n    } else (pl)\n    pl\n  }\n  pl <- if(strata == 1) {ggsurv.s(s, CI , plot.cens, surv.col ,\n                                  cens.col, lty.est, lty.ci,\n                                  cens.shape, back.white, xlab,\n                                  ylab, main)\n  } else {ggsurv.m(s, CI, plot.cens, surv.col ,\n                   cens.col, lty.est, lty.ci,\n                   cens.shape, back.white, xlab,\n                   ylab, main)}\n  pl\n}",
    "created" : 1489572850897.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "703284492",
    "id" : "B32BD056",
    "lastKnownWriteTime" : 1494844792,
    "last_content_update" : 1494844792,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/KMplots.R",
    "project_path" : "KMplots.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}