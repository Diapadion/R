{
    "collab_server" : "",
    "contents" : "require(ahaz)\n\n#options(digits = 7)\n\n# attr(yLt, 'type') <- 'counting'\n\nset.seed(10101)\n\ny.ahaz <- Surv(Dataset$age_pr#+runif(nrow(datX))*1e-7\n               , Dataset$age#+runif(nrow(datX))*1e-7\n               ,Dataset$status)\n\ny.ahaz <- Surv(Dataset$age_pr#+runif(nrow(datX))*1e-7\n               , Dataset$age+runif(nrow(datX))*1e-7\n               ,Dataset$stat.log)\n\nattr(y.ahaz, 'type') <- 'counting'\n\n\n\n###\n\n\n\nnetform = data.frame(cbind(as.factor(datX$sex), \n                           as.factor(datX$origin), \n                           datX$Dom_CZ, datX$Ext_CZ, datX$Con_CZ,\n                           datX$Agr_CZ, datX$Neu_CZ, datX$Opn_CZ))\n\ncolnames(netform) = c(\"sex\",'origin',\n                      'Dom','Ext','Con','Agr','Neu','Opn') \n\nrmatx1 = model.matrix( ~ sex + origin + \n                         Dom + Ext + Con + Agr + Neu + Opn - 1, netform)\n\nahz.1 <- ahazpen(y.ahaz, rmatx1, penalty=lasso.control(alpha=0.3))\n\nplot(ahz.1, labels=TRUE)\n\ntune.ahz = tune.ahazpen(y.ahaz, rmatx1, \n                        penalty = lasso.control(alpha=0.3),  #seq(0,1,0.01)\n                        lambda = lseq(0.0005, 10, 1000),\n                        tune = cv.control(nfolds=10, reps=10)\n)\nplot(tune.ahz)\n\ncoef(ahz.1, lambda = tune.ahz$lambda.min)\n\naz.1 <- ahaz(y.ahaz, rmatx1)\nsummary(az.1)\n\n\n\nnetform = data.frame(cbind(as.factor(datX$sex), \n                           as.factor(datX$origin), \n                           datX$D.r2.DoB, datX$E.r2.DoB, datX$Con_CZ, \n                           datX$Agr_CZ, datX$N.r1.DoB, datX$O.r2.DoB))\n\ncolnames(netform) = c(\"sex\",'origin',\n                      'Dom','Ext','Con','Agr','Neu','Opn') \n\nrmatx1.r = model.matrix( ~ sex + origin + \n                           Dom + Ext + Con + Agr + Neu + Opn - 1, netform)\n\nahz.1.r <- ahazpen(y.ahaz, rmatx1.r, penalty=lasso.control(alpha=0.3))\n\nplot(ahz.1.r, labels=TRUE)\n\ntune.ahz.r = tune.ahazpen(y.ahaz, rmatx1.r, \n                          penalty = lasso.control(alpha=0.3),  #seq(0,1,0.01)\n                          lambda = lseq(0.0005, 10, 1000),\n                          tune = cv.control(nfolds=10, reps=10)\n)\nplot(tune.ahz.r)\n\ncoef(ahz.1.r, lambda = tune.ahz.r$lambda.min)\n\n\n###\n# no DOB included\n\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           as.factor(datX$sample=='Japan'),as.factor(datX$sample=='Yerkes'),\n                           as.factor(datX$sample=='Edinburgh'),\n                           as.factor(datX$origin), \n                           datX$Dom_CZ, datX$Ext_CZ, datX$Con_CZ,\n                           datX$Agr_CZ, datX$Neu_CZ, datX$Opn_CZ))\n\n\ncolnames(netform) = c(\"sex\",\"Japan\",'Yerkes','Edinburgh','origin',\n                      'Dom','Ext','Con','Agr','Neu','Opn') \n\nrmatx2 = model.matrix( ~ sex + Japan + Yerkes + Edinburgh + origin + Dom +\n                        Ext + Con + Agr + Neu + Opn - 1, netform)\n\nahz.2 <- ahazpen(y.ahaz, rmatx2, penalty=lasso.control(alpha=0.3),\n                 lambda = lseq(0.0005, 10, 1000))\n\nplot(ahz.2, labels=TRUE)\n# > palette()[1:6]\n# [1:,7:] \"black\"   \"red\"     \"green3\"  \"blue\"    \"cyan\"    \"magenta\" \n\n# 1 - sex {risk}\n# 2 - Japan {protect}\n# 3 - Yerkes\n# 11 - O\n# 5 - origin\n# 9 - A\n# 10 - N\n# ...\n\ntune.ahz = tune.ahazpen(y.ahaz, rmatx2, \n                        penalty = lasso.control(alpha=0.3),  #seq(0,1,0.01)\n                        lambda = lseq(0.0005, 10, 1000),\n                        tune = cv.control(nfolds=10, reps=10)\n)\nplot(tune.ahz)\n\ncoef(ahz.2, lambda = tune.ahz$lambda.min)\n\naz.2 <- ahaz(y.ahaz, rmatx2)\n\n\ncoef(ahz.2)[,100]\n\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           as.factor(datX$sample=='Japan'),as.factor(datX$sample=='Yerkes'),\n                           as.factor(datX$sample=='Edinburgh'),\n                           datX$Dom_CZ, datX$Ext_CZ, datX$Con_CZ,\n                           datX$Agr_CZ, datX$Neu_CZ, datX$Opn_CZ))\ncolnames(netform) = c(\"sex\",\"Japan\",'Yerkes','Edinburgh',\n                      'Dom','Ext','Con','Agr','Neu','Opn') \nrmatx2a = model.matrix( ~ sex + Japan + Yerkes + Edinburgh + Dom +\n                         Ext + Con + Agr + Neu + Opn - 1, netform)\n\n\n### \n# adjusted for linear and curvilinear time effects\n\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           as.factor(datX$sample=='Japan'),as.factor(datX$sample=='Yerkes'),\n                           as.factor(datX$sample=='Edinburgh'),\n                           as.factor(datX$origin), \n                           datX$Dom_CZ, datX$D.r3.DoB,\n                           datX$Ext_CZ, datX$E.r3.DoB,\n                           datX$Con_CZ, datX$Agr_CZ, \n                           datX$Neu_CZ, datX$N.r1.DoB,\n                           datX$Opn_CZ, datX$O.r2.DoB\n                           ))\n\n\ncolnames(netform) = c(\"sex\",\"Japan\",'Yerkes','Edinburgh','origin',\n                      'Dom','D.r','Ext','E.r','Con','Agr',\n                      'Neu','N.r','Opn','O.r') \n\nrmatx3 = model.matrix( ~ sex + Japan + Yerkes + Edinburgh + origin + \n                        Dom + Ext + Con + Agr + Neu + Opn + \n                        D.r + E.r + N.r + O.r - 1, netform)\n\nahz.3 <- ahazpen(y.ahaz, rmatx3)\n\nplot(ahz.3, labels=TRUE)\n\n\n# keeping all the residualized guys doesn't help\n# step(s) back:\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           as.factor(datX$sample=='Japan'),as.factor(datX$sample=='Yerkes'),\n                           as.factor(datX$sample=='Edinburgh'),\n                           as.factor(datX$origin), \n                           datX$D.r3.DoB,\n                           datX$E.r3.DoB,\n                           datX$Con_CZ, datX$Agr_CZ, \n                           datX$N.r1.DoB,\n                           datX$O.r2.DoB\n))\n\n\ncolnames(netform) = c(\"sex\",\"Japan\",'Yerkes','Edinburgh','origin',\n                      'D.r','E.r','Con','Agr',\n                      'N.r','O.r') \n\nrmatx3a = model.matrix( ~ sex + Japan + Yerkes + Edinburgh + origin + \n                        Con + Agr + \n                        D.r + E.r + N.r + O.r - 1, netform)\n\nahz.3a <- ahazpen(y.ahaz, rmatx3a)\n\nplot(ahz.3a, labels=TRUE)\n\ncoef(ahz.3a)\n\n# Does reverting D and N do anything?\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           as.factor(datX$sample=='Japan'),as.factor(datX$sample=='Yerkes'),\n                           as.factor(datX$sample=='Edinburgh'),\n                           as.factor(datX$origin), \n                           datX$Dom_CZ,\n                           datX$E.r3.DoB,\n                           datX$Con_CZ, datX$Agr_CZ, \n                           datX$Neu_CZ,\n                           datX$O.r2.DoB\n))\n\n\ncolnames(netform) = c(\"sex\",\"Japan\",'Yerkes','Edinburgh','origin',\n                      'Dom','E.r','Con','Agr',\n                      'Neu','O.r') \n\nrmatx3b = model.matrix( ~ sex + Japan + Yerkes + Edinburgh + origin + \n                        Con + Agr + \n                        Dom + E.r + Neu + O.r - 1, netform)\n\nahz.3b <- ahazpen(y.ahaz, rmatx3b)\n\nplot(ahz.3b, labels=TRUE)\n\n# and removing the cubic for E?\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           as.factor(datX$sample=='Japan'),as.factor(datX$sample=='Yerkes'),\n                           as.factor(datX$sample=='Edinburgh'),\n                           as.factor(datX$origin), \n                           datX$Dom_CZ,\n                           datX$E.r2.DoB,\n                           datX$Con_CZ, datX$Agr_CZ, \n                           datX$Neu_CZ,\n                           datX$O.r1.DoB\n))\n\n\ncolnames(netform) = c(\"sex\",\"Japan\",'Yerkes','Edinburgh','origin',\n                      'Dom','E.r','Con','Agr',\n                      'Neu','O.r') \n\nrmatx3c = model.matrix( ~ sex + Japan + Yerkes + Edinburgh + origin + Dom  #6\n                      + E.r + Neu + Agr + O.r + Con - 1, netform) #11\n\nahz.3c <- ahazpen(y.ahaz, rmatx3c, penalty = lasso.control(alpha=0.3),\n                  lambda = lseq(0.0005, 10, 1000))\n#ahz.3c <- ahazpen(y.ahaz, rmatx, penalty = sscad.control(a=30, nsteps=20, init.sol=NULL, c=NULL)) # I'm not sure what this does\n# for sake of diversity, I'd like to use SCAD\n# ahz.3c <- ahazpen(yLt, rmatx, penalty = sscad.control(a=30, nsteps=20, init.sol=NULL, c=NULL))\n\n\nplot(ahz.3c, labels=TRUE)\n# > palette()[1:6]\n# [1:,7:] \"black\"   \"red\"     \"green3\"  \"blue\"    \"cyan\"    \"magenta\" \n\ncoef(ahz.3c)[,100]\n\n\n\n### something fucked up the models so what it says below appears to no longer be valid\n# Without ORIGIN:\n# Dom & Agr protect, Ext increases risk.\n\n# With ORIGIN:\n# Exactly the same. So leave ORIGIN in.\n\n\n### \"revised\" version:\n\n# Ordered by how quickly they diverge\n# O, 10 - blue \n# origin, 5 - cyan\n# A, 9 - green\n# N, 8 - red\n# D, 6 + pink\n# C, 11 + cyan\n# E, 7 + black\n# edi, 4 - blue\n\n# find it very difficult to believe this is correct\n\n# but it is a Cox model... so signs are reversed, for one\n\n\n\n### With the new stability selected and residualized vars\n\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           as.factor(datX$sample=='Japan'),as.factor(datX$sample=='Yerkes'),\n                           as.factor(datX$sample=='Edinburgh'),\n                           as.factor(datX$origin), \n                           datX$D.r2.DoB,\n                           datX$E.r2.DoB,\n                           datX$C.r.DoB, datX$A.r.DoB, \n                           datX$N.r1.DoB,\n                           datX$O.r1.DoB\n))\n\n\ncolnames(netform) = c(\"sex\",\"Japan\",'Yerkes','Edinburgh','origin',\n                      'D','E','C','A','N','O') \n\nrmatx4 = model.matrix( ~ sex + Japan + Yerkes + Edinburgh + origin + D  #6\n                      + E + N + A + O + C - 1, netform) #11\n\nahz.4 <- ahazpen(y.ahaz, rmatx4, penalty = lasso.control(alpha=0.3),\n                   lambda = lseq(0.0005, 10, 1000))\n                   #sscad.control(a=30, nsteps=30, init.sol=NULL, c=NULL)) #lasso.control(alpha=1))\n\nplot(ahz.4, labels=T)\n\n# O, 10 - blue\n# origin, 5 - cyan\n# A, 9 - green\n# N, 8 - red\n# C, 11 + cyan\n# D, 6 + pink\n# E, 7 + black\n# edi, 4 - blue\n\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           as.factor(datX$sample=='Japan'),as.factor(datX$sample=='Yerkes'),\n                           as.factor(datX$sample=='Edinburgh'),\n                           as.factor(datX$origin), \n                           datX$D.cv.r,\n                           datX$E.cv.r,\n                           datX$C.cv.r, \n                           datX$A.cv.r, \n                           datX$N.cv.r,\n                           datX$O.cv.r\n))\n\n\ncolnames(netform) = c(\"sex\",\"Japan\",'Yerkes','Edinburgh','origin',\n                      'D','E','C','A','N','O') \n\nrmatx5 = model.matrix( ~ sex + Japan + Yerkes + Edinburgh + origin + D  #6\n                      + E + N + A + O + C - 1, netform) #11\n\nahz.5 <- ahazpen(y.ahaz, rmatx5, penalty = sscad.control(a=30, nsteps=30, init.sol=NULL, c=NULL)) #lasso.control(alpha=1))\n\nplot(ahz.5, labels=T)\n\n\n### without Origin\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           as.factor(datX$sample=='Japan'),as.factor(datX$sample=='Yerkes'),\n                           as.factor(datX$sample=='Edinburgh'),\n                           datX$D.cv.r,\n                           datX$E.cv.r,\n                           datX$C.cv.r, \n                           datX$A.cv.r, \n                           datX$N.cv.r,\n                           datX$O.cv.r\n))\n\n\ncolnames(netform) = c(\"sex\",\"Japan\",'Yerkes','Edinburgh',\n                      'D','E','C','A','N','O') \n\nrmatx5a = model.matrix( ~ sex + Japan + Yerkes + Edinburgh + #4\n                      D + E + N + A + O + C - 1, netform) #10\n\nahz.5a <- ahazpen(y.ahaz, rmatx5a, penalty = lasso.control(alpha=0.3),\n                 lambda = lseq(0.0005, 10, 1000))\n\nplot(ahz.5a, labels=T)\n\n### without Sites\nnetform = data.frame(cbind(as.factor(datX$sex),\n                           datX$D.cv.r,\n                           datX$E.cv.r,\n                           datX$C.cv.r, \n                           datX$A.cv.r, \n                           datX$N.cv.r,\n                           datX$O.cv.r\n))\n\n\ncolnames(netform) = c(\"sex\",'D','E','C','A','N','O') \n\nrmatx5b = model.matrix( ~ sex + D + E + N + A + O + C - 1, netform)\n\nahz.5b <- ahazpen(y.ahaz, rmatx5b, penalty = lasso.control(alpha=0.3),\n                  lambda = lseq(0.0005, 10, 1000))\n\nplot(ahz.5b, labels=T)\n# this does NOT help\n\n\n\n####### Tuning #######\n\ntune.ahz = tune.ahazpen(y.ahaz, rmatx, \n             penalty = lasso.control(alpha=0.3),  #seq(0,1,0.01)\n             lambda = lseq(0.0005, 10, 1000),\n             tune = cv.control(nfolds=10, reps=3)\n)\nplot(tune.ahz)\n             \ncoef(ahz.5b, lambda = tune.ahz$lambda.min)\n\n\n\ncv.df <- NULL\nform = NULL\nj = 10\n\nfor (i in 1:j){\n  #break # for stopping this process when sourcing etc.\n  tune.ahz = tune.ahazpen(y.ahaz, rmatx5a, \n                          penalty = lasso.control(alpha=i/j),  #seq(0,1,0.01)\n                          lambda = lseq(0.0005, 10, 1000),\n                          tune = cv.control(nfolds=5, reps=3)\n  )\n  ahz = ahazpen(y.ahaz, rmatx, penalty = lasso.control(alpha=i/j), \n                 lambda = lseq(0.0005, 10, 1000))\n  plot(tune.ahz)\n  \n  form = summary(coef(ahz, lambda = tune.ahz$lambda.min))\n  minLoc = match(tune.ahz$lambda.min, tune.ahz$lambda) \n  form = cbind(t(form$x), tune.ahz$lambda.min, tune.ahz$tunem[minLoc], tune.ahz$tunesd[minLoc], i/20)\n  cv.df = rbind(cv.df, form)\n  \n}\nView(cv.df)\n\n\n             \n####### Stability Selection #######\n\nahazstab(rmatx4, y.ahaz, reps = 100, weakness = 0.3, a = 1,\n         lambda = lseq(0.0001, 0.01, 10))\n\n# none of this seems to change the entry of these vars much\n# it goes O, then D or A\n\n\n\n# c(\"sex\",\"Japan\",'Yerkes','Edinburgh',\n# CYAN: 'D','E','C','A',\n# BLACK: 'N','O') \n\n#palette()[1:9]\n#[1] \"black\"   \"red\"     \"green3\"  \"blue\"    \"cyan\"    \"magenta\" \"yellow\"  \"gray\"    NA  \n\n\nahazstab <- function(data, y, lambda = lseq(0.0005, 0.05, 1000), reps = 100, weakness = 0.5, a = 1){\n  \n  n = nrow(data)\n  \n  P = 0\n  B = 0\n  for (j in 1:reps){\n    perm <- sample(1:n)\n    halfA <- perm[1:(n / 2)]\n    halfB <- perm[(n / 2 + 1):n]\n    mA <- ahazpen(y[halfA,],data[halfA,], \n                  penalty = lasso.control(alpha=a),\n                  penalty.wgt= 1/runif(n/2,weakness,1),\n                  #lambda = lambda,\n                  standardize=FALSE)\n    mB <- ahazpen(y[halfB,],data[halfB,], \n                  penalty = lasso.control(alpha=a),\n                  penalty.wgt= 1/runif(n/2,weakness,1),\n                  lambda = mA$lambda,\n                  standardize=FALSE)\n    P <- P + ((coef(mA) != 0) + (coef(mB) != 0)) / 2\n    B <- B + (coef(mA) + coef(mB))/2\n    \n  }\n  P = P/reps\n  B = B/reps\n  \n  par(mfrow = c(2,1), xpd=NA, mar = c(2,2,2,2))\n  \n  toplot <- apply(B,1,function(x){any(x != 0)})\n  matplot(log(mA$lambda),t(B[toplot,]),type = \"l\",col = rainbow(ncol(data))\n          ,lty = 1)\n  legend(\"bottomleft\", inset=.05, legend=colnames(data), pch=15, col=rainbow(ncol(data)))\n  toplot <- apply(P,1,function(x){any(x != 0)})\n  matplot(log(mA$lambda),t(P[toplot,]),type = \"l\",col = rainbow(ncol(data))\n          ,lty = 1#, ylim= c(0.5,1)\n          )\n  \n  \n}\n\n\n\n#legend(\"bottomright\", inset=.05, legend=colnames(rmatx1), pch=15, col=rainbow())#, horiz=TRUE)\n\n#lambda = lseq(0.0005, 0.05, 1000)\n\n\n \nlibrary(LTRCtrees)\nlibrary(rpart.plot)\n\n\n\ncit.1 = LTRCIT(Surv(age_pr, age, status) ~ \n         as.factor(sex) + as.factor(origin) +  \n         Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n         data=datX)\n\ncit.1.x = LTRCIT(Surv(age_pr, age, status) ~ \n                # as.factor(sex) + as.factor(origin) +  \n                 Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n               data=datX)\n\n\ncit.2 = LTRCIT(Surv(age_pr, age, status) ~ \n                 as.factor(sex) + as.factor(origin) +  \n                 D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n               data=datX)\n\ncit.2.x = LTRCIT(Surv(age_pr, age, status) ~ \n                  # as.factor(sex) + as.factor(origin) +  \n                   D.r2.DoB + E.r2.DoB + Con_CZ + Agr_CZ + N.r1.DoB + O.r2.DoB,\n                 data=datX)\n\n\n\nplot(cit.1)\nprint(cit.1.x)\n\n\ncit.1.pred = predict(cit.1, newdata=datX, type = 'prob')\n\nrrt.1 = LTRCART(Surv(age_pr, age, status) ~\n                  as.factor(sex) + as.factor(origin) +\n                  Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n                data=datX, model=T)\nrpart.plot(rrt.1)\ntext(rrt.1)\n\ncv.rrt.1 = validate(rrt.1, data=datX)\n\n\nlibrary(rms)\n\n\n\nlibrary(randomForestSRC)\n\nrf.1 <- rfsrc(Surv(age, status) ~ \n                as.factor(sex) + as.factor(origin) +  \n                Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n              nsplit = 10, ntree=100, data=datX)\nprint(rf.1)\nplot(rf.1)\nmatplot(rf.1$time.interest, 100 * t(rf.1$survival[1:10, ]),\n        xlab = \"Time\", ylab = \"Survival\", type = \"l\", lty = 1)\nplot.survival(rf.1, subset = 1:10, haz.model='ggamma')\n\nvsel = var.select(Surv(age, status) ~\n             as.factor(sex) + as.factor(origin) +\n             Dom_CZ + Ext_CZ + Con_CZ + Agr_CZ + Neu_CZ + Opn_CZ,\n             conservative = 'high', sub.order =T,\n           data=datX)\n\n#vsel = max.subtree(rf.1, max.order = 3, sub.order = T)\n\n\nplot.variable(rf.1, c(\"Dom_CZ\",\"Ext_CZ\",\"Con_CZ\",\"Neu_CZ\",\"Agr_CZ\",\"Opn_CZ\"))\n",
    "created" : 1489499052282.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4006864352",
    "id" : "C47E5722",
    "lastKnownWriteTime" : 1489593344,
    "last_content_update" : 1489593344227,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/ahaz-LtruncLASSOs.R",
    "project_path" : "ahaz-LtruncLASSOs.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}