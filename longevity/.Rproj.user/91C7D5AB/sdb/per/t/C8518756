{
    "collab_server" : "",
    "contents" : "# Plots\n\nlibrary(ggplot2)\nlibrary(tidyr)\n\n\npdx = gather(datX, Personality, Measurement, Dom:Opn)\n\n### beans of their personalities\n\nvpers<-data.frame(Sample=character(),Dimension=character(),Score=numeric(), Sex=factor)\nvpers<-pdx[,c(98,99,2)]\ncolnames(vpers) = c('Dimension','Score','Sex')\n\n\nlibrary(beanplot)\n\nsvg(filename=\"PersCCACE.svg\",            \n    width=10, \n    height=8, \n    pointsize=12,\n    bg='white')\n# par(mfrow=c(2,3),\n#     oma = c(5,4,0,0) + 0.3,\n#     mar = c(0,0,1,1) + 0.5)\nbeanpersD <- with(data=vpers, beanplot(Score ~ Sex * Dimension, side = 'both',  cutmax = 7, cutmin = 1, #bw = 0.3,\n                                                                      overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                      col = list('salmon3','salmon1','gold3','gold1','green4','green2',\n                                                                        \"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\"),\n                                                                      main='Personality Distributions', show.names=TRUE)\n)\n\nbeanpersA <- with(data=vpers[vpers$Dimension=='Agreeableness',], beanplot(Score, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                                                                          overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                          col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\"),\n                                                                          main='Agreeableness' , show.names=FALSE \n)\n)\nbeanpersN <- with(data=vpers[vpers$Dimension=='Neuroticism',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                                                                        overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                        col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\"),\n                                                                        main='Neuroticism' , show.names=FALSE)\n)\nbeanpersO <- with(data=vpers[vpers$Dimension=='Openness',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                                                                     overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                     col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\"),\n                                                                     main='Openness' \n))\n\nbeanpersC <- with(data=vpers[vpers$Dimension=='Conscientiousness',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                                                                              overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                              col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\")\n                                                                              , main='Conscientiousness'\n)\n)\n\nbeanpersE <- with(data=vpers[vpers$Dimension=='Extraversion',], \n                  beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                           overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                           col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\")\n                           , main='Extraversion' #, yaxt=''\n                  ))\ndev.off()\n\n\n### Deaths \n\nggplot(data=datX, aes(age_pr)) + geom_histogram(binwidth=3) +\n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Personality Rating')\n\nggplot(data=datX[datX$stat.log==T,], aes(age)) + geom_histogram(binwidth=3) +\n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Death')\n  \n\n\n### age * pers issues\n\npdx = gather(datX, Personality, Measurement, Dom:Opn)\n\np <- ggplot(pdx, aes(age_pr, Measurement, colour = factor(Personality))) + geom_point() + \n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Personality Rating')\n\np + facet_wrap(~ Personality, nrow = 2)\n\n\n# LASSO adjusted\npdx = gather(datX, Personality, Measurement, N.cv.r:O.cv.r)\n\np <- ggplot(pdx, aes(age_pr, Measurement, colour = factor(Personality))) + geom_point() + \n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Personality Rating')\n\np + facet_wrap(~ Personality, nrow = 2)\n\n\n### after correction\n\npdx = gather(datX, Personality, Measurement, c(96,99))\n\np <- ggplot(pdx, aes(age_pr, Measurement, colour = factor(Personality))) + geom_point() + \n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Personality Rating')\n\np + facet_grid(~ Personality)\n\n\n####### OLD ##########\n\n\nplot(Dataset$Ext_CZ ~ Dataset$status)\n\nplot(Dataset$Dom_CZ ~ Dataset$status)\n\n\nplot(Dataset$origin ~ Dataset$status)\nplot(Dataset$age ~ Dataset$origin)\n\n# plot(Ext_CZ ~ age_pr, data=datX)\nplot(Dom_CZ ~ age_pr, data=datX)\nplot(Neu_CZ ~ age_pr, data=datX)\nplot(Opn_CZ ~ age_pr, data=datX)\n\n\nplot(Dataset$age_pr, Dataset$Agr_CZ)\ncor.test(Dataset$age_pr, Dataset$Agr_CZ)\n\nplot(Dataset$age_pr, Dataset$Dom_CZ)\ncor.test(Dataset$age_pr, Dataset$Dom_CZ) # *\n\nplot(Dataset$age_pr, Dataset$Opn_CZ)\ncor.test(Dataset$age_pr, Dataset$Opn_CZ) # **\n\nplot(Dataset$age_pr, Dataset$Con_CZ)\ncor.test(Dataset$age_pr, Dataset$Con_CZ)\n\nplot(Dataset$age_pr, Dataset$Neu_CZ)\ncor.test(Dataset$age_pr, Dataset$Neu_CZ) # *\n\nplot(Dataset$age_pr, Dataset$Ext_CZ)\ncor.test(Dataset$age_pr, Dataset$Ext_CZ) # *\n\nplot(Dataset$DoB, Dataset$Ext_CZ)\nplot(Dataset$age, Dataset$Ext_CZ)\nplot(Dataset$age_pr_adj, Dataset$Ext_CZ)\n\nlibrary(psych)\n\ncorr.test(as.matrix(Dataset[,c(73:78)]),as.matrix(as.numeric(Dataset$DoB)), \n          method = \"pearson\", adjust='holm'\n          , ci=TRUE)\n# Dom, Neu, Opn, Ext\n# as of 28/03/16, with 529 data points, all are sig\n\n\n### Residual EN correlations\n\ncorr.test(as.matrix(datX[,c(101:106)]), as.matrix(as.numeric(datX$DoB)),\n          method = \"pearson\", adjust='holm'\n          , ci=TRUE)\n\n\n### Residual LM correlations (informed by stability)\n\ncorr.test(as.matrix(datX[,c('D.r2.DoB','C.r.DoB','A.r.DoB',\n                    'N.r1.DoB','O.r1.DoB','E.r2.DoB')]), \n          as.matrix(as.numeric(datX$age_pr)),\n          method = \"pearson\", adjust='holm'\n          , ci=TRUE)\n\n\n\n\nplot(Dataset$age_pr, Dataset$DoB-Dataset$age)\n\n\nplot(Dataset$Ext_CZ, Dataset$Ext_CZ - scale(Dataset$age_pr))\nplot(Dataset$Ext_CZ, Dataset$age_pr - 5 * Dataset$Ext_CZ)\n\n# could one substract the max value to reverse the range?\n\n\n\n# substraction is not quite the right operation\nplot(1/Dataset$age_pr_adj, Dataset$Ext_CZ)\nplot(scale(1/scale(Dataset$age_pr_adj)), Dataset$Ext_CZ)\nplot(Dataset$Ext_CZ-scale(1/scale(Dataset$age_pr_adj)), Dataset$Ext_CZ)\n\n# which of these two?\nplot(Dataset$age_pr_adj, Dataset$Ext_CZ-scale(1/(1 + Dataset$age_pr_adj))) # former, this one\nplot(Dataset$age_pr_adj, scale(1/scale(Dataset$age_pr_adj))-Dataset$Ext_CZ)\n\n# also...\nplot(Dataset$age_pr_adj, Dataset$Ext_CZ-scale(1/as.numeric(year(Dataset$DoB)))) # nope, no good\n\n\n\nView(cbind(Dataset$age_pr_adj, Dataset$Ext_CZ,\n           Dataset$Ext_CZ-scale(1/Dataset$age_pr_adj),\n           scale(1/scale(Dataset$age_pr_adj))-Dataset$Ext_CZ     ))\n\n# division?\nplot(Dataset$Ext_CZ/scale(Dataset$age_pr_adj), Dataset$Ext_CZ)\nplot(Dataset$age_pr_adj, Dataset$Ext_CZ/scale(Dataset$age_pr_adj)) # too condensed\n\nDataset$divE <- scale(Dataset$Ext_CZ/scale(Dataset$age_pr_adj))\n\nfit.e <- lm(Ext_CZ ~ years(DoB)-age, data=Dataset)\nplot(fit.e)\n\nfit.e <- lm(Ext_CZ ~ age, data=Dataset)\nplot(fit.e)\n\n\nplot(datX$age_pr_adj, datX$Ext_CZ)\nplot(datX$age_pr_adj, datX$E.resid)\n#fit.e2 <- \n\n\n# survfits\n\nlibrary(survival)\nplot(survfit(y ~ age_pr, data=Dataset))\n\nplot(survfit(yLt ~ Ext_CZ, data=datX))\n\n\n\n# Wild vs. Captive \nplot(datX$DoB, datX$origin)\nplot(datX$age_pr_adj, datX$origin)\nplot(datX$age, datX$origin)\n\n\n\n\n\nggsurv <- function(s, CI = 'def', plot.cens = T, surv.col = 'gg.def',\n                   cens.col = 'red', lty.est = 1, lty.ci = 2,\n                   cens.shape = 3, back.white = F, xlab = 'Time',\n                   ylab = 'Survival', main = ''){\n  \n  library(ggplot2)\n  strata <- ifelse(is.null(s$strata) ==T, 1, length(s$strata))\n  stopifnot(length(surv.col) == 1 | length(surv.col) == strata)\n  stopifnot(length(lty.est) == 1 | length(lty.est) == strata)\n  \n  ggsurv.s <- function(s, CI = 'def', plot.cens = T, surv.col = 'gg.def',\n                       cens.col = 'red', lty.est = 1, lty.ci = 2,\n                       cens.shape = 3, back.white = F, xlab = 'Time',\n                       ylab = 'Survival', main = ''){\n    \n    dat <- data.frame(time = c(0, s$time),\n                      surv = c(1, s$surv),\n                      up = c(1, s$upper),\n                      low = c(1, s$lower),\n                      cens = c(0, s$n.censor))\n    dat.cens <- subset(dat, cens != 0)\n    \n    col <- ifelse(surv.col == 'gg.def', 'black', surv.col)\n    \n    pl <- ggplot(dat, aes(x = time, y = surv)) +\n      xlab(xlab) + ylab(ylab) + ggtitle(main) +\n      geom_step(col = col, lty = lty.est)\n    \n    pl <- if(CI == T | CI == 'def') {\n      pl + geom_step(aes(y = up), color = col, lty = lty.ci) +\n        geom_step(aes(y = low), color = col, lty = lty.ci)\n    } else (pl)\n    \n    pl <- if(plot.cens == T & length(dat.cens) > 0){\n      pl + geom_point(data = dat.cens, aes(y = surv), shape = cens.shape,\n                      col = cens.col)\n    } else if (plot.cens == T & length(dat.cens) == 0){\n      stop ('There are no censored observations')\n    } else(pl)\n    \n    pl <- if(back.white == T) {pl + theme_bw()\n    } else (pl)\n    pl\n  }\n  \n  ggsurv.m <- function(s, CI = 'def', plot.cens = T, surv.col = 'gg.def',\n                       cens.col = 'red', lty.est = 1, lty.ci = 2,\n                       cens.shape = 3, back.white = F, xlab = 'Time',\n                       ylab = 'Survival', main = '') {\n    n <- s$strata\n    \n    groups <- factor(unlist(strsplit(names\n                                     (s$strata), '='))[seq(2, 2*strata, by = 2)])\n    gr.name <-  unlist(strsplit(names(s$strata), '='))[1]\n    gr.df <- vector('list', strata)\n    ind <- vector('list', strata)\n    n.ind <- c(0,n); n.ind <- cumsum(n.ind)\n    for(i in 1:strata) ind[[i]] <- (n.ind[i]+1):n.ind[i+1]\n    \n    for(i in 1:strata){\n      gr.df[[i]] <- data.frame(\n        time = c(0, s$time[ ind[[i]] ]),\n        surv = c(1, s$surv[ ind[[i]] ]),\n        up = c(1, s$upper[ ind[[i]] ]),\n        low = c(1, s$lower[ ind[[i]] ]),\n        cens = c(0, s$n.censor[ ind[[i]] ]),\n        group = rep(groups[i], n[i] + 1))\n    }\n    \n    dat <- do.call(rbind, gr.df)\n    dat.cens <- subset(dat, cens != 0)\n    \n    pl <- ggplot(dat, aes(x = time, y = surv, group = group)) +\n      xlab(xlab) + ylab(ylab) + ggtitle(main) +\n      geom_step(aes(col = group, lty = group))\n    \n    col <- if(length(surv.col == 1)){\n      scale_colour_manual(name = gr.name, values = rep(surv.col, strata))\n    } else{\n      scale_colour_manual(name = gr.name, values = surv.col)\n    }\n    \n    pl <- if(surv.col[1] != 'gg.def'){\n      pl + col\n    } else {pl + scale_colour_discrete(name = gr.name)}\n    \n    line <- if(length(lty.est) == 1){\n      scale_linetype_manual(name = gr.name, values = rep(lty.est, strata))\n    } else {scale_linetype_manual(name = gr.name, values = lty.est)}\n    \n    pl <- pl + line\n    \n    pl <- if(CI == T) {\n      if(length(surv.col) > 1 && length(lty.est) > 1){\n        stop('Either surv.col or lty.est should be of length 1 in order\n             to plot 95% CI with multiple strata')\n      }else if((length(surv.col) > 1 | surv.col == 'gg.def')[1]){\n        pl + geom_step(aes(y = up, color = group), lty = lty.ci) +\n          geom_step(aes(y = low, color = group), lty = lty.ci)\n      } else{pl +  geom_step(aes(y = up, lty = group), col = surv.col) +\n          geom_step(aes(y = low,lty = group), col = surv.col)}\n    } else {pl}\n    \n    \n    pl <- if(plot.cens == T & length(dat.cens) > 0){\n      pl + geom_point(data = dat.cens, aes(y = surv), shape = cens.shape,\n                      col = cens.col)\n    } else if (plot.cens == T & length(dat.cens) == 0){\n      stop ('There are no censored observations')\n    } else(pl)\n    \n    pl <- if(back.white == T) {pl + theme_bw()\n    } else (pl)\n    pl\n  }\n  pl <- if(strata == 1) {ggsurv.s(s, CI , plot.cens, surv.col ,\n                                  cens.col, lty.est, lty.ci,\n                                  cens.shape, back.white, xlab,\n                                  ylab, main)\n  } else {ggsurv.m(s, CI, plot.cens, surv.col ,\n                   cens.col, lty.est, lty.ci,\n                   cens.shape, back.white, xlab,\n                   ylab, main)}\n  pl\n}\n",
    "created" : 1459179393768.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2356581260",
    "id" : "C8518756",
    "lastKnownWriteTime" : 1460379245,
    "last_content_update" : 1460379245707,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/plotting.R",
    "project_path" : "plotting.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 14,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}