{
    "contents" : "### Importation and Processing\n\nall <- read.csv(\"long_all.csv\")\n\nall[,c(7:60)] <- lapply((all[,c(7:60)]), as.character)\nall[,c(7:60)] <- lapply((all[,c(7:60)]), as.numeric)\n\nall$status[(all$status == '') & (all$sample == 'AZA')] <- 'Alive'\nall$status[(all$status == 'LTF') & (all$sample == 'AZA')] <- 'rm'\n\nall$status[(all$status == 'LTF') & (all$sample == 'Taronga')] <- 'Alive'\n\nall$status[(all$status == 'LTF') & (all$sample == 'Yerkes')] <- 'Alive'\n\n#levels(all$sample)\n\n# remove the 'rm's until a better situation is realized\nall <- all[!all$status == 'rm',]\n\n\n# Dating shenanigans\n\nall$DoB <- as.Date(all$DoB,format='%m/%d/%Y')\nall$lastDate <- as.Date(all$lastDate, format='%d/%m/%Y')\n\n\n### Ageing\n# ... should also be age at Personality rating\n\n# age at last known date\n#head(all$lastDate - all$DoB)\nall$age = as.numeric(difftime(all$lastDate, all$DoB, units = \"weeks\"))/52.25 \n# The above is super useful. Remember that (it is here).\n\n# making age at DOPR for Yerkes\n# see other files - there may be an issue with death dates overlapping\nall$DOPR = as.Date(all$DOPR,format='%m/%d/%Y')\nall$DOPR2 = as.Date(all$DOPR2,format='%m/%d/%Y')\nall$DOPRmin = pmin(all$DOPR, all$DOPR2, na.rm = TRUE)\n\n# some death dates cut off\nall$DOPRmin = pmin(all$DOPRmin, all$lastDate)\n\n\nall$age_pr[all$sample == 'Yerkes'] = as.numeric(difftime(\n  all$DOPRmin[all$sample == 'Yerkes'], all$DoB[all$sample == 'Yerkes'], units = \"weeks\"))/52.25 \n\nlibrary(lubridate)\nall$DOPRmin[(all$sample == 'AZA') | (all$sample == 'Taronga')] <- \n  all$DoB[(all$sample == 'AZA') | (all$sample == 'Taronga')] + all$age_pr[(all$sample == 'AZA') | (all$sample == 'Taronga')]\n\nyr = year(all$DoB[(all$sample == 'AZA') | (all$sample == 'Taronga')]) +\n  all$age_pr[(all$sample == 'AZA') | (all$sample == 'Taronga')]\n\nall$DOPRmin[(all$sample == 'AZA') | (all$sample == 'Taronga')] <- (as.Date(date_decimal(yr)))\n\n# Some animals died before being rated.\n# Test: moving their rating date to a month or year back from DoD\n\nall$age_pr_adj = all$age_pr\nall$age_pr_adj[all$age <= all$age_pr & (all$sample %in% c('Taronga', 'Yerkes', 'AZA'))] <-\n  (all$age_pr_adj[all$age <= all$age_pr & (all$sample %in% c('Taronga', 'Yerkes', 'AZA'))] - 5)\n\n\n### Origin\nall$origin[all$sample == 'AZA' & all$origin == 'UNKNOWN'] <- 'CAPTIVE' # is this appropriate?\n\nall$origin[(all$sample == 'Yerkes' | all$sample == 'Taronga') & all$origin == ''] <- 'CAPTIVE'\nall$origin[(all$sample == 'Yerkes' | all$sample == 'Taronga') & all$origin == 'W'] <- 'WILD'\n\ntable(all$origin)\n# library(dplyr) # needed?\nall$origin = droplevels(all$origin)\n\n### Lab vs. Zoo\n\nall$LvZ[all$sample == 'AZA'] <- 'zoo'\nall$LvZ[all$sample == 'Yerkes'] <- 'lab'\nall$LvZ[all$sample == 'Taronga'] <- 'zoo'\n\n###\n# there're rearing styles in the AZA file...\n# and the Yerkes hematology file...\n\n\n\n### creating personality scores\n\n\n# right now this is being applied to all\n# will need to create HPQ composites later\n# and compare the possibilities\n\nall$Dom_CZ <-\n  scale((all$dom-all$subm-all$depd+all$indp-all$fear+all$decs-all$tim-all$caut+\n     all$intll+all$pers+all$buly+all$stngy+40)/12)\n\nall$Ext_CZ <-\n  scale((-all$sol-all$lazy+all$actv+all$play+all$soc-all$depr+all$frdy+all$affc+all$imit+24)/9)\n\nall$Con_CZ <-\n  scale((-all$impl-all$defn-all$reckl-all$errc-all$irri+all$pred-all$aggr-all$jeals-all$dsor+64)/9)\n\nall$Agr_CZ <-\n  scale((all$symp+all$help+all$sens+all$prot+all$gntl)/5)\n\nall$Neu_CZ <-\n  scale((-all$stbl+all$exct-all$unem+16)/3)\n\nall$Opn_CZ <-\n  scale((all$inqs+all$invt)/2)\n\n\n### Regression prepping\n\n# formerly at beginning of analysis scripts\n\nlibrary(survival)\n\nDataset <- all[(all$sample == 'AZA') \n               | (all$sample == 'Yerkes') | (all$sample == 'Taronga'),]\n\nDataset$origin <- droplevels(Dataset$origin)\n\n# RIGHT censoring - matching 'time' and 'event'\n\nlevels(Dataset$status)[levels(Dataset$status)==\"Death\"] <- 1\nlevels(Dataset$status)[levels(Dataset$status)==\"Alive\"] <- 0\n\ny <- Surv(as.numeric(Dataset$lastDate),Dataset$status)\n\n\n# adding LEFT truncation\n\n# currently optional - my attempt to control for age effects within E\nDataset$adjE <- scale(Dataset$Ext_CZ-scale(1/(1 + Dataset$age_pr_adj)))\n# and now O\nDataset$adjO <- scale(Dataset$Opn_CZ-scale(1/(1 + Dataset$age_pr_adj)))\n# hell, what if we do it for all of them?\nDataset$adjD <- scale(Dataset$Dom_CZ-scale(1/(1 + Dataset$age_pr_adj)))\nDataset$adjC <- scale(Dataset$Con_CZ-scale(1/(1 + Dataset$age_pr_adj)))\nDataset$adjA <- scale(Dataset$Agr_CZ-scale(1/(1 + Dataset$age_pr_adj)))\nDataset$adjN <- scale(Dataset$Neu_CZ-scale(1/(1 + Dataset$age_pr_adj)))\n### LOOK ABOVE\n\n\n## what OTHER adjustments to E should be here?\n\n\n#y.Ltrunc <- Surv(as.numeric(Dataset$DOPRmin), as.numeric(Dataset$lastDate),Dataset$status ,\n#                 type='counting')\ny.Ltrunc <- Surv(Dataset$age_pr_adj, Dataset$age,Dataset$status,\n                 type='counting')\n\n# attr(y.Ltrunc, 'type') <- 'counting' # this is needed to be able to handle Cox\n\nrmNAs = !is.na(y.Ltrunc)\n\nyLt = y.Ltrunc[rmNAs]\n#attr(y.Ltrunc, 'type')\n#attr(yLt, 'type')\ndatX = Dataset[rmNAs,]\n\n# need to do something about Tara -> IMPUTE?\n  # Alex says replace with 4's\n#which(datX$chimp == 'Tara')\ndatX <- datX[-353,]\nyLt <- yLt[-353]\n\n### P dimensions confounded with age\n\nlibrary(bbmle)\n\n## Extraversion\n\nfit.e0 <- lm(Ext_CZ ~ 1, data=datX)\n# residual entry for quadratic, cubic regs:\nfit.e1 <- lm(Ext_CZ ~ scale(age_pr_adj), data=datX)\nfit.e2 <- lm(Ext_CZ ~ scale(age_pr_adj) + I(scale(age_pr_adj)^2), data=datX)\ndatX$E.resid2 <- fit.e2$residuals\nfit.e3 <- lm(Ext_CZ ~ scale(age_pr_adj) + I(scale(age_pr_adj)^2) + I(scale(age_pr_adj)^3), data=datX)\ndatX$E.resid3 <- fit.e3$residuals\n\nanova(fit.e1,fit.e2,fit.e3)\n\n# DoB based?\nfit.e1.DoB <- lm(Ext_CZ ~ scale(DoB), data=datX)\nfit.e2.DoB <- lm(Ext_CZ ~ scale(DoB) + I(scale(DoB)^2), data=datX) # this seems to be the best (see anova)\nfit.e3.DoB <- lm(Ext_CZ ~ scale(DoB) + I(scale(DoB)^2) + I(scale(DoB)^3), data=datX) # No, this is best (see AIC)\n\nanova(fit.e0,fit.e1.DoB,fit.e2.DoB,fit.e3.DoB)\n#anova(fit.e1,fit.e2,fit.e3,fit.e1.DoB,fit.e2.DoB,fit.e3.DoB)\n\nAICctab(fit.e0,fit.e1.DoB,fit.e2.DoB,fit.e3.DoB #,fit.e1,fit.e2,fit.e3,\n       ,logLik=T,weights=T,base=T,delta=T)\n\ndatX$E.r3.DoB <- fit.e3.DoB$residuals\n  datX$E.r3 <- fit.e3$residuals\n\n\n# what do these residuals look like?\n\nplot(datX$Ext_CZ, datX$E.r3.DoB)\nplot(datX$age_pr_adj, datX$E.r3.DoB)\n\nplot(datX$Ext_CZ, datX$E.resid3)\nplot(datX$age_pr_adj, datX$E.resid3)\n\n\n## Openness\nfit.o0 <- lm(Opn_CZ ~ 1, data=datX)\nfit.o1 <- lm(Opn_CZ ~ scale(age_pr_adj), data=datX)\nfit.o2 <- lm(Opn_CZ ~ scale(age_pr_adj) + I(scale(age_pr_adj)^2), data=datX)\nfit.o3 <- lm(Opn_CZ ~ scale(age_pr_adj) + I(scale(age_pr_adj)^2) + I(scale(age_pr_adj)^3), data=datX)\nfit.o1.DoB <- lm(Opn_CZ ~ scale(DoB), data=datX)\nfit.o2.DoB <- lm(Opn_CZ ~ scale(DoB) + I(scale(DoB)^2), data=datX) # this one\nfit.o3.DoB <- lm(Opn_CZ ~ scale(DoB) + I(scale(DoB)^2) + I(scale(DoB)^3), data=datX) \n\nAICctab(fit.o0,fit.o1.DoB,fit.o2.DoB,fit.o3.DoB #, fit.o1,fit.o2,fit.o3\n       , logLik=T,weights=T,base=T,delta=T)\n\nanova(fit.o1,fit.o2,fit.o3,fit.o1.DoB,fit.o2.DoB,fit.o3.DoB)\n\n\ndatX$O.r2.DoB <- fit.o2.DoB$residuals\n  datX$O.r2 <- fit.o2$residuals\n\n\n## Dominance\n\nfit.d0 <- lm(Dom_CZ ~ 1, data=datX)\nfit.d1 <- lm(Dom_CZ ~ scale(age_pr_adj), data=datX)\nfit.d2 <- lm(Dom_CZ ~ scale(age_pr_adj) + I(scale(age_pr_adj)^2), data=datX)\nfit.d3 <- lm(Dom_CZ ~ scale(age_pr_adj) + I(scale(age_pr_adj)^2) + I(scale(age_pr_adj)^3), data=datX)\nfit.d1.DoB <- lm(Dom_CZ ~ scale(DoB), data=datX)\nfit.d2.DoB <- lm(Dom_CZ ~ scale(DoB) + I(scale(DoB)^2), data=datX) \nfit.d3.DoB <- lm(Dom_CZ ~ scale(DoB) + I(scale(DoB)^2) + I(scale(DoB)^3), data=datX) # looks like here again\n\nAICctab(fit.d0, fit.d1.DoB,fit.d2.DoB,fit.d3.DoB #,fit.d1,fit.d2,fit.d3\n       ,logLik=T,weights=T,base=T,delta=T)\n\nanova(fit.d0, fit.d1,fit.d2,fit.d3,fit.d1.DoB,fit.d2.DoB,fit.d3.DoB)\n\n\n#datX$D.r2.DoB <- fit.d2.DoB$residuals\ndatX$D.r3.DoB <- fit.d3.DoB$residuals\n  datX$D.r3 <- fit.d3$residuals\n\n\n## Neuroticism\n\nfit.n0 <- lm(Neu_CZ ~ 1, data=datX)\nfit.n1 <- lm(Neu_CZ ~ scale(age_pr_adj), data=datX)\nfit.n2 <- lm(Neu_CZ ~ scale(age_pr_adj) + I(scale(age_pr_adj)^2), data=datX)\nfit.n3 <- lm(Neu_CZ ~ scale(age_pr_adj) + I(scale(age_pr_adj)^2) + I(scale(age_pr_adj)^3), data=datX)\nfit.n1.DoB <- lm(Neu_CZ ~ scale(DoB), data=datX) # This one\nfit.n2.DoB <- lm(Neu_CZ ~ scale(DoB) + I(scale(DoB)^2), data=datX)\nfit.n3.DoB <- lm(Neu_CZ ~ scale(DoB) + I(scale(DoB)^2) + I(scale(DoB)^3), data=datX)\n\nAICctab(fit.n0, fit.n1.DoB,fit.n2.DoB,fit.n3.DoB #,fit.n1,fit.n2,fit.n3,\n       ,logLik=T,weights=T,base=T,delta=T)\n\nanova(fit.n0, fit.n1,fit.n2,fit.n3,fit.n1.DoB,fit.n2.DoB,fit.n3.DoB)\n\n\ndatX$N.r1.DoB <- fit.n1.DoB$residuals\ndatX$N.r1 <- fit.n1$residuals\n\n# stop indendation\n\n\n  \n\n  \n  \n\n\n# let's try a LASSO...\n\nlibrary(glmnet)\n# see also chimpAnalyses.R\n\nnetform = data.frame(cbind(scale(datX$DoB),\n                scale(datX$DoB)^2,\n                scale(datX$DoB)^3))\ncolnames(netform) = c(\"DoB1\",\"DoB2\",\"DoB3\") \n  \nrmatx = model.matrix( ~ DoB1 + DoB2 + DoB3 - 1, netform)\n\nlasso.rE = glmnet(rmatx, datX$Ext_CZ, #grouped=FALSE\n                 )\nlasso.rE.cv = cv.glmnet(rmatx, datX$Ext_CZ)\n\nplot(lasso.rE.cv)\n\nplot(lasso.rE, label=T)\nplot(lasso.rE, xvar=\"lambda\", label=T)  \nplot(lasso.rE, xvar=\"dev\", label=T) \n\ncoef(lasso.rE, s=lasso.rE.cv$lambda.1se\n)\n# well, this says to leave out the cubic\n\n\nlasso.rD = glmnet(rmatx, datX$Dom_CZ)\nlasso.rD.cv = cv.glmnet(rmatx, datX$Dom_CZ)\nplot(lasso.rD, label=T)\ncoef(lasso.rD, s=lasso.rD.cv$lambda.1se)\n\n\nlasso.rO = glmnet(rmatx, datX$Opn_CZ)\nlasso.rO.cv = cv.glmnet(rmatx, datX$Opn_CZ)\nplot(lasso.rO, label=T)\ncoef(lasso.rO, s=lasso.rO.cv$lambda.1se)\n\n\nlasso.rN = glmnet(rmatx, datX$Neu_CZ)\nlasso.rN.cv = cv.glmnet(rmatx, datX$Neu_CZ)\nplot(lasso.rN, label=T)\nplot(lasso.rN.cv)\ncoef(lasso.rN, s=lasso.rN.cv$lambda.1se)\n",
    "created" : 1448268337902.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "603210421",
    "id" : "DE0CD847",
    "lastKnownWriteTime" : 1448907234,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/importProcess.R",
    "project_path" : "importProcess.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}