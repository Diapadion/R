{
    "collab_server" : "",
    "contents" : "# This is an attempt to figure out what the fuck went wrong\n\n### Importation and Processing\n\nall <- read.csv(\"long_all.csv\")\n# cutting off the bottom\nall <- all[-c(558:dim(all)[1]),]\n\n# removing row at 378, where the questionnaire changes\nall <- all[-378,]\n\nall[,c(7:60)] <- lapply((all[,c(7:60)]), as.character)\nall[,c(7:60)] <- lapply((all[,c(7:60)]), as.numeric)\n\nall$status[(all$status == '') & (all$sample == 'AZA')] <- 'Alive'\nall$status[(all$status == 'LTF') & (all$sample == 'AZA')] <- 'rm'\n\nall$status[(all$status == 'LTF') & (all$sample == 'Taronga')] <- 'Alive'\n\nall$status[(all$status == 'LTF') & (all$sample == 'Yerkes')] <- 'Alive'\n\nall$status[(all$status == 'dead') & (all$sample == 'Japan')] <- 'Death'\nall$status[(all$status == 'alive') & (all$sample == 'Japan')] <- 'Alive'\n\n# just for Bram - what out for the number\nall$status[535] <- 'Alive'\n\n# for frailty purposes, we want to make Taronga part of AZA\n#all$sample[all$sample=='Taronga'] = 'AZA'\n\n#levels(all$sample)\n\n# remove the 'rm's until a better situation is realized\n### TODO: come up with a better alternative\nall <- all[!all$status == 'rm',]\n\n\n# Dating shenanigans\n\nall$DoB <- as.Date(all$DoB,format='%m/%d/%Y')\nall$lastDate <- as.Date(all$lastDate, format='%d/%m/%Y')\n\n\n### Ageing\n# ... should also be age at Personality rating\n\n# age at last known date\n#head(all$lastDate - all$DoB)\nall$age = as.numeric(difftime(all$lastDate, all$DoB, units = \"weeks\"))/52.25 \n# The above is super useful. Remember that (it is here).\n\n# making age at DOPR for Yerkes & Edinburgh\n# see other files - there may be an issue with death dates overlapping\n# all$DOPR = as.Date(all$DOPR,format='%m/%d/%Y')\n# all$DOPR2 = as.Date(all$DOPR2,format='%m/%d/%Y')\n# all$DOPRmin = pmin(all$DOPR, all$DOPR2, na.rm = TRUE)\n# \n# # some death dates cut off\n# # all$DOPRmin = pmin(all$DOPRmin, all$lastDate) # this was a PROBLEM\n# \n# ### TODO: set a cut-off for the rating/death date\n# \n# \n# \n# ind = all$sample == 'Yerkes' | all$sample == 'Edinburgh'\n# \n# all$age_pr[ind] = as.numeric(difftime(\n#   all$DOPRmin[ind], all$DoB[ind], units = \"weeks\"))/52.25 \n# \n# library(lubridate)\n# all$DOPRmin[(all$sample == 'AZA') | (all$sample == 'Taronga')] <- \n#   all$DoB[(all$sample == 'AZA') | (all$sample == 'Taronga')] + all$age_pr[(all$sample == 'AZA') | (all$sample == 'Taronga')]\n# \n# yr = year(all$DoB[(all$sample == 'AZA') | (all$sample == 'Taronga')]) +\n#   all$age_pr[(all$sample == 'AZA') | (all$sample == 'Taronga')]\n# \n# all$DOPRmin[(all$sample == 'AZA') | (all$sample == 'Taronga')] <- (as.Date(date_decimal(yr)))\n# \n# # Some animals died before being rated.\n# # Test: moving their rating date to a month or year back from DoD\n# \n# all$age_pr_adj = all$age_pr\n# all$age_pr_adj[all$age <= all$age_pr & (all$sample %in% c('Taronga', 'Yerkes', 'AZA'))] <-\n#   (all$age_pr_adj[all$age <= all$age_pr & (all$sample %in% c('Taronga', 'Yerkes', 'AZA'))] - 5)\n\n\n### Origin\n# are these appropriate?\n# all$origin[all$sample == 'AZA' & all$origin == 'UNKNOWN'] <- #'CAPTIVE' \n# \n# all$origin[(all$sample == 'Yerkes' | all$sample == 'Taronga') & all$origin == ''] <- 'CAPTIVE'\n# all$origin[(all$sample == 'Yerkes' | all$sample == 'Taronga') & all$origin == 'W'] <- 'WILD'\nall$origin[all$origin == ''] <- 'CAPTIVE'\nall$origin[all$origin == 'W'] <- 'WILD'\n\ntable(all$origin)\n# library(dplyr) # needed?\nall$origin = droplevels(all$origin)\n\n### Lab vs. Zoo\n\nall$LvZ[all$sample == 'AZA'] <- 'zoo'\nall$LvZ[all$sample == 'Yerkes'] <- 'lab'\nall$LvZ[all$sample == 'Taronga'] <- 'zoo'\n\n###\n# there're rearing styles in the AZA file...\n# and the Yerkes hematology file...\n\n\n\n### creating personality scores\n\n\n# right now this is being applied to all\n# will need to create HPQ composites later\n# and compare the possibilities\n\n\nall$Dom = NA\nall$Ext = NA\nall$Con = NA\nall$Agr = NA\nall$Neu = NA\nall$Opn = NA\n\n\nind = (all$sample == 'AZA' | all$sample == 'Yerkes' | all$sample == 'Taronga')\n\nall[ind,]$Dom <-\n  (all[ind,]$dom-all[ind,]$subm-all[ind,]$depd+all[ind,]$indp-all[ind,]$fear+all[ind,]$decs\n   -all[ind,]$tim-all[ind,]$caut+all[ind,]$intll+all[ind,]$pers+all[ind,]$buly+all[ind,]$stngy+40)/12\n\nall[ind,]$Ext <-\n  (-all[ind,]$sol-all[ind,]$lazy-all[ind,]$depr\n   +all[ind,]$actv+all[ind,]$play+all[ind,]$soc+all[ind,]$frdy+all[ind,]$affc+all[ind,]$imit+24)/9\n\nall[ind,]$Con <-\n  (-all[ind,]$impl-all[ind,]$defn-all[ind,]$reckl-all[ind,]$errc-all[ind,]$irri\n   +all[ind,]$pred-all[ind,]$aggr-all[ind,]$jeals-all[ind,]$dsor+64)/9\n\nall[ind,]$Agr <-\n  (all[ind,]$symp+all[ind,]$help+all[ind,]$sens+all[ind,]$prot+all[ind,]$gntl)/5\n\nall[ind,]$Neu <-\n  (-all[ind,]$stbl+all[ind,]$exct-all[ind,]$unem+16)/3\n\nall[ind,]$Opn <-\n  (all[ind,]$inqs+all[ind,]$invt) /2\n\n\n\nind = (all$sample == 'Japan' | all$sample == 'Edinburgh') \n\nall[ind,]$Dom <-\n  (all[ind,]$dom\n   -all[ind,]$subm\n   -all[ind,]$depd\n   +all[ind,]$indp\n   -all[ind,]$fear\n   +all[ind,]$decs\n   -all[ind,]$tim\n   -all[ind,]$caut\n   +all[ind,]$intll\n   +all[ind,]$pers\n   +all[ind,]$buly\n   +all[ind,]$stngy\n   -all[ind,]$Vuln - all[ind,]$Anx + all[ind,]$manp + 56)/15\n\nall[ind,]$Ext <-\n  (-all[ind,]$sol-all[ind,]$lazy-all[ind,]$depr\n   +all[ind,]$actv+all[ind,]$play+all[ind,]$soc+all[ind,]$frdy+all[ind,]$affc+all[ind,]$imit\n   -all[ind,]$Indv + 32)/10\n\nall[ind,]$Con <-\n  (-all[ind,]$impl-all[ind,]$defn-all[ind,]$reckl-all[ind,]$errc-all[ind,]$irri\n   +all[ind,]$pred-all[ind,]$aggr-all[ind,]$jeals-all[ind,]$dsor\n   - all[ind,]$Thot - all[ind,]$Dist - all[ind,]$Unper - all[ind,]$Quit - all[ind,]$clmy + 104)/14\n\nall[ind,]$Agr <-\n  (all[ind,]$symp+all[ind,]$help+all[ind,]$sens+all[ind,]$prot+all[ind,]$gntl\n   + all[ind,]$Conv)/6\n\nall[ind,]$Neu <-\n  (-all[ind,]$stbl+all[ind,]$exct-all[ind,]$unem\n   - all[ind,]$Cool + all[ind,]$aut + 24)/5\n\nall[ind,]$Opn <-\n  (all[ind,]$inqs+all[ind,]$invt\n   + all[ind,]$Cur + all[ind,]$Innov) / 4\n\n\n# Scale each dimension across all chimps\nall$Dom_CZ <- scale(all$Dom)\nall$Ext_CZ <- scale(all$Ext)\nall$Con_CZ <- scale(all$Con)\nall$Agr_CZ <- scale(all$Agr)\nall$Neu_CZ <- scale(all$Neu)\nall$Opn_CZ <- scale(all$Opn)\n\n# removing individuals who died before rating\nrmovals <- which((all$age - all$age_pr) < 0.0)   # 29, 505, ++...\n# is 0 enough, or do we need a buffer?\nall <- (all[-c(rmovals),])\n\n\n\n### Regression prepping\n\n# formerly at beginning of analysis scripts\n\nlibrary(survival)\n\n# Dataset <- all[(all$sample == 'AZA') \n#                | (all$sample == 'Yerkes') | (all$sample == 'Taronga'),]\n### !!!\n### something is going wrong with the regressions since adding all the new data\n#Dataset <- all[all$sample == 'Yerkes',]\nDataset = all[sample(nrow(all), 200), ]\n#Dataset <- all\n\n\nDataset$origin <- droplevels(Dataset$origin)\n\n# RIGHT censoring - matching 'time' and 'event'\n\nlevels(Dataset$status)[levels(Dataset$status)==\"Death\"] <- 1\nlevels(Dataset$status)[levels(Dataset$status)==\"Alive\"] <- 0\n\n\n\n\ny <- Surv(as.numeric(Dataset$DoB),Dataset$status)\n\n\n# adding LEFT truncation\n\n## what OTHER adjustments to E should be here?\n\n\n#y.Ltrunc <- Surv(as.numeric(Dataset$DOPRmin), as.numeric(Dataset$lastDate),Dataset$status ,\n#                 type='counting')\ny.Ltrunc <- Surv(Dataset$age_pr, Dataset$age,Dataset$status,  # previously age_pr_adj\n                 type='counting')\n\n# attr(y.Ltrunc, 'type') <- 'counting' # this is needed to be able to handle Cox\n\nrmNAs = !is.na(y.Ltrunc)\n\nyLt = y.Ltrunc[rmNAs]\n#attr(y.Ltrunc, 'type')\n#attr(yLt, 'type')\ndatX = Dataset[rmNAs,]\n",
    "created" : 1457980668751.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4267989366",
    "id" : "DE5B1EEB",
    "lastKnownWriteTime" : 1457981220,
    "last_content_update" : 1457981220698,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/REVERSION.R",
    "project_path" : "REVERSION.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}