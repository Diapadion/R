{
    "collab_server" : "",
    "contents" : "# Plots\n\nlibrary(ggplot2)\nlibrary(tidyr)\nlibrary(survival)\nlibrary(grid)\nlibrary(powerSurvEpi)\n\n\n### Power curves\n\nn = 200\npwr.df = data.frame(HR=1:n,Agreeableness=numeric(n),Conscientiousness=numeric(n), Dominance=numeric(n),\n                    Extraversion=numeric(n), Neuroticism=numeric(n), Openness=numeric(n))\nj = 0\nfor (i in  seq(0.01,2, length.out = n)){\n  j = j + 1 \n  pwr.df$HR[j] = i\n  mod = powerEpiCont(formula = (age - age_pr) ~ as.factor(sex) + \n                 as.factor(origin) +  \n                 Dom_CZ + Ext_CZ + Con_CZ +\n                 Agr_CZ + Neu_CZ + Opn_CZ,\n               dat=datX, \n               X1 = Agr_CZ\n               ,failureFlag = datX$status  ,\n               n = 538, theta = i)\n  pwr.df$Agreeableness[j] = mod$power\n  mod = powerEpiCont(formula = (age - age_pr) ~ as.factor(sex) + \n                       as.factor(origin) +  \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ,\n                     dat=datX, X1 = Con_CZ\n                     ,failureFlag = datX$status ,\n                     n = 538, theta = i)\n  pwr.df$Conscientiousness[j] = mod$power\n  mod = powerEpiCont(formula = (age - age_pr) ~ as.factor(sex) + \n                       as.factor(origin) +  \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ,\n                     dat=datX, X1 = Dom_CZ\n                     ,failureFlag = datX$status ,\n                     n = 538, theta = i)\n  pwr.df$Dominance[j] = mod$power\n  mod = powerEpiCont(formula = (age - age_pr) ~ as.factor(sex) + \n                       as.factor(origin) +  \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ,\n                     dat=datX, X1 = Ext_CZ\n                     ,failureFlag = datX$status ,\n                     n = 538, theta = i)\n  pwr.df$Extraversion[j] = mod$power\n  mod = powerEpiCont(formula = (age - age_pr) ~ as.factor(sex) + \n                       as.factor(origin) +  \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ,\n                     dat=datX, X1 = Neu_CZ\n                     ,failureFlag = datX$status ,\n                     n = 538, theta = i)\n  pwr.df$Neuroticism[j] = mod$power\n  mod = powerEpiCont(formula = (age - age_pr) ~ as.factor(sex) + \n                       as.factor(origin) +  \n                       Dom_CZ + Ext_CZ + Con_CZ +\n                       Agr_CZ + Neu_CZ + Opn_CZ,\n                     dat=datX, X1 = Opn_CZ\n                     ,failureFlag = datX$status ,\n                     n = 538, theta = i)\n  pwr.df$Openness[j] = mod$power\n  \n}\npdx = gather(pwr.df, Personality, Power, Agreeableness:Openness)\n\npwr.p = ggplot(pdx, aes(x = HR, y= Power, color = Personality)) +\n  geom_line(size = 2) + theme_bw() + facet_wrap(facets = 'Personality') + theme(legend.position=\"none\")\n\npwr.p  \n\n\n\npdx = gather(datX, Personality, Measurement, Dom:Opn)\n\n### beans of their personalities\n\nvpers<-data.frame(Sample=character(),Dimension=character(),Score=numeric(), Sex=factor)\nvpers<-pdx[,c(98,99,2)]\ncolnames(vpers) = c('Dimension','Score','Sex')\n\n\nlibrary(beanplot)\n\nsvg(filename=\"PersCCACE.svg\",            \n    width=10, \n    height=8, \n    pointsize=12,\n    bg='white')\n# par(mfrow=c(2,3),\n#     oma = c(5,4,0,0) + 0.3,\n#     mar = c(0,0,1,1) + 0.5)\nbeanpersD <- with(data=vpers, beanplot(Score ~ Sex * Dimension, side = 'both',  cutmax = 7, cutmin = 1, #bw = 0.3,\n                                                                      overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                      col = list('salmon3','salmon1','gold3','gold1','green4','green2',\n                                                                        \"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\"),\n                                                                      main='Personality Distributions', show.names=TRUE)\n)\n\nbeanpersA <- with(data=vpers[vpers$Dimension=='Agreeableness',], beanplot(Score, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                                                                          overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                          col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\"),\n                                                                          main='Agreeableness' , show.names=FALSE \n)\n)\nbeanpersN <- with(data=vpers[vpers$Dimension=='Neuroticism',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                                                                        overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                        col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\"),\n                                                                        main='Neuroticism' , show.names=FALSE)\n)\nbeanpersO <- with(data=vpers[vpers$Dimension=='Openness',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                                                                     overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                     col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\"),\n                                                                     main='Openness' \n))\n\nbeanpersC <- with(data=vpers[vpers$Dimension=='Conscientiousness',], beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                                                                              overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                                                                              col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\")\n                                                                              , main='Conscientiousness'\n)\n)\n\nbeanpersE <- with(data=vpers[vpers$Dimension=='Extraversion',], \n                  beanplot(Score ~ Sex * Sample, side = 'both', bw = 0.3, cutmax = 4, cutmin = 1,\n                           overallline = \"median\", beanlines = 'median', what = c(0,1,1,0), boxwex=0.9,\n                           col = list(\"cadetblue3\", \"cadetblue1\", \"royalblue3\", \"royalblue1\",\"slateblue\",\"slateblue1\")\n                           , main='Extraversion' #, yaxt=''\n                  ))\ndev.off()\n\n\n### Deaths \n\nggplot(data=datX, aes(age_pr)) + geom_histogram(binwidth=3) +\n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Personality Rating')\n\nggplot(data=datX[datX$stat.log==T,], aes(age)) + geom_histogram(binwidth=3) +\n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Death')\n  \n\n\n### personality all on one plot\n\n\n\n\n### age * pers issues\n\npdx = gather(datX, Personality, Measurement, Dom:Opn)\npdx$Personality <- as.factor(pdx$Personality)\nlevels(pdx$Personality) <- c('Agreeableness','Conscientiousness','Dominance','Extraversion','Neuroticism','Openness')\n\np <- ggplot(pdx, aes(age_pr, Measurement, colour = factor(Personality))) + geom_point() + \n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Personality Rating')\n\np + facet_wrap(~ Personality, nrow = 2)\n\n\n# LASSO adjusted\npdx = gather(datX, Personality, Measurement, N.cv.r:O.cv.r)\n\np <- ggplot(pdx, aes(age_pr, Measurement, colour = factor(Personality))) + geom_point() + \n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Personality Rating')\n\np + facet_wrap(~ Personality, nrow = 2)\n\n\n### after correction\n\npdx = gather(datX, Personality, Measurement, c(87:90))\n\np <- ggplot(pdx, aes(age_pr, Measurement, colour = factor(Personality))) + geom_point() + \n  theme_bw() + theme(legend.position=\"none\") + labs(x='Age at Personality Rating')\n\np + facet_wrap(~ Personality)\n\n\n\n####### OLD ##########\n\n\nplot(Dataset$Ext_CZ ~ Dataset$status)\n\nplot(Dataset$Dom_CZ ~ Dataset$status)\n\n\nplot(Dataset$origin ~ Dataset$status)\nplot(Dataset$age ~ Dataset$origin)\n\n# plot(Ext_CZ ~ age_pr, data=datX)\nplot(Dom_CZ ~ age_pr, data=datX)\nplot(Neu_CZ ~ age_pr, data=datX)\nplot(Opn_CZ ~ age_pr, data=datX)\n\n\nplot(Dataset$age_pr, Dataset$Agr_CZ)\ncor.test(Dataset$age_pr, Dataset$Agr_CZ)\n\nplot(Dataset$age_pr, Dataset$Dom_CZ)\ncor.test(Dataset$age_pr, Dataset$Dom_CZ) # *\n\nplot(Dataset$age_pr, Dataset$Opn_CZ)\ncor.test(Dataset$age_pr, Dataset$Opn_CZ) # **\n\nplot(Dataset$age_pr, Dataset$Con_CZ)\ncor.test(Dataset$age_pr, Dataset$Con_CZ)\n\nplot(Dataset$age_pr, Dataset$Neu_CZ)\ncor.test(Dataset$age_pr, Dataset$Neu_CZ) # *\n\nplot(Dataset$age_pr, Dataset$Ext_CZ)\ncor.test(Dataset$age_pr, Dataset$Ext_CZ) # *\n\nplot(Dataset$DoB, Dataset$Ext_CZ)\nplot(Dataset$age, Dataset$Ext_CZ)\nplot(Dataset$age_pr_adj, Dataset$Ext_CZ)\n\nlibrary(psych)\n\npxt.cors = corr.test(as.matrix(Dataset[,c(73:78)]),as.matrix(as.numeric(Dataset$DoB)), \n          method = \"spearman\", adjust='bonferroni'\n          , ci=TRUE)\ncor.ci(cbind(as.matrix(Dataset[,c(73:78)]),as.matrix(as.numeric(Dataset$DoB))),\n       method = 'spearman', plot=T)\n# Dom, Neu, Opn, Ext\n# as of 28/03/16, with 529 data points, all are sig\n\n\n### Residual EN correlations\n\ncorr.test(as.matrix(datX[,c(101:106)]), as.matrix(as.numeric(datX$DoB)),\n          method = \"pearson\", adjust='holm'\n          , ci=TRUE)\n\n\n### Residual LM correlations (informed by stability)\n\ncorr.test(as.matrix(datX[,c('D.r2.DoB','C.r.DoB','A.r.DoB',\n                    'N.r1.DoB','O.r1.DoB','E.r2.DoB')]), \n          as.matrix(as.numeric(datX$age_pr)),\n          method = \"pearson\", adjust='holm'\n          , ci=TRUE)\n\n\n\n\nplot(Dataset$age_pr, Dataset$DoB-Dataset$age)\n\n\nplot(Dataset$Ext_CZ, Dataset$Ext_CZ - scale(Dataset$age_pr))\nplot(Dataset$Ext_CZ, Dataset$age_pr - 5 * Dataset$Ext_CZ)\n\n# could one substract the max value to reverse the range?\n\n\n\n# substraction is not quite the right operation\nplot(1/Dataset$age_pr_adj, Dataset$Ext_CZ)\nplot(scale(1/scale(Dataset$age_pr_adj)), Dataset$Ext_CZ)\nplot(Dataset$Ext_CZ-scale(1/scale(Dataset$age_pr_adj)), Dataset$Ext_CZ)\n\n# which of these two?\nplot(Dataset$age_pr_adj, Dataset$Ext_CZ-scale(1/(1 + Dataset$age_pr_adj))) # former, this one\nplot(Dataset$age_pr_adj, scale(1/scale(Dataset$age_pr_adj))-Dataset$Ext_CZ)\n\n# also...\nplot(Dataset$age_pr_adj, Dataset$Ext_CZ-scale(1/as.numeric(year(Dataset$DoB)))) # nope, no good\n\n\n\nView(cbind(Dataset$age_pr_adj, Dataset$Ext_CZ,\n           Dataset$Ext_CZ-scale(1/Dataset$age_pr_adj),\n           scale(1/scale(Dataset$age_pr_adj))-Dataset$Ext_CZ     ))\n\n# division?\nplot(Dataset$Ext_CZ/scale(Dataset$age_pr_adj), Dataset$Ext_CZ)\nplot(Dataset$age_pr_adj, Dataset$Ext_CZ/scale(Dataset$age_pr_adj)) # too condensed\n\nDataset$divE <- scale(Dataset$Ext_CZ/scale(Dataset$age_pr_adj))\n\nfit.e <- lm(Ext_CZ ~ years(DoB)-age, data=Dataset)\nplot(fit.e)\n\nfit.e <- lm(Ext_CZ ~ age, data=Dataset)\nplot(fit.e)\n\n\nplot(datX$age_pr_adj, datX$Ext_CZ)\nplot(datX$age_pr_adj, datX$E.resid)\n#fit.e2 <- \n\n\n\n\n\n\n# Wild vs. Captive \nplot(datX$DoB, datX$origin)\nplot(datX$age_pr_adj, datX$origin)\nplot(datX$age, datX$origin)\n\n\n\n",
    "created" : 1490283038014.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2071872804",
    "id" : "62D3DAF1",
    "lastKnownWriteTime" : 1490368888,
    "last_content_update" : 1490368888884,
    "path" : "C:/Users/s1229179/GitHub/R/longevity/plotting.R",
    "project_path" : "plotting.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}