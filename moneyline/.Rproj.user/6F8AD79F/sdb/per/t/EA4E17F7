{
    "contents" : "### team vs. team match-up analysis approach\n#\n\n\nkp14 <- cbind.data.frame(kp14, result=bracket14$Round.1.Results)\n\n\n# this needs to use the unreordered... order\n# to preserve matchings\n\nkp14 <- kp14[match(order14,kp14$Team),]\n\n### now to compute differences\n\nvictDiffs14 <- NULL\n\nfor (i in seq(1,dim(kp14)[1],2)){\n  if (kp14$result[i] == 'W'){\n    kpdat = kp14[i,c(1,5:21)]-kp14[i+1,c(1,5:21)]\n    vdrow = cbind.data.frame(winner=kp14$Team[i], loser=kp14$Team[i+1],kpdat)\n  }\n  else {\n    kpdat = kp14[i+1,c(1,5:21)]-kp14[i,c(1,5:21)]\n    vdrow = cbind.data.frame(winner=kp14$Team[i+1], loser=kp14$Team[i],kpdat)\n  }\n  \n  victDiffs14 <- rbind.data.frame(victDiffs14, vdrow)\n  \n}\n\n\n### some t-tests to see if any of these difference vars differ from null, and by how much\n\nlibrary(lsr)\n# \nt.test(victDiffs14$Pyth) # p < 0.00005\ncohensD(victDiffs14$Pyth) # 0.844\n\nt.test(victDiffs14$AdjO) # p < 0.0002 \ncohensD(victDiffs14$AdjO) # 0.772\n\nt.test(victDiffs14$AdjD) # p < 0.01\ncohensD(victDiffs14$AdjD) # 0.489\n\nt.test(victDiffs14$AdjT) # p = 0.111    \n#cohensD(victDiffs14$AdjT)\n\nt.test(victDiffs14$Luck) # p = 0.9434 ... surprise fucking surprise\n\nt.test(victDiffs14$SoS.Pyth) # p < 0.01\ncohensD(victDiffs14$SoS.Pyth) # 0.506\n\nt.test(victDiffs14$OppO) # p < 0.005\ncohensD(victDiffs14$OppO)\n    \nt.test(victDiffs14$OppD) # p < 0.05\ncohensD(victDiffs14$OppD)\n\nt.test(victDiffs14$NCSoS.Pyth) # p = 0.9116\n\n\n### now model pairwise victory with a glm\n#     select the lower team, and subtract the first\n#     will help pick out some upsets (?)\n\n\nkpDiffs14 <- NULL\n\nfor (i in seq(1,dim(kp14)[1],2)){\n  kpdat = kp14[i+1,c(1,5:21)]-kp14[i,c(1,5:21)]\n  vdrow = cbind.data.frame(ref.team=kp14$Team[i+1], opponent=kp14$Team[i],kpdat,result=kp14$result[i+1])\n    \n  kpDiffs14 <- rbind.data.frame(kpDiffs14, vdrow)\n  \n}\n\ngm.diff14 <- glm(result ~ SoS.Pyth + OppO\n                #  + Pyth + AdjO + AdjD + OppD\n                 #+ AdjT + NCSoS.Pyth\n                 + Rank\n                 , data = kpDiffs14, family = \"binomial\")\n\ngm.diff14.sp <- step(gm.diff14)\n\n#gm.diff14_2 <- glm(result ~ Pyth + AdjO + AdjD + SoS.Pyth + OppO, data = kpDiffs14, family = \"binomial\")\n\ngm.diff14_3 <- glm(result ~ Rank, data=kpDiffs14, family = 'binomial')\n\n- OppO      1   22.749 30.749\n- AdjD      1   24.102 32.102\n- SoS.Pyth  1   25.273 33.273\n- AdjO      1   33.315 41.315\n\n- Pyth      1   13.592 23.592\n- OppD      1   14.780 24.780\n- Rank      1   15.343 25.343\n- SoS.Pyth  1   16.254 26.254\n- OppO      1   16.404 26.404\n\n\n\n# 2013\n\nkp13 <- cbind.data.frame(kp13, result=bracket13$Round.1.Results)\n\n\n# this needs to use the unreordered... order\n# to preserve matchings\n\nkp13 <- kp13[match(order13,kp13$Team),]\n\n### now to compute differences\n\nvictDiffs13 <- NULL\n\nfor (i in seq(1,dim(kp13)[1],2)){\n  if (kp13$result[i] == 'W'){\n    kpdat = kp13[i,c(1,5:21)]-kp13[i+1,c(1,5:21)]\n    vdrow = cbind.data.frame(winner=kp13$Team[i], loser=kp13$Team[i+1],kpdat)\n  }\n  else {\n    kpdat = kp13[i+1,c(1,5:21)]-kp13[i,c(1,5:21)]\n    vdrow = cbind.data.frame(winner=kp13$Team[i+1], loser=kp13$Team[i],kpdat)\n  }\n  \n  victDiffs13 <- rbind.data.frame(victDiffs13, vdrow)\n  \n}\n\nkpDiffs13 <- NULL\n\nfor (i in seq(1,dim(kp13)[1],2)){\n  kpdat = kp13[i+1,c(1,5:21)]-kp13[i,c(1,5:21)]\n  vdrow = cbind.data.frame(ref.team=kp13$Team[i+1], opponent=kp13$Team[i],kpdat,result=kp13$result[i+1])\n  \n  kpDiffs13 <- rbind.data.frame(kpDiffs13, vdrow)\n  \n}\n\ngm.diff13 <- glm(result ~ Rank + Pyth + AdjO + AdjD + AdjT + SoS.Pyth + OppO + OppD + NCSoS.Pyth, data = kpDiffs13, family = \"binomial\")\n\ngm.diff13.sp <- step(gm.diff13)\n\n#gm.diff2 <- glm(result ~ Pyth + AdjO + AdjD + SoS.Pyth + OppO, data = kpDiffs14, family = \"binomial\")\n\n\n\nt.test(victDiffs13$Pyth) # p < 0.005\ncohensD(victDiffs13$Pyth)\n",
    "created" : 1425729742239.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1790170527",
    "id" : "EA4E17F7",
    "lastKnownWriteTime" : 1425850393,
    "path" : "~/GitHub/R/moneyline/matchup.R",
    "project_path" : "matchup.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}