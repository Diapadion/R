{
    "contents" : "### Data import script\n#\n# should be generalizable across files\n# perhaps construct as function...\n\n\nbracket11 <- read.csv('2011.csv')\nbracket12 <- read.csv('2012.csv')\nbracket13 <- read.csv('2013.csv')\nbracket14 <- read.csv('2014.csv')\n\n\nkp14 <- read.csv('KP2014.csv')\nkp11 <- read.csv('KP2011.csv')\nkp13 <- read.csv('KP2013.csv')\n\n\nlibrary(Hmisc)\nlibrary(car)\n\n# strip some stuff out of the KP data\n\n# kp14 <- kp14[grepl(' ',kp14$Team),]\n# \n# c(\"USDZAR Curncy\", \"R157 Govt\", \"SPX Index\")\nkp14$Team = gsub(\"\\\\ [0-9]*$\", \"\", kp14$Team)\n\norder14 = bracket14$Team\n\n\n# tabulate wins for teams\nfor (i in 1 : dim(bracket14)[1]) {\n  ifelse(bracket14$Round.1.Results[i] == 'W', bracket14$wins[i] <- 1, bracket14$wins[i] <- 0)\n}\n\nbracket14$Team.1 <- factor(bracket14$Team.1, levels=levels(bracket14$Team))\nbracket14$Team.2 <- factor(bracket14$Team.2, levels=levels(bracket14$Team))\nbracket14$Team.3 <- factor(bracket14$Team.3, levels=levels(bracket14$Team))\nbracket14$Team.4 <- factor(bracket14$Team.4, levels=levels(bracket14$Team))\nbracket14$Team.5 <- factor(bracket14$Team.5, levels=levels(bracket14$Team))\n\n\n\nfor (j in 1 : dim(bracket14)[1]) {\n  if (bracket14$Round.2.Results[j] == 'W'){\n    inc(bracket14$wins[bracket14$Team.1[j]==bracket14$Team]) <- 1\n  }\n  if (bracket14$Round.3.Results[j] == 'W'){\n    inc(bracket14$wins[bracket14$Team.2[j]==bracket14$Team]) <- 1\n  }\n  if (bracket14$Round.4.Results[j] == 'W'){\n    inc(bracket14$wins[bracket14$Team.3[j]==bracket14$Team]) <- 1\n  }\n  if (bracket14$Round.5.Results[j] == 'W'){\n    inc(bracket14$wins[bracket14$Team.4[j]==bracket14$Team]) <- 1\n  }\n  if (bracket14$Round.6.Results[j] == 'W'){\n    inc(bracket14$wins[bracket14$Team.5[j]==bracket14$Team]) <- 1\n  }\n  \n}\n\n\n\n\n#inc(bracket14$wins[bracket14$Team.1[2]==bracket14$Team])\n\n# sort both df's\n\nkp14 <- kp14[with(kp14, order(kp14$Team)),]\nbracket14 <- bracket14[with(bracket14, order(bracket14$Team)),]\n\nmod14 <- lm(log(bracket14$wins + 1) ~ kp14$Rank + kp14$Pyth + kp14$AdjO #+ kp14$Conf \n           + kp14$X + kp14$AdjD + kp14$X.1 + kp14$AdjT + kp14$X.2 + kp14$Luck + kp14$X.3\n           + kp14$SoS.Pyth + kp14$X.4 + kp14$OppO + kp14$X.5 + kp14$OppD + kp14$X.6\n           + kp14$NCSoS.Pyth + kp14$X.7)\n\n\nmod14.st <- step(mod14)\n\n\n\n#mod2.st <- step(mod2)\n\n\n# 2013\n\nkp13$Team = gsub(\"\\\\ [0-9]*$\", \"\", kp13$Team)\n\norder13 = bracket13$Team\n\n\n# tabulate wins for teams\nfor (i in 1 : dim(bracket13)[1]) {\n  ifelse(bracket13$Round.1.Results[i] == 'W', bracket13$wins[i] <- 1, bracket13$wins[i] <- 0)\n}\n\nbracket13$Team.1 <- factor(bracket13$Team.1, levels=levels(bracket13$Team))\nbracket13$Team.2 <- factor(bracket13$Team.2, levels=levels(bracket13$Team))\nbracket13$Team.3 <- factor(bracket13$Team.3, levels=levels(bracket13$Team))\nbracket13$Team.4 <- factor(bracket13$Team.4, levels=levels(bracket13$Team))\nbracket13$Team.5 <- factor(bracket13$Team.5, levels=levels(bracket13$Team))\n\n\nfor (j in 1 : dim(bracket13)[1]) {\n  if (bracket13$Round.2.Results[j] == 'W'){\n    inc(bracket13$wins[bracket13$Team.1[j]==bracket13$Team]) <- 1\n  }\n  if (bracket13$Round.3.Results[j] == 'W'){\n    inc(bracket13$wins[bracket13$Team.2[j]==bracket13$Team]) <- 1\n  }\n  if (bracket13$Round.4.Results[j] == 'W'){\n    inc(bracket13$wins[bracket13$Team.3[j]==bracket13$Team]) <- 1\n  }\n  if (bracket13$Round.5.Results[j] == 'W'){\n    inc(bracket13$wins[bracket13$Team.4[j]==bracket13$Team]) <- 1\n  }\n  if (bracket13$Round.6.Results[j] == 'W'){\n    inc(bracket13$wins[bracket13$Team.5[j]==bracket13$Team]) <- 1\n  }\n  \n}\n\n#inc(bracket13$wins[bracket13$Team.1[2]==bracket13$Team])\n\n# sort both df's\n\nkp13 <- kp13[with(kp13, order(kp13$Team)),]\nbracket13 <- bracket13[with(bracket13, order(bracket13$Team)),]\n\n\n\n# 2012\n\nbracket12 <- read.csv('2012.csv')\nkp12 <- read.csv('KP2012.csv')\n\n\nkp12$Team = gsub(\"\\\\ [0-9]*$\", \"\", kp12$Team)\n\norder12 = bracket12$Team\n\n\n\n\n# tabulate wins for teams\nfor (i in 1 : dim(bracket12)[1]) {\n  ifelse(bracket12$Round.1.Results[i] == 'W', bracket12$wins[i] <- 1, bracket12$wins[i] <- 0)\n}\n\nbracket12$Team.1 <- factor(bracket12$Team.1, levels=levels(bracket12$Team))\nbracket12$Team.2 <- factor(bracket12$Team.2, levels=levels(bracket12$Team))\nbracket12$Team.3 <- factor(bracket12$Team.3, levels=levels(bracket12$Team))\nbracket12$Team.4 <- factor(bracket12$Team.4, levels=levels(bracket12$Team))\nbracket12$Team.5 <- factor(bracket12$Team.5, levels=levels(bracket12$Team))\n\n\n\nfor (j in 1 : dim(bracket12)[1]) {\n  if (bracket12$Round.2.Results[j] == 'W'){\n    inc(bracket12$wins[bracket12$Team.1[j]==bracket12$Team]) <- 1\n  }\n  if (bracket12$Round.3.Results[j] == 'W'){\n    inc(bracket12$wins[bracket12$Team.2[j]==bracket12$Team]) <- 1\n  }\n  if (bracket12$Round.4.Results[j] == 'W'){\n    inc(bracket12$wins[bracket12$Team.3[j]==bracket12$Team]) <- 1\n  }\n  if (bracket12$Round.5.Results[j] == 'W'){\n    inc(bracket12$wins[bracket12$Team.4[j]==bracket12$Team]) <- 1\n  }\n  if (bracket12$Round.6.Results[j] == 'W'){\n    inc(bracket12$wins[bracket12$Team.5[j]==bracket12$Team]) <- 1\n  }\n  \n}\n\n#inc(bracket12$wins[bracket12$Team.1[2]==bracket12$Team])\n\n# sort both df's\n\nkp12 <- kp12[with(kp12, order(kp12$Team)),]\nbracket12 <- bracket12[with(bracket12, order(bracket12$Team)),]\n\nmod12 <- lm(log(bracket12$wins + 1) ~ kp12$Rank + kp12$Pyth + kp12$AdjO #+ kp12$Conf \n           + kp12$X + kp12$AdjD + kp12$X.1 + kp12$AdjT + kp12$X.2 + kp12$Luck + kp12$X.3\n           + kp12$SoS.Pyth + kp12$X.4 + kp12$OppO + kp12$X.5 + kp12$OppD + kp12$X.6\n           + kp12$NCSoS.Pyth + kp12$X.7)\n\nmod12.st <- step(mod12)\n\n\n# 2011\n\nbracket11 <- read.csv('2011.csv')\nkp11 <- read.csv('KP2011.csv')\n\nkp11$Team = gsub(\"\\\\ [0-9]*$\", \"\", kp11$Team)\n\n\n\n\n# tabulate wins for teams\nfor (i in 1 : dim(bracket11)[1]) {\n  ifelse(bracket11$Round.1.Results[i] == 'W', bracket11$wins[i] <- 1, bracket11$wins[i] <- 0)\n}\n\nbracket11$Team.1 <- factor(bracket11$Team.1, levels=levels(bracket11$Team))\nbracket11$Team.2 <- factor(bracket11$Team.2, levels=levels(bracket11$Team))\nbracket11$Team.3 <- factor(bracket11$Team.3, levels=levels(bracket11$Team))\nbracket11$Team.4 <- factor(bracket11$Team.4, levels=levels(bracket11$Team))\nbracket11$Team.5 <- factor(bracket11$Team.5, levels=levels(bracket11$Team))\n\n\n\nfor (j in 1 : dim(bracket11)[1]) {\n  if (bracket11$Round.2.Results[j] == 'W'){\n    inc(bracket11$wins[bracket11$Team.1[j]==bracket11$Team]) <- 1\n  }\n  if (bracket11$Round.3.Results[j] == 'W'){\n    inc(bracket11$wins[bracket11$Team.2[j]==bracket11$Team]) <- 1\n  }\n  if (bracket11$Round.4.Results[j] == 'W'){\n    inc(bracket11$wins[bracket11$Team.3[j]==bracket11$Team]) <- 1\n  }\n  if (bracket11$Round.5.Results[j] == 'W'){\n    inc(bracket11$wins[bracket11$Team.4[j]==bracket11$Team]) <- 1\n  }\n  if (bracket11$Round.6.Results[j] == 'W'){\n    inc(bracket11$wins[bracket11$Team.5[j]==bracket11$Team]) <- 1\n  }\n  \n}\n\n#inc(bracket11$wins[bracket11$Team.1[2]==bracket11$Team])\n\n# sort both df's\n\nkp11 <- kp11[with(kp11, order(kp11$Team)),]\nbracket11 <- bracket11[with(bracket11, order(bracket11$Team)),]\n\n\nmod11 <- lm(log(bracket11$wins + 1) ~ kp11$Rank + kp11$Pyth + kp11$AdjO #+ kp11$Conf \n            + kp11$X + kp11$AdjD + kp11$X.1 + kp11$AdjT + kp11$X.2 + kp11$Luck + kp11$X.3\n            + kp11$SoS.Pyth + kp11$X.4 + kp11$OppO + kp11$X.5 + kp11$OppD + kp11$X.6\n            + kp11$NCSoS.Pyth + kp11$X.7)\n\nmod11.st <- step(mod11)\n\n#mod11a <- lm(log(bracket11$wins * 1) ~ kp11$Rank * kp11$Pyth * kp11$AdjO #* kp11$Conf \n#            * kp11$X * kp11$AdjD * kp11$X.1 * kp11$AdjT * kp11$X.2 * kp11$Luck * kp11$X.3\n#            * kp11$SoS.Pyth * kp11$X.4 * kp11$OppO * kp11$X.5 * kp11$OppD * kp11$X.6\n#            * kp11$NCSoS.Pyth * kp11$X.7)\n\n\n\n### more stats sources to include\n\n# Jeff Goodman, pundit\n# Jerry Palm, pundit\n# Joe Lunardi, pundit\n# Jeff Borzello, pundit\n# Jay Bilas, pundit\n\n# Jeff Sagarin, stats\n# Massey, stats\n# ESPN BPI, stats\n# Nate Silver, stats\n# Sonny Moore, stats\n# LRMC Rank, stats\n\n# scoring margin\n# AdjO\n# AdjD\n\n### also compare predictions we make to\n# Nate Silver\n# TeamRankings\n#   most likely upsets\n# Massey\n\n\n\n## add Sagarin stats\nsag14 <- read.csv('sag2014.csv') # this has an issue with third digits in later columns being misplaced\n\nsag14 <- sag14[sag14$Team %in% bracket14$Team,] \nsag14 <- sag14[with(sag14, order(sag14$Team)),]\n\n\n\n\n",
    "created" : 1452609552165.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "747005100",
    "id" : "5D3E99A4",
    "lastKnownWriteTime" : 1453916418,
    "path" : "C:/Users/s1229179/GitHub/R/moneyline/dataImport.R",
    "project_path" : "dataImport.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}