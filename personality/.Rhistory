ICC(trimp[,,22])
ICC(trimp[,,23])
ICC(trimp[,,24])
ICC(trimp[,,25])
ICC(trimp[,,26])
ICC(trimp[,,27])
ICC(trimp[,,28])
ICC(trimp[,,29])
ICC(trimp[,,30])
ICC(trimp[,,31])
ICC(trimp[,,32])
ICC(trimp[,,33])
ICC(trimp[,,34])
ICC(trimp[,,35])
ICC(trimp[,,36])
ICC(trimp[,,37])
ICC(trimp[,,38])
ICC(trimp[,,39])
ICC(trimp[,,40])
ICC(trimp[,,41])
ICC(trimp[,,42])
ICC(trimp[,,43])
ICC(trimp[,,44])
ICC(trimp[,,45])
ICC(trimp[,,46])
ICC(trimp[,,47])
ICC(trimp[,,48])
ICC(trimp[,,49])
ICC(trimp[,,31])
library(corrplot)
corrplot(cormat,type="lower", method = 'number',diag = F, addCoef.col = 'grey27',
p.mat = res1[[1]], sig.level = 0.005, insig = 'n', pch = '*'
)
library(bbmle)
library(ggplot2)
gg.e <- ggplot(trial.dat, aes(Trial,Error))+geom_point()+
facet_wrap(~Subject)
gg.e + stat_summary(fun.data="mean_cl_boot",colour='red') #+ stat_smooth(method='glm') # this isn't very good
gg.p <- ggplot(trial.dat, aes(Trial,Progress))+geom_point()+
facet_wrap(~Subject) + theme_bw()
gg.p + stat_summary(fun.data="mean_cl_boot",colour='blue')
gg.ep <- ggplot(trial.dat, aes(Trial,Progress)) +
stat_summary(fun.data="mean_cl_boot",colour='blue') +
facet_wrap(~Subject) + theme_bw()
gg.ep
gg.p <- ggplot(trial.dat, aes(Trial,Error)) +
stat_summary(fun.data="mean_cl_boot",colour='green') +
facet_wrap(~Subject) + theme_bw()
gg.p
gg.e <- ggplot(trial.dat, aes(Trial,Error)) +
stat_summary(fun.data="mean_cl_boot",colour='darkgreen') +
facet_wrap(~Subject) + theme_bw()
gg.e
gg.p <- ggplot(trial.dat, aes(Trial,Progress)) +
stat_summary(fun.data="mean_cl_boot",colour='darkblue') +
facet_wrap(~Subject) + theme_bw()
gg.p
library(nlme)
plot.lme(nlm.0rs.fo)
install.packages("visreg")
library(visreg)
visreg(nlm.0rs.fo)
yPred = coef(nlm.0rs.fo)
plot(nlm.dat$Trial,
yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(yPred[3])))
)
par(mfrow=c(2,2))
plot(nlm.dat$Trial,
yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(yPred[3])))
)
head(yPred)
yPred = coef(nlm.0rs)
head(yPred)
plot(nlm.dat$Trial,
yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(yPred[3])))
)
yPred = coef(nlm.0)
plot(nlm.dat$Trial,
yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(yPred[3])))
)
plot(nlm.dat$Trial, nlm.dat$Progress)
plot(nlm.dat$Trial,
yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(1/2*yPred[3])))
)
yPred = coef(nlm.0)
plot(nlm.dat$Trial,
yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(yPred[3])))
)
head(nlm.0)
head(yPred)
yPred = coef(nlm.0rs)
plot(nlm.dat$Trial,
yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(yPred[3])))
)
dim(yPred)
yPred[1]
yPred[1,2]
yPred[2]
yPred[2,1]
plot(nlm.dat$Trial,
yPred[2,1]/(1 + exp((yPred[2,2]-nlm.dat$Trial)/(yPred[2,3])))
)
summary(nlm.0.fo)
sumary(thrs.nlm.0)
summary(thrs.nlm.0)
nlm.0rs <- nlme(Progress ~ SSlogis(Trial, Asym, xmid, scal),
data = nlm.dat,
fixed = list(Asym ~ 1, xmid ~ 1, scal ~ 1),
random = Asym + xmid + scal ~ 1|Subject
#, groups = ~ Subject/Date,
#start = initVals
#verbose=TRUE
)
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
#, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))
, start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],
Openness=c(0.5,0.5)))
fixef(nlm.0rs)
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
#, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))
, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3],
Openness=c(0.5,0.5)))
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
#, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))
, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
#,Openness=c(0.5,0.5)
))
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
, start = c(fixef(nlm.0rs),fixef(nlm.0rs),fixef(nlm.0sr)
#, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
#,Openness=c(0.5,0.5)
))
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
, start = c(fixef(nlm.0rs),fixef(nlm.0rs),fixef(nlm.0rs)
#, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
#,Openness=c(0.5,0.5)
))
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
, start = c(0.1,0.1,0.1,0.1)
#, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
#,Openness=c(0.5,0.5)
))
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
, start = c(0.1,0.1,0.1,0.1
#, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
#,Openness=c(0.5,0.5)
))
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
, start = c(0.1,0.1,0.1
#, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
#,Openness=c(0.5,0.5)
))
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
, start = c(0.1,0.1,0.1,0.1,0.1
#, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
#,Openness=c(0.5,0.5)
))
nlm.0.o <- update(nlm.0, fixed=list(Asym ~ Openness, xmid ~ Openness, scal ~ 1)
#, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))
, start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],
Openness=c(1,1)))
control = nlmeControl(pnlsTol = 0.001, msVerbose = FALSE, opt='nlminb')
nlm.0.o <- update(nlm.0, fixed=list(Asym ~ Openness, xmid ~ Openness, scal ~ 1)
#, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))
, start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],
Openness=c(1,1)))
nlm.0.f <- update(nlm.0, fixed=list(Asym ~ Friendliness, xmid ~ Friendliness, scal ~ 1)
#, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))
, start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],1,1))
library("nlme", lib.loc="C:/Program Files/R/R-3.2.1/library")
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
, start = c(0.1,0.1,0.1,0.1,0.1
#, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
#,Openness=c(0.5,0.5)
))
nlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)
#, start = c(0.1,0.1,0.1,0.1,0.1
, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
,Openness=c(0.5,0.5)
))
summary(nlm.0rs.o)
nlm.0rs.f <- update(nlm.0rs, fixed=list(Asym ~ Friendliness, xmid ~ 1, scal ~ Friendliness)
#, start = c(0.1,0.1,0.1,0.1,0.1
, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
,Friendliness=c(0.5,0.5)
))
nlm.0rs.fo <- update(nlm.0rs, fixed=list(Asym ~ Friendliness + Openness,
xmid ~ 1, scal ~ Friendliness + Openness)
#, start = c(0.1,0.1,0.1,0.1,0.1
, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
,Friendliness=c(0.5,0.5), Openness=c(0.5,0.5)
))
summary(nlm.0rs.o)
summary(nlm.0rs.f)
summary(nlm.0rs.fo)
anova(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.fo)
AICctab(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.fo,
logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)
library(bbmle)
.libPaths()
.libPaths("C:/Program Files/R/R-3.2.0/library")
library(bbmle)
AICctab(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.fo,
logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)
BICtab(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.fo,base=TRUE)
par(mfrow=c(2,2))
plot(nlm.dat$Trial, nlm.dat$Progress)
yPred = coef(nlm.0rs)
plot(nlm.dat$Trial,
yPred[2,1]/(1 + exp((yPred[2,2]-nlm.dat$Trial)/(yPred[2,3])))
)
plot(nlm.dat$Trial,
yPred[2,1]/(1 + exp((yPred[2,2]-nlm.dat$Trial)/(-2 * yPred[2,3])))
)
plot(nlm.dat$Trial,
yPred[2,1]/(1 + exp((yPred[2,2]-nlm.dat$Trial)/(1/2 * yPred[2,3])))
)
anova(glm.rr.0,glm.rr.o,glm.rr.f,glm.rr.c,glm.rr.ac,glm.rr.fo,glm.rr.foAc,glm.rDinSntr)
library(lme4)
.libPaths("C:/Program Files/R/R-3.2.0/library")
.libLoc
.libloc
anova(glm.rr.0,glm.rr.o,glm.rr.f,glm.rr.c,glm.rr.ac,glm.rr.fo,glm.rr.foAc,glm.rDinSntr)
library(corrplot)
corrplot(cormat,type="lower", method = 'number',diag = F, addCoef.col = 'grey27',
p.mat = res1[[1]], sig.level = 0.005, insig = 'n', pch = '*'
)
gg.e
library*ggplot2
library(ggplot2)
gg.e
gg.e <- ggplot(trial.dat, aes(Trial,Error)) +
stat_summary(fun.data="mean_cl_boot",colour='darkgreen') +
facet_wrap(~Subject) + theme_bw()
gg.e
library(lme4)
library(car)
library(MASS)
library(ggplot2)
gg.e <- ggplot(trial.dat, aes(Trial,Error)) +
stat_summary(fun.data="mean_cl_boot",colour='darkgreen') +
facet_wrap(~Subject) + theme_bw()
gg.e
install.packages("Hmisc")
library("Hmisc", lib.loc="C:/Program Files/R/R-3.2.0/library")
gg.e
install.packages(c("car", "cluster", "MASS", "mgcv", "Rcpp"))
install.packages(c("car", "cluster", "MASS", "mgcv", "Rcpp"))
library(lme4)
library(car)
library(ggplot2)
gg.p <- ggplot(trial.dat, aes(Trial,Progress)) +
stat_summary(fun.data="mean_cl_boot",colour='darkblue') +
facet_wrap(~Subject) + theme_bw()
gg.p
gg.e <- ggplot(trial.dat, aes(Trial,Error)) +
stat_summary(fun.data="mean_cl_boot",colour='darkgreen') +
facet_wrap(~Subject) + theme_bw()
gg.e
gg.e.yj <- ggplot(trial.dat, aes(Trial,Err.yj))+geom_point()+
facet_wrap(~Subject) + stat_summary(fun.data="mean_cl_boot",colour='purple')
gg.e.yj + coord_cartesian(ylim = c(-3, 3))
gg.e.yj <- ggplot(trial.dat, aes(Trial,Err.yj))+
facet_wrap(~Subject) + stat_summary(fun.data="mean_cl_boot",colour='purple')
gg.e.yj
library(ggplot2)
gg.e
gg.e <- ggplot(trial.dat, aes(Trial,Error)) +
stat_summary(fun.data="mean_cl_boot",colour='darkgreen') +
facet_wrap(~Subject) + theme_bw()
library(ggplot2)
.libPaths("C:/Program Files/R/R-3.2.0/library")
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.0/library")
library(ggplot2)
install.packages("Rcpp")
library(ggplot2)
gg.e
gg.e <- ggplot(trial.dat, aes(Trial,Error)) +
stat_summary(fun.data="mean_cl_boot",colour='darkgreen') +
facet_wrap(~Subject) + theme_bw()
gg.p <- ggplot(trial.dat, aes(Trial,Progress)) +
stat_summary(fun.data="mean_cl_boot",colour='darkblue') +
facet_wrap(~Subject) + theme_bw()
gg.p
install.packages("Hmisc")
gg.p
gg.p <- ggplot(trial.dat, aes(Trial,Progress)) +
stat_summary(fun.data="mean_cl_boot",colour='darkblue') +
facet_wrap(~Subject) + theme_bw()
gg.p
library(Hmisc)
library(car)
search()
library("ggplot2", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("Hmisc", lib.loc="C:/Program Files/R/R-3.2.0/library")
remove.packages("lattice", lib="C:/Program Files/R/R-3.2.1/library")
library(Hmisc)
gg.p <- ggplot(trial.dat, aes(Trial,Progress)) +
stat_summary(fun.data="mean_cl_boot",colour='darkblue') +
facet_wrap(~Subject) + theme_bw()
gg.p
search()
library(ggplot2)
library(Hmisc)
gg.p
gg.p <- ggplot(trial.dat, aes(Trial,Progress)) +
stat_summary(fun.data="mean_cl_boot",colour='darkblue') +
facet_wrap(~Subject) + theme_bw()
library(lattice)
library("lattice", lib.loc="C:/Program Files/R/R-3.2.1/library")
library("lattice", lib.loc="C:/Program Files/R/R-3.2.0/library")
library("latticeExtra", lib.loc="C:/Program Files/R/R-3.2.0/library")
library(Hmisc)
library(ggplot2)
gg.p <- ggplot(trial.dat, aes(Trial,Progress)) +
stat_summary(fun.data="mean_cl_boot",colour='darkblue') +
facet_wrap(~Subject) + theme_bw()
gg.p
gg.e <- ggplot(trial.dat, aes(Trial,Error)) +
stat_summary(fun.data="mean_cl_boot",colour='darkgreen') +
facet_wrap(~Subject) + theme_bw()
gg.e
library(nlme)
View(cht)
confint(nlm.0rs.o)
summary(nlm.0rs.o)
intervals.lme(nlm.0rs.o)
library(nlme)
intervals.lme(nlm.0rs.o)
intervals(nlm.0rs.o)
intervals(nlm.0rs.f)
intervals(nlm.0rs.fo)
intervals(nlm.0rs)
view(nlm.dat)
View(nlm.dat)
View(mtrim)
mtrim$Frd.z = scale(mtrim$Friendliness)
mtrim$Opn.z = scale(mtrim$Openness)
mtrim$Anx.z = scale(mtrim$Anxiety)
mtrim$Act.z = scale(mtrim$Activity)
mtrim$Cnf.z = scale(mtrim$Confidence)
mtrim$Dom.z = scale(mtrim$Dominance)
trial.dat<-left_join(trial.dat, mtrim, by='Subject')
library (dplyr)
install.packages("dplyr")
library (dplyr)
trial.dat<-left_join(trial.dat, mtrim, by='Subject')
trial.dat$Subject = as.factor(trial.dat$Subject)
View(trial.dat)
trial.dat<-data.frame(Subject=character(),Date=character(),Trial=numeric(),Correct=numeric(),
Error=numeric(),Progress=numeric(),RT=numeric())
for (i in 1:length(dataIn[,7])){
if(dataIn[i,7]=='-') {
#skip
} else {
Subject = dataIn$Sub[i]
Date = dataIn$Date[i]
Trial = dataIn$Trial[i]
RT = dataIn$RT[i]
if(dataIn[i,7]=='B') {
Error = 1
Progress = 0
Correct = 0
} else if (dataIn[i,7]=='AC') {
Error = 1
Progress = 1
Correct = 0
} else if (dataIn[i,7]=='ABD') {
Error = 1
Progress = 2
Correct = 0
} else if(dataIn[i,7]=='C') {
Error = 2
Progress = 0
Correct = 0
} else if (dataIn[i,7]=='AD') {
Error = 2
Progress = 1
Correct = 0
} else if(dataIn[i,7]=='ABCB') {
Error = -1
Progress = 3
Correct = 0
} else if(dataIn[i,7]=='D') {
Error = 3
Progress = 0
Correct = 0
} else if(dataIn[i,7]=='ABA') {
Error = -1
Progress = 2
Correct = 0
} else if(dataIn[i,7]=='ABCA') {
Error = -2
Progress = 3
Correct = 0
} else if(dataIn[i,7]=='ABCD') {
Error = 0
Progress = 4
Correct = 1
}
trial.dat <- rbind(trial.dat, data.frame(Subject,Date,Trial,Correct,Error,Progress,RT))
}
}
trial.dat<-left_join(trial.dat, mtrim, by='Subject')
trial.dat$Subject = as.factor(trial.dat$Subject)
library(car)
install.packages("car")
install.packages("MASS")
library("MASS", lib.loc="C:/Program Files/R/R-3.2.1/library")
library(car)
library(MASS)
trial.dat$Err.yj <- yjPower(trial.dat$Error, #-1.887,
-0.146,
jacobian.adjusted = TRUE)
nlm.dat = groupedData(Progress ~ Trial | Subject, data=trial.dat , order.groups=0)
nlm.date = groupedData(Progress ~ Trial | Subject/Date, data=trial.dat , order.groups=c(0,0))
znlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Opn.z, xmid ~ 1, scal ~ Opn.z)
#, start = c(0.1,0.1,0.1,0.1,0.1
, start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]
,Opn.z=c(0.5,0.5)
))
summary(znlm.0rs.o)
intervals(znlm.0rs.o)
confint(lmm.err.f)
detach("package:MASS", unload=TRUE)
library("MASS", lib.loc="\\\\chss.datastore.ed.ac.uk/chss/ppls/users/s1229179/R/win-library/3.2")
library("MASS", lib.loc="C:/Program Files/R/R-3.2.1/library")
library("lme4", lib.loc="\\\\chss.datastore.ed.ac.uk/chss/ppls/users/s1229179/R/win-library/3.2")
install.packages("lmertest")
install.packages("lmerTest")
confint(lmm.err.f)
summary(lmm.err.fB.oc)
lmm.err.fB.oc <- lmer(Err.yj ~ Trial + 1 + Friendliness:Trial + Openness
#  + (1 + Trial|Subject)
+ (1 + Trial|Subject/Date)
#+ Openness + Friendliness + Dominance + Confidence + Activity)
, data = trial.dat, REML=FALSE)
summary(lmm.err.fB.oc)
confint(lmm.err.fB.oc)
confint(gglm.rDinSntr)
confint(glm.rDinSntr)
glm.rDinSntr <- glmer(Correct ~ 1 + Trial + Anxiety + Activity + Dominance + Confidence + Openness + Friendliness
+ (1 | Subject/Date),
data=trial.dat,
family=binomial(link='logit'))
confint(glm.rDinSntr)
glm.rr.fo <- glmer(Correct ~ 1 + Trial + Openness + Friendliness + (1 | Subject/Date),
data=trial.dat,
family=binomial(link='logit'))
confint(glm.rr.fo)
zglm.rr.fo <- glmer(Correct ~ 1 + Trial + Opn.z + Frd.z + (1 | Subject/Date),
data=trial.dat,
family=binomial(link='logit'))
confint(zglm.rr.fo)
citation(package="car")
citation(package="psych")
install.packages("psych")
citation(package="nlme")
citation(package="psych")
citation(package="lme4")
library(lme4)
RT.dat = dataIn[(
(dataIn$CorrectItem=='A')),c(1:11)]
RT.dat1 = dataIn[((dataIn$PressAccuracy=='1')&(dataIn$CorrectItem=='A')),c(1:11)]
RT.dat$Subject = as.factor(RT.dat$Sub)
RT.dat1$Subject = as.factor(RT.dat1$Sub)
RT.dat <-left_join(RT.dat, mtrim, by='Subject')
RT.dat <-RT.dat[!outliers(RT.dat$RT,3.5),]
RT.dat1 <-left_join(RT.dat1, mtrim, by='Subject')
RT.dat1 <-RT.dat1[!outliers(RT.dat1$RT,3.5),]
library(dplyr)
RT.dat = dataIn[(
(dataIn$CorrectItem=='A')),c(1:11)]
RT.dat1 = dataIn[((dataIn$PressAccuracy=='1')&(dataIn$CorrectItem=='A')),c(1:11)]
RT.dat$Subject = as.factor(RT.dat$Sub)
RT.dat1$Subject = as.factor(RT.dat1$Sub)
RT.dat <-left_join(RT.dat, mtrim, by='Subject')
RT.dat <-RT.dat[!outliers(RT.dat$RT,3.5),]
RT.dat1 <-left_join(RT.dat1, mtrim, by='Subject')
RT.dat1 <-RT.dat1[!outliers(RT.dat1$RT,3.5),]
lmm.rt.all <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness + Dominance +
Anxiety + Activity + 1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)
, data = RT.dat)
lmm.rt1.all <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness + Dominance +
Anxiety + Activity + 1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)
, data = RT.dat1, REML=FALSE)
summary(lmm.rt.all)
summary(lmm.rt1.all)
head(trimp)
trimp = pers[,c(1:4,6:11),]
srt <- srt$ADJECTIVE[2:55]
head(srt)
library(psych)
icc3 <- NULL
for (i in 1:54){
icc3[i] =  ICC(trimp[,,i])$results
}
ICC(trimp[,,4])
ticc = ICC(trimp[,,1])
srt
levels(srt)
dim(icc)
dim(icc3)
ICC(trimp[,,6])
ICC(trimp[,,4])
ICC(trimp[,,7])
ICC(trimp[,,5])
ICC(trimp[,,53])
libary(MASS)
library(MASS)
library(car)
?which.max
