-DISORGANIZED-DEPENDENT/FOLLOWER-VULNERABLE + 7*8)/9
})
with(data = mtrim, {
Confidence = (-FEARFUL-SUBMISSIVE-TIMID+STABLE-DISTRACTIBLE
-DISORGANIZED-DEPENDENT-VULNERABLE + 7*8)/9
})
View(mtrim)
with(data = mtrim, {
mtrim$Confidence = (-FEARFUL-SUBMISSIVE-TIMID+STABLE-DISTRACTIBLE
-DISORGANIZED-DEPENDENT-VULNERABLE + 7*8)/9
})
View(mtrim)
within(data = mtrim, {
Confidence = (-FEARFUL-SUBMISSIVE-TIMID+STABLE-DISTRACTIBLE
-DISORGANIZED-DEPENDENT-VULNERABLE + 7*8)/9
})
mtrim = within(data = mtrim, {
Confidence = (-FEARFUL-SUBMISSIVE-TIMID+STABLE-DISTRACTIBLE
-DISORGANIZED-DEPENDENT-VULNERABLE + 7*8)/9
})
mtrim = within(data = mtrim, {
Confidence = (-FEARFUL-SUBMISSIVE-TIMID+STABLE-DISTRACTIBLE
-DISORGANIZED-DEPENDENT-VULNERABLE + 7*8)/9
Openness = (VULNERABLE+INQUISITIVE+THOUGHTLESS+INNOVATIVE+INVENTIVE+CURIOUS+IMITATIVE+IMPULSIVE)/8
Dominance = (BULLYING+AGGRESSIVE+IRRITABLE+MANIPULATIVE+EXCITABLE+RECKLESS-GENTLE
+DOMINANT+INDIVIDUALISTIC + 1*8)/9
Friendliness = (HELPFUL+FRIENDLY+AFFECTIONATE+SOCIABLE+SENSITIVE-DEPRESSED+PROTECTIVE
-SOLITARY+SYMPATHETIC+INTELLIGENT+PERSISTENT+DECISIVE + 2*8)/12
Activity = (-CONVENTIONAL-PREDICTABLE-LAZY+ACTIVE-CLUMSY+PLAYFUL + 4*8)/6
Anxious = (-COOL+QUITTING+ANXIOUS+ERRATIC-UNEMOTIONAL+JEALOUS + 2*8)/6
})
View(mtrim)
test = cor.test(scerr,mtrim$Friendliness)
test
test = cor.test(scerr,mtrim$Openness)
test.o = cor.test(scerr,mtrim$Openness)
test.o
mtrim = within(data = mtrim, {
Confidence = (-FEARFUL-SUBMISSIVE-TIMID+STABLE-DISTRACTIBLE
-DISORGANIZED-DEPENDENT-VULNERABLE + 7*8)/9
Openness = (VULNERABLE+INQUISITIVE+THOUGHTLESS+INNOVATIVE+INVENTIVE+CURIOUS+IMITATIVE+IMPULSIVE)/8
Dominance = (BULLYING+AGGRESSIVE+IRRITABLE+MANIPULATIVE+EXCITABLE+RECKLESS-GENTLE
+DOMINANT+INDIVIDUALISTIC + 1*8)/9
Friendliness = (HELPFUL+FRIENDLY+AFFECTIONATE+SOCIABLE+SENSITIVE-DEPRESSED+PROTECTIVE
-SOLITARY+SYMPATHETIC+INTELLIGENT+PERSISTENT+DECISIVE + 2*8)/12
Activity = (-CONVENTIONAL-PREDICTABLE-LAZY+ACTIVE-CLUMSY+PLAYFUL + 4*8)/6
Anxiety = (-COOL+QUITTING+ANXIOUS+ERRATIC-UNEMOTIONAL+JEALOUS + 2*8)/6
})
lm.err = lm(scerr ~ mtrim$Friendliness + mtrim$Openness + mtrim$Anxiety + mtrim$Activity
+  mtrim$Dominance +mtrim$Confidence)
summary(lm.err)
install.packages("nlme")
library(nlme)
head(aerr)
test.c = cor.test(scm,mtrim$Friendliness)
test.o = cor.test(scm,mtrim$Openness)
lm.err = lm(scm ~ mtrim$Friendliness + mtrim$Openness + mtrim$Anxiety + mtrim$Activity
+  mtrim$Dominance +mtrim$Confidence)
test.c
test.o
lm.m = lm(scm ~ mtrim$Friendliness + mtrim$Openness + mtrim$Anxiety + mtrim$Activity
+  mtrim$Dominance +mtrim$Confidence)
lm.m
summary(lm.m)
head(adata)
View(hdata)
terr <- NULL
terr[1] <- c(2,5)
aerr<-data.frame(Trial,Error)
aerr<-data.frame(Trial=as.numeric,Error=as.numeric)
aerr<-data.frame(Trial=as.numeric(),Error=as.numeric())
View(aerr)
View(cdata)
dataIn <- read.xls("AugArbitraryStim.xls",sheet=1,verbose=FALSE,method="tab")
library(gdata)
installXLSXsupport()
install.packages("XLConnect")
library(XLConnect)
install.packages("xlsx")
library(xlsx)
dataIn <- read.xlsx("AugArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE)
View(dataIn)
dataIn <- read.xlsx2("AugArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE)
View(dataIn)
dataIn <- rbind(dataIn, read.xlsx("BenedArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
dataIn <- read.xlsx("AugArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE)
dataIn <- rbind(dataIn, read.xlsx("BenedArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
rbind.all.columns <- function(x, y) {
x.diff <- setdiff(colnames(x), colnames(y))
y.diff <- setdiff(colnames(y), colnames(x))
x[, c(as.character(y.diff))] <- NA
y[, c(as.character(x.diff))] <- NA
return(rbind(x, y))
}
head(dataIn)
head(dataIn)
dataIn <- rbind.all.columns(dataIn, read.xlsx("BenedArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
library(xlsx)
dataIn <- rbind.all.columns(dataIn, read.xlsx("BenedArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
View(dataIn)
dataIn <- rbind.all.columns(dataIn, read.xlsx("ColtArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.xlsx("EbbiArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.xlsx("HoratArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.xlsx("LashArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.xlsx("MacdArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.xlsx("OberArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.xlsx("ProspArbitraryStim.xls",sheetIndex=1,verbose=FALSE,method="tab",header=TRUE))
dataIn <- read.csv("AugArbitraryStim.csv",header=TRUE)
dataIn <- rbind.all.columns(dataIn, read.csv("BenedArbitraryStim.csv",header=TRUE)
dataIn <- rbind.all.columns(dataIn, read.csv("ColtArbitraryStim.csv",header=TRUE)
dataIn <- rbind.all.columns(dataIn, read.csv("EbbiArbitraryStim.csv",header=TRUE)
dataIn <- rbind.all.columns(dataIn, read.csv("HoratArbitraryStim.csv",header=TRUE)
dataIn <- rbind.all.columns(dataIn, read.csv("LashArbitraryStim.csv",header=TRUE)
dataIn <- rbind.all.columns(dataIn, read.csv("MacdArbitraryStim.csv",header=TRUE)
dataIn <- rbind.all.columns(dataIn, read.csv("OberArbitraryStim.csv",header=TRUE)
dataIn <- rbind.all.columns(dataIn, read.csv("ProspArbitraryStim.csv",header=TRUE)
dataIn <- read.csv("AugArbitraryStim.csv",header=TRUE)
dataIn <- rbind.all.columns(dataIn, read.csv("BenedArbitraryStim.csv",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.csv("ColtArbitraryStim.csv",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.csv("EbbiArbitraryStim.csv",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.csv("HoratArbitraryStim.csv",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.csv("LashArbitraryStim.csv",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.csv("MacdArbitraryStim.csv",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.csv("OberArbitraryStim.csv",header=TRUE))
dataIn <- rbind.all.columns(dataIn, read.csv("ProspArbitraryStim.csv",header=TRUE))
View(dataIn)
trial.dat<-data.frame(Subject=as.factor(),Trial=as.numeric(),
Error=as.numeric(),Progress=as.numeric(),RT=as.numeric())
trial.dat<-data.frame(Subject=factor(),Trial=numeric(),
Error=numeric(),Progress=numeric(),RT=numeric())
trial.dat<-data.frame(Subject=factor(),Trial=numeric(),
Error=numeric(),Progress=numeric(),RT=numeric())
for (i in 1:length(dataIn[,7])){
if(dataIn[i,7]=='-') {
next
} else {
trial.dat$Subject[i] = dataIn$Sub[i]
trial.dat$Trial[i] = dataIn$Trial[i]
trial.dat$RT[i] = dataIn$RT[i]
if((dataIn[i,7]=='B') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AC') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 1
} else if (dataIn[i,7]=='ABD') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='C') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AD') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 1
} else if(dataIn[i,7]=='ABCB') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='D') {
trial.dat$Error[i] = 3
trial.dat$Progress[i] = 0
} else if((dataIn[i,7]=='ABA') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='ABCA') {
trial.dat$Error[i] = -2
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='ABCD') {
trial.dat$Error[i] = 0
trial.dat$Progress[i] = 4
}
}
}
for (i in 1:length(dataIn[,7])){
if(dataIn[i,7]=='-') {
#skip
} else {
trial.dat$Subject[i] = dataIn$Sub[i]
trial.dat$Trial[i] = dataIn$Trial[i]
trial.dat$RT[i] = dataIn$RT[i]
if((dataIn[i,7]=='B') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AC') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 1
} else if (dataIn[i,7]=='ABD') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='C') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AD') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 1
} else if(dataIn[i,7]=='ABCB') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='D') {
trial.dat$Error[i] = 3
trial.dat$Progress[i] = 0
} else if((dataIn[i,7]=='ABA') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='ABCA') {
trial.dat$Error[i] = -2
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='ABCD') {
trial.dat$Error[i] = 0
trial.dat$Progress[i] = 4
}
}
}
if((dataIn[i,7]=='B') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AC') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 1
} else if (dataIn[i,7]=='ABD') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='C') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AD') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 1
} else if(dataIn[i,7]=='ABCB') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='D') {
trial.dat$Error[i] = 3
trial.dat$Progress[i] = 0
} else if((dataIn[i,7]=='ABA') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='ABCA') {
trial.dat$Error[i] = -2
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='ABCD') {
trial.dat$Error[i] = 0
trial.dat$Progress[i] = 4
}
i = 4
if((dataIn[i,7]=='B') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AC') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 1
} else if (dataIn[i,7]=='ABD') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='C') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AD') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 1
} else if(dataIn[i,7]=='ABCB') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='D') {
trial.dat$Error[i] = 3
trial.dat$Progress[i] = 0
} else if((dataIn[i,7]=='ABA') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='ABCA') {
trial.dat$Error[i] = -2
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='ABCD') {
trial.dat$Error[i] = 0
trial.dat$Progress[i] = 4
}
if((dataIn[i,7]=='B') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AC') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 1
}
if((dataIn[i,7]=='B') {
if(dataIn[i,7]=='B') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AC') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 1
}
if(dataIn[i,7]=='B') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AC') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 1
} else if (dataIn[i,7]=='ABD') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='C') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AD') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 1
} else if(dataIn[i,7]=='ABCB') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='D') {
trial.dat$Error[i] = 3
trial.dat$Progress[i] = 0
} else if(dataIn[i,7]=='ABA') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='ABCA') {
trial.dat$Error[i] = -2
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='ABCD') {
trial.dat$Error[i] = 0
trial.dat$Progress[i] = 4
}
trial.dat<-data.frame(Subject=factor(),Trial=numeric(),
Error=numeric(),Progress=numeric(),RT=numeric())
for (i in 1:length(dataIn[,7])){
if(dataIn[i,7]=='-') {
#skip
} else {
trial.dat$Subject[i] = dataIn$Sub[i]
trial.dat$Trial[i] = dataIn$Trial[i]
trial.dat$RT[i] = dataIn$RT[i]
if(dataIn[i,7]=='B') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AC') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 1
} else if (dataIn[i,7]=='ABD') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='C') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AD') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 1
} else if(dataIn[i,7]=='ABCB') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='D') {
trial.dat$Error[i] = 3
trial.dat$Progress[i] = 0
} else if(dataIn[i,7]=='ABA') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='ABCA') {
trial.dat$Error[i] = -2
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='ABCD') {
trial.dat$Error[i] = 0
trial.dat$Progress[i] = 4
}
}
}
View(trial.dat)
for (i in 1:length(dataIn[,7])){
if(dataIn[i,7]=='-') {
#skip
} else {
trial.dat$Subject[i] = dataIn$Sub[i]
trial.dat$Trial[i] = dataIn$Trial[i]
trial.dat$RT[i] = dataIn$RT[i]
if(dataIn[i,7]=='B') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AC') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 1
} else if (dataIn[i,7]=='ABD') {
trial.dat$Error[i] = 1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='C') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 0
} else if (dataIn[i,7]=='AD') {
trial.dat$Error[i] = 2
trial.dat$Progress[i] = 1
} else if(dataIn[i,7]=='ABCB') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='D') {
trial.dat$Error[i] = 3
trial.dat$Progress[i] = 0
} else if(dataIn[i,7]=='ABA') {
trial.dat$Error[i] = -1
trial.dat$Progress[i] = 2
} else if(dataIn[i,7]=='ABCA') {
trial.dat$Error[i] = -2
trial.dat$Progress[i] = 3
} else if(dataIn[i,7]=='ABCD') {
trial.dat$Error[i] = 0
trial.dat$Progress[i] = 4
}
}
}
for (i in 1:length(dataIn[,7])){
if(dataIn[i,7]=='-') {
#skip
} else {
trial.dat$Subject[i] = dataIn$Sub[i]
trial.dat$Trial[i] = dataIn$Trial[i]
trial.dat$RT[i] = dataIn$RT[i]
}
}
trial.dat<-data.frame(Subject=character(),Trial=numeric(),
Error=numeric(),Progress=numeric(),RT=numeric())
for (i in 1:length(dataIn[,7])){
if(dataIn[i,7]=='-') {
#skip
} else {
Subject = dataIn$Sub[i]
Trial = dataIn$Trial[i]
RT = dataIn$RT[i]
if(dataIn[i,7]=='B') {
Error = 1
Progress = 0
} else if (dataIn[i,7]=='AC') {
Error = 1
Progress = 1
} else if (dataIn[i,7]=='ABD') {
Error = 1
Progress = 2
} else if(dataIn[i,7]=='C') {
Error = 2
Progress = 0
} else if (dataIn[i,7]=='AD') {
Error = 2
Progress = 1
} else if(dataIn[i,7]=='ABCB') {
Error = -1
Progress = 3
} else if(dataIn[i,7]=='D') {
Error = 3
Progress = 0
} else if(dataIn[i,7]=='ABA') {
Error = -1
Progress = 2
} else if(dataIn[i,7]=='ABCA') {
Error = -2
Progress = 3
} else if(dataIn[i,7]=='ABCD') {
Error = 0
Progress = 4
}
trial.dat <- rbind(trial.dat, data.frame(Subject,Trial,Error,Progress,RT))
}
}
View(trial.dat)
trial.dat<-data.frame(Subject=character(),Trial=numeric(),
Error=numeric(),Progress=numeric(),RT=numeric())
for (i in 1:length(dataIn[,7])){
if(dataIn[i,7]=='-') {
#skip
} else {
Subject = dataIn$Sub[i]
Trial = dataIn$Trial[i]
RT = dataIn$RT[i]
if(dataIn[i,7]=='B') {
Error = 1
Progress = 0
} else if (dataIn[i,7]=='AC') {
Error = 1
Progress = 1
} else if (dataIn[i,7]=='ABD') {
Error = 1
Progress = 2
} else if(dataIn[i,7]=='C') {
Error = 2
Progress = 0
} else if (dataIn[i,7]=='AD') {
Error = 2
Progress = 1
} else if(dataIn[i,7]=='ABCB') {
Error = -1
Progress = 3
} else if(dataIn[i,7]=='D') {
Error = 3
Progress = 0
} else if(dataIn[i,7]=='ABA') {
Error = -1
Progress = 2
} else if(dataIn[i,7]=='ABCA') {
Error = -2
Progress = 3
} else if(dataIn[i,7]=='ABCD') {
Error = 0
Progress = 4
}
trial.dat <- rbind(trial.dat, data.frame(Subject,Trial,Error,Progress,RT))
}
}
L = 5
nlm.err <- nlme(Error ~ (L * (Trial + P))/(Trial + P + R), data = trial.dat)
library(nlme)
nlm.err <- nlme(Error ~ (L * (Trial + P))/(Trial + P + R), data = trial.dat)
trial.dat$Err.t = ((L / trial.dat$Error) - 1 )^-1
View(trial.dat)
lmer(Err.t ~ Trial + 1 + (1 + Trial | Subject), data = trial.dat)
library(lme4)
lmer(Err.t ~ Trial + 1 + (1 + Trial | Subject), data = trial.dat)
lmm.err <- lmer(Err.t ~ Trial + 1 + (1 + Trial | Subject), data = trial.dat)
summary(lmm.err)
ranef(lmm.err)
