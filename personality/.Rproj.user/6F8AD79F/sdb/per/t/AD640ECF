{
    "contents" : "# non-linear models of performance\n\nlibrary (dplyr)\n\ntrial.dat<-left_join(trial.dat, mtrim, by='Subject')\ntrial.dat$Subject = as.factor(trial.dat$Subject)\n\n\nlibrary(ggplot2)\ngg.e <- ggplot(trial.dat, aes(Trial,Error))+geom_point()+\n  facet_wrap(~Subject)\n\ngg.e + stat_summary(fun.data=\"mean_cl_boot\",colour='red') + stat_smooth(method='glm') # this isn't very good\n\n\n\ngg.p <- ggplot(trial.dat, aes(Trial,Progress))+geom_point()+\n  facet_wrap(~Subject)\n\ngg.p + stat_summary(fun.data=\"mean_cl_boot\",colour='green')\n\n\ngg.p.tr <-  ggplot(trial.dat, aes(Trial,Prog.t))+geom_point()+\n  facet_wrap(~Subject)\ngg.p.tr + stat_summary(fun.data=\"mean_cl_boot\",colour='green') + stat_smooth(method='lm')\n\n### PROGRESS\n\nlibrary(lme4)\nlibrary(car)\n\n# y = L(x + P) /\n#     x + P + R\nL = 5\n\n# (L / y - 1)^-1 = x/R + P/R  \n\ntrial.dat$Prog.t = ((L / trial.dat$Progress) - 1 )^-1\n\n\n# linear(ly transformed) models\n\n#null models\nlmm.Prog.00 <- lmer(Prog.t ~ (1 | Subject ), data=trial.dat)\nlmm.Prog.0 <- lmer(Prog.t ~ Trial + 1 + (1 + Trial| Subject), data = trial.dat)\n\nlmm.Prog.o.main <- lmer(Prog.t ~ Trial + 1 + Trial + Openness + (1 + Trial| Subject), data = trial.dat)\nlmm.Prog.o.mainint <- lmer(Prog.t ~ Trial + 1*Openness + Trial*Openness + (1 + Trial| Subject), data = trial.dat)\nlmm.Prog.o.int <- lmer(Prog.t ~ Trial + 1 + Trial:Openness + (1 + Trial| Subject), data = trial.dat)\n# main+interaction is best\n\nlmm.Prog.f.main <- lmer(Prog.t ~ Trial + 1 + Trial + Friendliness + (1 + Trial| Subject), data = trial.dat)\nlmm.Prog.f.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Friendliness + (1 + Trial| Subject), data = trial.dat)\nanova(lmm.Prog.00,lmm.Prog.0,lmm.Prog.f.main,lmm.Prog.f.mainint)\n\nlmm.Prog.fo.all <-lmer(Prog.t ~ 1 + Trial + Openness + Friendliness + Openness:Trial + Friendliness:Trial + (1 + Trial| Subject), data = trial.dat )\n\nlmm.Prog.c.main <- lmer(Prog.t ~ Trial + 1 + Trial + Confidence + (1 + Trial| Subject), data = trial.dat)\nlmm.Prog.c.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Confidence + (1 + Trial| Subject), data = trial.dat)\nanova(lmm.Prog.00,lmm.Prog.0,lmm.Prog.c.main,lmm.Prog.c.mainint)\n\nlmm.Prog.ac.main <- lmer(Prog.t ~ Trial + 1 + Trial + Activity + (1 + Trial| Subject), data = trial.dat)\n#lmm.Prog.ac.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Confidence + (1 + Trial| Subject), data = trial.dat)\n\nlmm.Prog.d.main <- lmer(Prog.t ~ Trial + 1 + Trial + Dominance + (1 + Trial| Subject), data = trial.dat)\n#lmm.Prog.d.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Confidence + (1 + Trial| Subject), data = trial.dat)\n\nlmm.Prog.an.main <- lmer(Prog.t ~ Trial + 1 + Trial + Anxiety + (1 + Trial| Subject), data = trial.dat)\n#lmm.Prog.an.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Confidence + (1 + Trial| Subject), data = trial.dat)\n\n\nlmm.Prog.fo.main <- lmer(Prog.t ~ Trial + 1 + Trial + Friendliness + Openness + (1 + Trial| Subject), data = trial.dat)\n\n# this isn't kosher since the equation does not have a quadratic term\nlmm.Prog.fo.mainint <- lmer(Prog.t ~ Trial + 1 + Trial + Friendliness * Openness + (1 + Trial| Subject), data = trial.dat)\n\n\nanova(lmm.Prog.00,lmm.Prog.0,lmm.Prog.f.main,lmm.Prog.c.main,lmm.Prog.o.main,\n            lmm.Prog.d.main,lmm.Prog.ac.main,lmm.Prog.an.main)\n\nprog.AICc <- AICctab(lmm.Prog.00,lmm.Prog.0,lmm.Prog.f.main,lmm.Prog.c.main,lmm.Prog.o.main,\n      lmm.Prog.d.main,lmm.Prog.ac.main,lmm.Prog.an.main,lmm.Prog.fo.main,#lmm.Prog.fo.mainint,\n      logLik=TRUE, delta=TRUE,base=TRUE)\n\n\nlmm.Prog.all.mainint <- lmer(Prog.t ~ 1 + Trial + Openness + Friendliness + \n                               Dominance + Confidence + Anxiety + Activity +\n                               Openness:Trial + Friendliness:Trial + \n                               Dominance:Trial + Confidence:Trial + \n                               Anxiety:Trial + Activity:Trial +\n                               (1 + Trial| Subject), data = trial.dat )\n\n\n\n###\n\nlibrary(bbmle) # for ICtab\nprog.AIC <- AICctab(lmm.Prog.0,lmm.Prog.00,lmm.Prog.f,lmm.Prog.o,lmm.Prog.fo,lmm.Prog.all,\n                   lmm.Prog.c, lmm.Prog.ac,lmm.Prog.an,lmm.Prog.d,\n                   #type=c(\"BIC\",\"AIC\",\"AICc\",\"qAIC\",\"qAICc\"),\n                   logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\n\nBICtab(lmm.Prog.0,lmm.Prog.f,lmm.Prog.o,lmm.Prog.fo,lmm.Prog.all, #type=c(\"BIC\",\"AIC\",\"AICc\",\"qAIC\",\"qAICc\"),\n       logLik=TRUE)\n\n## BLUP individual parameter tests\nBLUP.prog = ranef(lmm.Prog.0,drop=TRUE)\n\n# intercept: P/R\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Friendliness)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Openness)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Anxiety)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Activity)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Dominance)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Confidence)\n\n# just P\n\n# slope: 1/R -> transform via 1/beta\n# this needs to be tested\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Friendliness)\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Openness)\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Confidence)\n\n\n\n\n### ERROR\n\n# this one we can try with a quadratic fit\n\n\n\n\n#trial.dat$Err.t = ((L / trial.dat$Error) - 1 )^-1\n# this transform makes regular OLS not a great approach\n# one alternative is Weighted LS, but ML is still good, and REML probably best\n\n#|\n\n# null model\nlmm.err.0 <- lmer(Err.t ~ Trial + 1 + (1 + Trial| Subject), data = trial.dat)\n\nlmm.err.o <- lmer(Err.t ~ Trial + 1 \n                  #  + (1 + Trial|Subject) \n                    + (1 + Trial|Openness)\n                    #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                         , data = trial.dat)\n\nlmm.err.f <- lmer(Err.t ~ Trial + 1 \n                  #+ (1 + Trial|Subject) \n                  + (1 + Trial|Friendliness)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat)\n\nlmm.err.fo <- lmer(Err.t ~ Trial + 1 \n                    #+ (1 + Trial|Subject)                   \n                    + (1 + Trial|Friendliness) \n                    + (1 + Trial|Openness)\n                    #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                    , data = trial.dat)\n\n# lmm.err.fxo <- lmer(Err.t ~ Trial + 1 \n#                    #+ (1 + Trial|Subject)                   \n#                    + (1 + Trial|Friendliness:Openness)\n#                    #+ Openness + Friendliness + Dominance + Confidence + Activity)\n#                    , data = trial.dat)\n\nlmm.err.ac <- lmer(Err.t ~ Trial + 1 \n                  #+ (1 + Trial|Subject) \n                  + (1 + Trial|Activity)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat)\n\nlmm.err.an <- lmer(Err.t ~ Trial + 1 \n                  #+ (1 + Trial|Subject) \n                  + (1 + Trial|Anxiety)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat)\n\nlmm.err.c <- lmer(Err.t ~ Trial + 1 \n                  #+ (1 + Trial|Subject) \n                  + (1 + Trial|Confidence)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat)\n\nlmm.err.d <- lmer(Err.t ~ Trial + 1 \n                  #+ (1 + Trial|Subject) \n                  + (1 + Trial|Dominance)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat)\n\nlmm.err.all <- lmer(Err.t ~ Trial + 1 + \n                      #(1 + Trial| Subject)\n                    + (1 + Trial|Friendliness) \n                    + (1 + Trial|Openness)\n                    + (1 + Trial|Anxiety)\n                    + (1 + Trial|Activity)\n                    + (1 + Trial|Confidence)\n                    + (1 + Trial|Dominance)                    \n                    ,data = trial.dat)\n\n\nerr.AIC <- AICctab(lmm.err.0,lmm.err.f,lmm.err.o,lmm.err.fo,lmm.err.all,\n                   lmm.err.c, lmm.err.ac,lmm.err.an,lmm.err.d,\n                   #type=c(\"BIC\",\"AIC\",\"AICc\",\"qAIC\",\"qAICc\"),\n      logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\n                    \nBICtab(lmm.err.0,lmm.err.f,lmm.err.o,lmm.err.fo,lmm.err.all, #type=c(\"BIC\",\"AIC\",\"AICc\",\"qAIC\",\"qAICc\"),\n       logLik=TRUE)\n\nlibrary(lmtest)\n\nlrtest(lmm.err.f)\n\nDfo_0 = -2*logLik(lmm.err.0, REML = TRUE) + 2*logLik(lmm.err.fo, REML = TRUE)\nddf = 3\nchi.fo_0 <- pchisq(Dfo_0, ddf, ncp=0, lower.tail=FALSE, log.p=FALSE)\n\n\n### BLUP individual parameter tests\nBLUP.err = ranef(lmm.err.0,drop=TRUE)\n\n# intercept: P/R\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Friendliness)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Openness)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Anxiety)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Activity)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Dominance)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Confidence)\n\n# just P\n\n# slope: 1/R -> transform via 1/beta\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Friendliness)\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Openness)\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Confidence)\n\n",
    "created" : 1430162674769.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "716037520",
    "id" : "AD640ECF",
    "lastKnownWriteTime" : 1430178153,
    "path" : "~/GitHub/R/personality/nlmods.R",
    "project_path" : "nlmods.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}