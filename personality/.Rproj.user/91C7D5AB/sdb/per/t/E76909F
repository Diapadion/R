{
    "contents" : "# non-linear models of performance\n\nlibrary (dplyr)\n\ntrial.dat<-left_join(trial.dat, mtrim, by='Subject')\ntrial.dat$Subject = as.factor(trial.dat$Subject)\n\n# log modulus transformation\ntrial.dat$Err.t <- log(abs(trial.dat$Error)+1) * sign(trial.dat$Error)\n# inverse modulus transform\ntrial.dat$Err.t <- 1/(abs(trial.dat$Error)+1) * sign(trial.dat$Error)\n# this seem to be the best, but needs refelction\n# ... and reflection fucks it all up\ntrial.dat$Err.t.r <- 1/(abs(trial.dat$Error)*-1+3) * sign(trial.dat$Error)\n\nlibrary(car)\nlibrary(MASS)\n# Yeo-Johnson transformations. Seem less good.\n# ... but I don't think there is a robust alternative\nyj.lambda = with(data=trial.dat,boxcox(Error[Error>0] ~ Trial[Error>0], plotit=TRUE,eps=0.01,\n                                       lambda=seq(-2,2,0.0001)))\nyj.lambda = with(data=trial.dat,boxcox(abs(Error)+1 ~ Trial, plotit=TRUE,eps=0.01,\n                                       lambda=seq(-2,2,0.001)))\ntrial.dat$Err.yj <- yjPower(trial.dat$Error, #-1.887,\n                            -0.146,\n                            jacobian.adjusted = TRUE)\n\ngg.e.yj <- ggplot(trial.dat, aes(Trial,Err.yj))+\n  facet_wrap(~Subject) + stat_summary(fun.data=\"mean_cl_boot\",colour='purple')\ngg.e.yj + coord_cartesian(ylim = c(-3, 3)) \n\n\nlibrary(ggplot2)\ngg.e <- ggplot(trial.dat, aes(Trial,Error))+geom_point()+\n  facet_wrap(~Subject)\n\ngg.e + stat_summary(fun.data=\"mean_cl_boot\",colour='red') #+ stat_smooth(method='glm') # this isn't very good\n\ngg.e <- ggplot(trial.dat, aes(Trial,Err.t.r))+geom_point()+\n  facet_wrap(~Subject) + stat_summary(fun.data=\"mean_cl_boot\",colour='purple')\ngg.e\n\n\n# this is used in ASP2015 presentation\ngg.p <- ggplot(trial.dat, aes(Trial,Progress))+geom_point()+\n  facet_wrap(~Subject) + theme_bw()\n\ngg.p + stat_summary(fun.data=\"mean_cl_boot\",colour='blue')\n\n\ngg.p.tr <-  ggplot(trial.dat, aes(Trial,Prog.t))+geom_point()+\n  facet_wrap(~Subject)\ngg.p.tr + stat_summary(fun.data=\"mean_cl_boot\",colour='green') + stat_smooth(method='lm')\n\n\n### cumulative plots for pub\n\nlibrary(lattice) # manually ???\nlibrary(Hmisc)\nlibrary(ggplot2)\n\ngg.p <- ggplot(trial.dat, aes(Trial,Progress)) + \n  stat_summary(fun.data=\"mean_cl_boot\",colour='darkblue') + \n  facet_wrap(~Subject) + theme_bw()\n\ngg.e <- ggplot(trial.dat, aes(Trial,Error)) + \n  stat_summary(fun.data=\"mean_cl_boot\",colour='darkgreen') + \n  facet_wrap(~Subject) + theme_bw()\n\n ### PROGRESS\n\nlibrary(lme4)\nlibrary(car)\n\n# y = L(x + P) /\n#     x + P + R\nL = 4 #4.1\n\n## back to nlme's\nlibrary(nlme)\n\ninitVals <- getInitial(Progress ~ SSlogis(Trial, Asym, xmid, scal), data = trial.dat)\nnlm.0 <- nlme(Progress ~ SSlogis(Trial, Asym, xmid, scal),\n                 data = trial.dat,\n                 fixed = list(Asym ~ 1, xmid ~ 1, scal ~ 1),\n                 random = Asym + xmid ~ 1|Subject,\n                 start = initVals)\n# Scal seems like it should be a constant. What does it really mean? \n# Should it have a random effect but no personality impact?\n\n\n# setting up df for random effects (nested) via nlme\nnlm.dat = groupedData(Progress ~ Trial | Subject, data=trial.dat , order.groups=0)\n\nnlm.date = groupedData(Progress ~ Trial | Subject/Date, data=trial.dat , order.groups=c(0,0))\n\n#nlm.dat$ran = runif(length(nlm.dat$Subject))\n\nnlm.0 <- nlme(Progress ~ SSlogis(Trial, Asym, xmid, scal),\n              data = nlm.dat,\n              fixed = list(Asym ~ 1, xmid ~ 1, scal ~ 1),\n              random = Asym + xmid ~ 1|Subject,\n              #groups = ~ Subject\n              #start = initVals\n)\n\n# now trying to nest trials within subject\n\nnlm.0rs <- nlme(Progress ~ SSlogis(Trial, Asym, xmid, scal),\n              data = nlm.dat,\n              fixed = list(Asym ~ 1, xmid ~ 1, scal ~ 1),\n              random = Asym + xmid + scal ~ 1|Subject\n              #, groups = ~ Subject/Date,\n              #start = initVals\n              #verbose=TRUE\n)\n\ncontrol = nlmeControl(pnlsTol = 0.001, msVerbose = FALSE, opt='nlminb')\nnlm.0.o <- update(nlm.0, fixed=list(Asym ~ Openness, xmid ~ Openness, scal ~ 1)\n                #, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))\n                , start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],\n                            Openness=c(1,1)))\n\nnlm.0.f <- update(nlm.0, fixed=list(Asym ~ Friendliness, xmid ~ Friendliness, scal ~ 1)\n                  #, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))\n                  , start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],1,1))\n\nnlm.0.fo<- update(nlm.0, fixed=list(Asym ~ Friendliness + Openness, xmid ~ Friendliness + Openness, scal ~ 1)\n                  #, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))\n                  , start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],\n                              #fixef(nlm.0.f)[2],fixef(nlm.0.o)[2],fixef(nlm.0.f)[4],fixef(nlm.0.o)[4]))\n                              1,1,1,1))\n \n## These models are not what they seem: xmid is not interesting, scal is\nnlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ Openness, scal ~ 1)\n                  #, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))\n                  , start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],\n                              Openness=c(0.5,0.5)))\n\nnlm.0rs.f <- update(nlm.0rs, fixed=list(Asym ~ Friendliness, xmid ~ Friendliness, scal ~ 1)\n                  #, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))\n                  , start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],0.5,0.5))\n\nnlm.0rs.c <- update(nlm.0rs, fixed=list(Asym ~ Confidence, xmid ~ Confidence, scal ~ 1)\n                    #, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))\n                    , start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3],0.5,0.5))\n\n# new - a is for activity\nnlm.0rs.a <- update(nlm.0rs, fixed=list(Asym ~ Activity, xmid ~ Activity, scal ~ 1)\n                    #, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))\n                    , start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],\n                                c(0.5,0.5)))\n# fuck it\n\ncontrol = nlmeControl(pnlsTol = 0.02, msVerbose = TRUE)\nnlm.0rs.fo<- update(nlm.0rs, fixed=list(Asym ~ Friendliness + Openness, xmid ~ Friendliness + Openness, scal ~ 1)\n                  #, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))\n                  , start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],\n                            #  fixef(nlm.0.f)[2],fixef(nlm.0.o)[2],fixef(nlm.0.f)[4],fixef(nlm.0.o)[4]))\n                              0.5,0.5,0.5,0.5))\n\nnlm.0rs.foc<- update(nlm.0rs, fixed=list(Asym ~ Friendliness + Openness + Confidence, \n                                        xmid ~ Friendliness + Openness + Confidence, scal ~ 1)\n                    #, start = c(fixef(nlm.0),fixef(nlm.0),fixef(nlm.0)))\n                    , start = c(Asym = fixef(nlm.0)[1],xmid = fixef(nlm.0)[2], scal = fixef(nlm.0)[3],\n                                #  fixef(nlm.0.f)[2],fixef(nlm.0.o)[2],fixef(nlm.0.f)[4],fixef(nlm.0.o)[4]))\n                                0.5,0.5,0.5,0.5,0.5,0.5))\n\nlibrary(bbmle)\ntemp <- AICctab(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.c,nlm.0rs.fo,nlm.0rs.foc,\n        logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\nwrite.csv(cbind(rownames(temp),temp$df,temp$logLik,temp$AICc), \"clipboard.csv\", sep=,)\ntemp <- BICtab(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.c,nlm.0rs.fo,nlm.0rs.foc,base=TRUE)\nwrite.csv(cbind(rownames(temp),temp$df,temp$BIC), \"clipboard.csv\")\n\nAICtab(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.c,nlm.0rs.fo,nlm.0rs.foc,base=TRUE)\n\nanova(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.c,nlm.0rs.fo,nlm.0rs.foc)\n\n\n# fit plots\n\nlibrary(visreg)\nvisreg(nlm.0rs.fo)\n\nlibrary(ggplot2)\ngg.p <- ggplot(trial.dat, aes(Trial,Progress))+stat_summary(fun.data=\"mean_cl_boot\",colour='green')\n  \ngg.p + facet_wrap(~Subject)\n\nyPred=coef(nlm.0)\n\n# scal\npar(mfrow=c(2,2))\n\nplot(nlm.dat$Trial, nlm.dat$Progress)\n\nyPred = coef(nlm.0rs)\n\nplot(nlm.dat$Trial, \n      yPred[2,1]/(1 + exp((yPred[2,2]-nlm.dat$Trial)/(yPred[2,3])))\n)\nplot(nlm.dat$Trial, \n     yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(yPred[3])))\n)\nplot(nlm.dat$Trial, \n     yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(1/2*yPred[3])))\n)\n\n#xmid\npar(mfrow=c(2,2))\n\nplot(nlm.dat$Trial, nlm.dat$Progress)\n\nyPred = fixef(nlm.0)\nplot(nlm.dat$Trial, \n     yPred[1]/(1 + exp((yPred[2]-nlm.dat$Trial)/(yPred[3])))\n)\nplot(nlm.dat$Trial, \n     yPred[1]/(1 + exp((2*yPred[2]-nlm.dat$Trial)/(yPred[3])))\n)\nplot(nlm.dat$Trial, \n     yPred[1]/(1 + exp((1/2*yPred[2]-nlm.dat$Trial)/(yPred[3])))\n)\n\n      \n\nfixef(nlm.0)\n# this doesn't really work\n\n# Correlation tests with ranef's\n\nran.prog = ranef(nlm.0rs,drop=TRUE)\n\n# with Asymptote\ncor.test(unlist(ran.prog[1]),mtrim$Friendliness)\ncor.test(unlist(ran.prog[1]),mtrim$Openness)\ncor.test(unlist(ran.prog[1]),mtrim$Anxiety)\ncor.test(unlist(ran.prog[1]),mtrim$Activity)\ncor.test(unlist(ran.prog[1]),mtrim$Dominance)\ncor.test(unlist(ran.prog[1]),mtrim$Confidence)\n\n# with xmid (slope rise)\ncor.test(unlist(ran.prog[2]),mtrim$Friendliness)\ncor.test(unlist(ran.prog[2]),mtrim$Openness)\ncor.test(unlist(ran.prog[2]),mtrim$Confidence)\n\n\n##\n\nthurstone <- function(x, L, P, R) (L*(x + P)/(x + P + R))\n\nthurstone <- deriv(~(4*(x + P)/(x + P + R)),\n                    c('P','R'), function(x, P, R){})\n\nthrs.nlm.0 <- nlme(Progress ~ thurstone(Trial, P, R),\n              data=nlm.dat,\n              fixed=list(P ~ 1, R ~ 1),\n              random = R + R ~ 1|Subject\n              , start = c(0.1,0.1)\n)\n\n\nnlm.o <- nlme(Progress ~ thurstone(Trial, P, R),\n              data=nlm.dat,\n              fixed=list(P ~ 1 + Openness, R ~ 1 + Openness),\n              random = R + R ~ 1|Subject\n              , start = c(0.01,0.01,0.01,0.01)\n)\n\nnlm.f <- nlme(Progress ~ thurstone(Trial, P, R),\n              data=nlm.dat,\n              fixed=list(P ~ 1 + Friendliness, R ~ 1 + Friendliness),\n              random = P + R ~ 1|Subject\n              , start = c(0.01,0.01,0.01,0.01)\n)\n\nnlm.fo <- nlme(Progress ~ thurstone(Trial, P, R),\n              data=nlm.dat,\n              fixed=list(P ~ 1 + Friendliness + Openness, R ~ 1 + Friendliness + Openness),\n              random = P + R ~ 1|Subject\n              , start = c(0.01,0.01,0.01,0.01,0.01,0.01)\n)\n\n\n# (L / y - 1)^-1 = x/R + P/R  \n\ntrial.dat$Prog.t = ((L / trial.dat$Progress) - 1 )^-1\n\ntrial.dat$Prog.t = exp(trial.dat$Progress)\n\n\n# linear(ly transformed) models\n\n#null models\nlmm.Prog.00 <- lmer(Prog.t ~ (1 | Subject ), data=trial.dat)\nlmm.Prog.0 <- lmer(Prog.t ~ Trial + 1 + (1 + Trial| Subject), data = trial.dat)\n\nlmm.Prog.o.main <- lmer(Prog.t ~ Trial + 1 + Trial + Openness + (1 + Trial| Subject), data = trial.dat)\nlmm.Prog.o.mainint <- lmer(Prog.t ~ Trial + 1*Openness + Trial*Openness + (1 + Trial| Subject), data = trial.dat)\nlmm.Prog.o.int <- lmer(Prog.t ~ Trial + 1 + Trial:Openness + (1 + Trial| Subject), data = trial.dat)\n# main+interaction is best\n\nlmm.Prog.f.main <- lmer(Prog.t ~ Trial + 1 + Trial + Friendliness + (1 + Trial| Subject), data = trial.dat)\nlmm.Prog.f.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Friendliness + (1 + Trial| Subject), data = trial.dat)\nanova(lmm.Prog.00,lmm.Prog.0,lmm.Prog.f.main,lmm.Prog.f.mainint)\n\nlmm.Prog.fo.all <-lmer(Prog.t ~ 1 + Trial + Openness + Friendliness + Openness:Trial + Friendliness:Trial + (1 + Trial| Subject), data = trial.dat )\n\nlmm.Prog.c.main <- lmer(Prog.t ~ Trial + 1 + Trial + Confidence + (1 + Trial| Subject), data = trial.dat)\nlmm.Prog.c.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Confidence + (1 + Trial| Subject), data = trial.dat)\nanova(lmm.Prog.00,lmm.Prog.0,lmm.Prog.c.main,lmm.Prog.c.mainint)\n\nlmm.Prog.ac.main <- lmer(Prog.t ~ Trial + 1 + Trial + Activity + (1 + Trial| Subject), data = trial.dat)\n#lmm.Prog.ac.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Confidence + (1 + Trial| Subject), data = trial.dat)\n\nlmm.Prog.d.main <- lmer(Prog.t ~ Trial + 1 + Trial + Dominance + (1 + Trial| Subject), data = trial.dat)\n#lmm.Prog.d.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Confidence + (1 + Trial| Subject), data = trial.dat)\n\nlmm.Prog.an.main <- lmer(Prog.t ~ Trial + 1 + Trial + Anxiety + (1 + Trial| Subject), data = trial.dat)\n#lmm.Prog.an.mainint <- lmer(Prog.t ~ Trial + 1 + Trial * Confidence + (1 + Trial| Subject), data = trial.dat)\n\n\nlmm.Prog.fo.main <- lmer(Prog.t ~ Trial + 1 + Trial + Friendliness + Openness + (1 + Trial| Subject), data = trial.dat)\n\n# this isn't kosher since the equation does not have a quadratic term\nlmm.Prog.fo.mainint <- lmer(Prog.t ~ Trial + 1 + Trial + Friendliness * Openness + (1 + Trial| Subject), data = trial.dat)\n\n\nanova(lmm.Prog.00,lmm.Prog.0,lmm.Prog.f.main,lmm.Prog.c.main,lmm.Prog.o.main,\n            lmm.Prog.d.main,lmm.Prog.ac.main,lmm.Prog.an.main)\n\nprog.AICc <- AICctab(lmm.Prog.00,lmm.Prog.0,lmm.Prog.f.main,lmm.Prog.c.main,lmm.Prog.o.main,\n      lmm.Prog.d.main,lmm.Prog.ac.main,lmm.Prog.an.main,lmm.Prog.fo.main,#lmm.Prog.fo.mainint,\n      logLik=TRUE, delta=TRUE,base=TRUE)\n\n\nlmm.Prog.all.mainint <- lmer(Prog.t ~ 1 + Trial + Openness + Friendliness + \n                               Dominance + Confidence + Anxiety + Activity +\n                               Openness:Trial + Friendliness:Trial + \n                               Dominance:Trial + Confidence:Trial + \n                               Anxiety:Trial + Activity:Trial +\n                               (1 + Trial| Subject), data = trial.dat )\n\n\n\n##\n\nlibrary(bbmle) # for ICtab\nprog.AIC <- AICctab(lmm.Prog.0,lmm.Prog.00,lmm.Prog.f,lmm.Prog.o,lmm.Prog.fo,lmm.Prog.all,\n                   lmm.Prog.c, lmm.Prog.ac,lmm.Prog.an,lmm.Prog.d,\n                   #type=c(\"BIC\",\"AIC\",\"AICc\",\"qAIC\",\"qAICc\"),\n                   logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\n\nBICtab(lmm.Prog.0,lmm.Prog.f,lmm.Prog.o,lmm.Prog.fo,lmm.Prog.all, #type=c(\"BIC\",\"AIC\",\"AICc\",\"qAIC\",\"qAICc\"),\n       logLik=TRUE)\n\n## BLUP individual parameter tests\nBLUP.prog = ranef(lmm.Prog.0,drop=TRUE)\n\n# intercept: P/R\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Friendliness)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Openness)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Anxiety)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Activity)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Dominance)\ncor.test(unlist(BLUP.prog$Subject[1]),mtrim$Confidence)\n\n# just P\n\n# slope: 1/R -> transform via 1/beta\n# this needs to be tested\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Friendliness)\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Openness)\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Confidence)\n\n\n### Try it all again. From the SSlogis models, building models which\n### look at the added impact of personality on asym(ptote) and scal(e)\n\n### PROGRESS\n\n## this is the null model for pub\nnlm.0rs <- nlme(Progress ~ SSlogis(Trial, Asym, xmid, scal),\n                data = nlm.dat,\n                fixed = list(Asym ~ 1, xmid ~ 1, scal ~ 1),\n                random = Asym + xmid + scal ~ 1|Subject\n                #, groups = ~ Subject/Date,\n                #start = initVals\n                #verbose=TRUE\n)\n\nnlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Openness, xmid ~ 1, scal ~ Openness)\n                    #, start = c(0.1,0.1,0.1,0.1,0.1\n                    , start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]\n                                ,Openness=c(0.5,0.5)\n                    ))\n\n# znlm.0rs.o <- update(nlm.0rs, fixed=list(Asym ~ Opn.z, xmid ~ 1, scal ~ Opn.z)\n#                     #, start = c(0.1,0.1,0.1,0.1,0.1\n#                     , start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]\n#                                 ,Opn.z=c(0.5,0.5)\n#                     ))\n\nnlm.0rs.f <- update(nlm.0rs, fixed=list(Asym ~ Friendliness, xmid ~ 1, scal ~ Friendliness)\n                    #, start = c(0.1,0.1,0.1,0.1,0.1\n                    , start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]\n                                ,Friendliness=c(0.5,0.5)\n                    ))\n\nnlm.0rs.fo <- update(nlm.0rs, fixed=list(Asym ~ Friendliness + Openness, \n                                         xmid ~ 1, scal ~ Friendliness + Openness)\n                    #, start = c(0.1,0.1,0.1,0.1,0.1\n                    , start = c(Asym = fixef(nlm.0rs)[1],xmid = fixef(nlm.0rs)[2], scal = fixef(nlm.0rs)[3]\n                                ,Friendliness=c(0.5,0.5), Openness=c(0.5,0.5)\n                    ))\n\nanova(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.fo)\n\nAICctab(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.fo,\n                logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\nBICtab(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.fo,base=TRUE)\n\n\nanova(nlm.0rs,nlm.0rs.o,nlm.0rs.f,nlm.0rs.fo)\n\n# plots\n\npar(mfrow=c(2,2))\n\nplot(nlm.dat$Trial, nlm.dat$Progress)\n\nyPred = coef(nlm.0rs)\n\nplot(nlm.dat$Trial, \n     yPred[2,1]/(1 + exp((yPred[2,2]-nlm.dat$Trial)/(1/2 * yPred[2,3])))\n)\n\n\n\n### ERROR\n\n# using General Additive Models\n\nlibrary(mgcv)\nlibrary(gamm4)\nlibrary(bbmle)\n\ngam.err.0 <- gamm4(Error ~ 1 + Trial,\n                  data = trial.dat,\n                  random= ~ (1+Trial | Subject/Date)\n)\n\n\n# testing for which is best\n# gam.err.0s.tp10 <- gamm4(Error ~ 1 + s(Trial,k=10),\n#                    data = trial.dat,\n#                    random= ~ (1+Trial | Subject/Date)\n# )\n# gam.err.0s.cr10 \ngam.err.0s <- gamm4(Error ~ 1 + s(Trial,bs='cr',k=5),\n                    data = trial.dat,\n                    random= ~ (1+Trial | Subject/Date)\n)\n# gam.err.0s.cr20 <- gamm4(Error ~ 1 + s(Trial,bs='cr',k=20),\n#                     data = trial.dat,\n#                     random= ~ (1+Trial | Subject/Date)\n# )\n\n\n\n\ngam.err.pers.f <- gamm4(Error ~ 1 + s(Trial,bs='cr',k=5) + \n                           s(Friendliness,bs='cr',k=5) +\n                           t2(Trial,Friendliness,bs='cr',k=5),\n                         data = trial.dat,\n                         random= ~ (1+Trial | Subject/Date)\n)\n\ngam.err.pers.o <- gamm4(Error ~ 1 + s(Trial,bs='cr',k=5) + \n                          s(Openness,bs='cr',k=5) +\n                          t2(Trial,Openness,bs='cr',k=5),\n                        data = trial.dat,\n                        random= ~ (1+Trial | Subject/Date)\n)\n\n\n\ngam.err.pers.fo <- gamm4(Error ~ 1 + s(Trial,bs='cr',k=5) + \n                            t2(Trial,Friendliness,bs='cr',k=5) +\n                            t2(Trial,Openness,bs='cr',k=5),\n                          data = trial.dat,\n                          random= ~ (1+Trial | Subject/Date)\n)\n\ngam.err.pers.fo.int <- gamm4(Error ~ 1 + s(Trial,bs='cr',k=5) + \n                               s(Openness,bs='cr',k=5) + s(Friendliness,bs='cr',k=5) +\n                           t2(Trial,Friendliness,bs='cr',k=5) +\n                           t2(Trial,Openness,bs='cr',k=5),\n                         data = trial.dat,\n                         random= ~ (1+Trial | Subject/Date)\n)\n\n\ngam.err.pers.foc <- gamm4(Error ~ 1 + s(Trial,bs='cr',k=5) + \n                            t2(Trial,Friendliness,bs='cr',k=5) +\n                            t2(Trial,Openness,bs='cr',k=5) + \n                            t2(Trial,Confidence,bs='cr',k=5),\n                            data = trial.dat,\n                            random= ~ (1+Trial | Subject/Date)\n)\n\n\ngam.err.pers.fxo.0 <- gamm4(Error ~ 1 + s(Trial,bs='cr',k=10) +\n                      #t2(Trial,Friendliness) +\n                      t2(Trial,Openness,Friendliness,bs='cr',k=5),\n                    data = trial.dat,\n                    random= ~ (1+Trial | Subject/Date)\n)\n\ngam.err.pers.fxo <- gamm4(Error ~ 1 + s(Trial,bs='cr',k=10) +\n                              t2(Trial,Friendliness) +\n                              t2(Trial,Openness,Friendliness,bs='cr',k=5),\n                            data = trial.dat,\n                            random= ~ (1+Trial | Subject/Date)\n)\n\n\n\n#trial.dat$Err.t = ((L / trial.dat$Error) - 1 )^-1\n# the above transform makes regular OLS not a great approach\n# one alternative is Weighted LS, but ML is still good, and REML probably best\n\n\n# this one we can try with a quadratic fit\nlibrary(coefplot)\n\nlmm.q.err.0 <- lmer(Error ~ I(Trial^2) + Trial + 1 + (1 + Trial + I(Trial^2)| Subject), data = trial.dat, REML=FALSE)\n# Yes, I think we want the slope in there (above)\n#lmm.q.err.01 <- lmer(Error ~ I(Trial^2) + 1 + (1 + I(Trial^2)| Subject), data = trial.dat)\nlmm.q.err.o <- lmer(Error ~ I(Trial^2) + Trial + 1 + \n                      I(Trial^2):Openness + \n                      (1 + Trial + I(Trial^2)| Subject/Date), data = trial.dat, REML=FALSE)\n\nlmm.q.err.o2 <- lmer(Error ~ I(Trial^2) + Trial + 1 + \n                      I(Trial^2):Openness + Openness +\n                      (1 + Trial + I(Trial^2)| Subject/Date), data = trial.dat, REML=FALSE)\n\nlmm.q.err.f <- lmer(Error ~ I(Trial^2) + Trial + 1 + \n                      I(Trial^2):Friendliness + Friendliness +\n                      (1 + Trial + I(Trial^2)| Subject), data = trial.dat, REML=FALSE)\n\n\ntrial.dat$err.pred = predict(lmm.q.err.0, newdata=trial.dat$Trial)\n\nplotLMER.fnc(lmm.q.err.0)\n\ncoefplot(lmm.err.0)\n\n\n## Error models for pub\n\n# null model\nlmm.err.0 <- lmer(Err.yj ~ Trial + 1 + (1 + Trial| Subject/Date), data = trial.dat, REML=FALSE)\n\nlmm.err.0.rtr <- lmer(Err.yj ~ 1 + (1 | Subject:Date) + (1 | Subject:Trial) + (1 | Subject), data = trial.dat, REML=FALSE)\n# model .0 is better\n\n\n\n\nlmm.err.o <- lmer(Err.yj ~ Trial + 1 + Openness\n                  #  + (1 + Trial|Subject) \n                    + (1 + Trial|Subject/Date)\n                    #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                         , data = trial.dat, REML=FALSE)\n\nlmm.err.oB <- lmer(Err.yj ~ Trial + 1 + Openness:Trial\n                  #  + (1 + Trial|Subject) \n                  + (1 + Trial|Subject/Date)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat, REML=FALSE)\n\n\nlmm.err.f <- lmer(Err.yj ~ Trial + 1 + Friendliness\n                  #  + (1 + Trial|Subject) \n                  + (1 + Trial|Subject/Date)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat, REML=FALSE)\n\nlmm.err.fB <- lmer(Err.yj ~ Trial + 1 + Friendliness:Trial\n                  #  + (1 + Trial|Subject) \n                  + (1 + Trial|Subject/Date)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat, REML=FALSE)\n\nanova(lmm.err.f,lmm.err.o,lmm.err.fB,lmm.err.oB)\n\nlmm.err.fBc <- lmer(Err.yj ~ Trial + 1 + Friendliness:Trial + Friendliness\n                   #  + (1 + Trial|Subject) \n                   + (1 + Trial|Subject/Date)\n                   #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                   , data = trial.dat, REML=FALSE)\n\nanova(lmm.err.f,lmm.err.o,lmm.err.fB,lmm.err.fBc)\n\n# this is the best model\nlmm.err.fB.oc <- lmer(Err.yj ~ Trial + 1 + Friendliness:Trial + Openness\n                      #  + (1 + Trial|Subject) \n                       + (1 + Trial|Subject/Date)\n                      #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                      , data = trial.dat, REML=FALSE)\n\nlmm.err.fBc.oc <- lmer(Err.yj ~ Trial + 1 + Friendliness:Trial + Friendliness + Openness\n                       #  + (1 + Trial|Subject) \n                       + (1 + Trial|Subject/Date)\n                       #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                       , data = trial.dat, REML=FALSE)\n\nanova(lmm.err.0,lmm.err.f,lmm.err.o,lmm.err.fB,lmm.err.fBc,lmm.err.fB.oc,lmm.err.fBc.oc)\n\ntemp <- AICctab(lmm.err.0,lmm.err.f,lmm.err.o,lmm.err.oB,lmm.err.fB,\n                lmm.err.fBc,lmm.err.fB.oc,lmm.err.fBc.oc,\n                    logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\nwrite.csv(cbind(rownames(temp),temp$df,temp$AICc,temp$logLik), \"clipboard.csv\")\ntemp<-BICtab(lmm.err.0,lmm.err.f,lmm.err.o,lmm.err.oB,lmm.err.fB,\n             lmm.err.fBc,lmm.err.fB.oc,lmm.err.fBc.oc, base=T)\nwrite.csv(cbind(rownames(temp),temp$df,temp$BIC), \"clipboard.csv\")\n\nAnova(lmm.err.fB.oc)\nAnova(lmm.err.fBc.oc)\n\n### BLUP individual parameter tests\nBLUP.err = ranef(lmm.err.0,drop=TRUE)\n\n# the below appears to have become useless  \n\n# intercept\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Friendliness)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Openness)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Anxiety)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Activity)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Dominance)\ncor.test(unlist(BLUP.err$Subject[1]),mtrim$Confidence)\n\n# slope\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Friendliness)\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Openness)\ncor.test(1/unlist(BLUP.err$Subject[2]),mtrim$Confidence)\n\n\n\n### REWARD RATE\n\nlibrary(lme4)\n\nglm.rrtr <- glmer(Correct ~ 1 + Trial + Anxiety + Activity + Dominance + Confidence + Openness + Friendliness\n                + (1 + Trial|Subject:Date) + (0 + Trial | Subject),\n                data=trial.dat,\n                family=binomial(link='logit'))\n\nglm.rrntr <- glmer(Correct ~ 1 + Trial + Anxiety + Activity + Dominance + Confidence + Openness + Friendliness\n                  + (1 | Subject:Date),\n                  data=trial.dat,\n                  family=binomial(link='logit'))\n\n## this one\nglm.rDinSntr <- glmer(Correct ~ 1 + Trial + Anxiety + Activity + Dominance + Confidence + Openness + Friendliness\n                   + (1 | Subject/Date),\n                   data=trial.dat,\n                   family=binomial(link='logit'))\n\n# model below is probably not meaningful\nglm.rr <- glmer(Correct ~ 1 + Anxiety + Activity + Dominance + Confidence + Openness + Friendliness\n                + (1 | Subject:Date) + (1 | Subject:Trial), #+ (1 | Subject),\n                data=trial.dat,\n                family=binomial(link='logit'))\n\n# indicate that Subject effect on Intercept is degenerate\n\n\n## do we need to use the same model building strategy?\nglm.rr.0 <- glmer(Correct ~ 1 + Trial\n                  + (1 | Subject/Date),\n                  data=trial.dat,\n                  family=binomial(link='logit'))\n\nglm.rr.o <- glmer(Correct ~ 1 + Trial + Openness + (1 | Subject/Date),\n      data=trial.dat,\n      family=binomial(link='logit'))\n\nglm.rr.f <- glmer(Correct ~ 1 + Trial + Friendliness + (1 | Subject/Date),\n                 data=trial.dat,\n                 family=binomial(link='logit'))\n\nglm.rr.c <- glmer(Correct ~ 1 + Trial + Confidence + (1 | Subject/Date),\n                 data=trial.dat,\n                 family=binomial(link='logit'))\n\nglm.rr.ac <- glmer(Correct ~ 1 + Trial + Activity + (1 | Subject/Date),\n                 data=trial.dat,\n                 family=binomial(link='logit'))\n\n## and this one\nglm.rr.fo <- glmer(Correct ~ 1 + Trial + Openness + Friendliness + (1 | Subject/Date),\n                           data=trial.dat,\n                           family=binomial(link='logit'))\n\nzglm.rr.fo <- glmer(Correct ~ 1 + Trial + Opn.z + Frd.z + (1 | Subject/Date),\n                   data=trial.dat,\n                   family=binomial(link='logit'))\n\nglm.rr.foAc <- glmer(Correct ~ 1 + Trial + Openness + Friendliness + Activity + (1 | Subject/Date),\n                   data=trial.dat,\n                   family=binomial(link='logit'))\n\n\nanova(glm.rr.0,glm.rr.o,glm.rr.f,glm.rr.c,glm.rr.ac,glm.rr.fo,glm.rr.foAc,glm.rDinSntr)\n\ntemp <- AICctab(glm.rr.0,glm.rr.o,glm.rr.f,glm.rr.c,glm.rr.ac,glm.rr.fo,glm.rr.foAc,glm.rDinSntr,\n                logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\ntemp<-BICtab(glm.rr.0,glm.rr.o,glm.rr.f,glm.rr.c,glm.rr.ac,glm.rr.fo,glm.rr.foAc,glm.rDinSntr,\n             base=T)\n\n#library(MCMCglmm)\n\n\n\n### REACTION TIME\n### for both all and only correct responses\n\nlibrary(lme4)\n\nRT.dat = dataIn[(\n    (dataIn$CorrectItem=='A')),c(1:11)]\n\nRT.dat1 = dataIn[((dataIn$PressAccuracy=='1')&(dataIn$CorrectItem=='A')),c(1:11)]\n\n\nRT.dat$Subject = as.factor(RT.dat$Sub)\nRT.dat1$Subject = as.factor(RT.dat1$Sub)\n\nRT.dat <-left_join(RT.dat, mtrim, by='Subject')\n\nRT.dat <-RT.dat[!outliers(RT.dat$RT,3.5),]\n\n\nRT.dat1 <-left_join(RT.dat1, mtrim, by='Subject')\n\nRT.dat1 <-RT.dat1[!outliers(RT.dat1$RT,3.5),]\n\n\n# regrss\n#library(blme) # noooo...\nlibrary(lmer)\n\n## reverse model building strategy\n# in light of RR results\n# and weak correlations\n\nlmm.rt.0 <- lmer(log(RT) ~ Trial + 1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                 , data = RT.dat, REML=FALSE)\n\n# unused\nlmm.rt.1.NTr <- lmer(log(RT) ~ Confidence + Openness + Friendliness + Dominance +\n                 Anxiety + Activity + 1 + (1 + Trial| Subject) #+ (1 + Trial| Date)\n                 , data = RT.dat, REML=FALSE)\n\n## all first responses\n\nlmm.rt.all <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness + Dominance +\n                   Anxiety + Activity + 1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                 , data = RT.dat)\n\nlmm.rt.NAc <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness + Dominance +\n                     Anxiety + 1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                   , data = RT.dat, REML=FALSE)\n\nlmm.rt.NAcAx <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness + Dominance +\n                     1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                   , data = RT.dat, REML=FALSE)\n\nlmm.rt.NAcAxD <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness +\n                       1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                     , data = RT.dat, REML=FALSE)\n\ntemp <- AICctab(lmm.rt.all, logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\n\nAnova(lmm.rt.all)\nAnova(lmm.rt.NAc)\n\n\n\n# unused\nlmm.rt1.NTr <- lmer(log(RT) ~ Confidence + Openness + Friendliness + Dominance +\n                    Anxiety + Activity + 1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                  , data = RT.dat1, REML=FALSE)\n\n## all correct first reponses (only)\n\nlmm.rt1.0 <- lmer(log(RT) ~ Trial + 1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                 , data = RT.dat1, REML=FALSE)\n\nlmm.rt1.all <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness + Dominance +\n                     Anxiety + Activity + 1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                   , data = RT.dat1, REML=FALSE)\n# Activity is weakest\n\nlmm.rt1.nAc <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness + Dominance +\n                                     Anxiety + 1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                                   , data = RT.dat1, REML=FALSE)\n# Anxiety is weakest\n\nlmm.rt1.nAcAx <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness + Dominance +\n                      1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                    , data = RT.dat1, REML=FALSE)\n# Dominance is weakest\n\nlmm.rt1.nAcAxD <- lmer(log(RT) ~ Trial + Confidence + Openness + Friendliness +\n                         1 + (1 + Trial| Subject/Date)# + (1 + Trial| Date)\n                    , data = RT.dat1, REML=FALSE)\n\nanova(lmm.rt1.0,lmm.rt1.all,lmm.rt1.nAc,lmm.rt1.nAcAx,lmm.rt1.nAcAxD)\n# after removing Dominance, fit gets notable worse\n\ntemp <- AICctab(lmm.rt1.0,lmm.rt1.all,lmm.rt1.nAc,lmm.rt1.nAcAx,lmm.rt1.nAcAxD\n                , logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\nBICtab(lmm.rt1.0,lmm.rt1.all,lmm.rt1.nAc,lmm.rt1.nAcAx,lmm.rt1.nAcAxD\n                ,base=TRUE, dispersion=TRUE)\n\nAnova(lmm.rt1.all)\nAnova(lmm.rt1.nAc)\nAnova(lmm.rt1.nAcAx)\n\n\nhead(RT.dat$RT[RT.dat$Subject=='Prospero'],30)\n\n\n\n### acces. func.\n\noutliers <- function(obs, x = 3)\n  abs(obs - mean(obs, na.rm = T)) > (sd(obs, na.rm = T) * x)\n\n\n\n##### Cleanup\n\n.ls.objects <- function (pos = 1, pattern, order.by,\n                         decreasing=FALSE, head=FALSE, n=5) {\n  napply <- function(names, fn) sapply(names, function(x)\n    fn(get(x, pos = pos)))\n  names <- ls(pos = pos, pattern = pattern)\n  obj.class <- napply(names, function(x) as.character(class(x))[1])\n  obj.mode <- napply(names, mode)\n  obj.type <- ifelse(is.na(obj.class), obj.mode, obj.class)\n  obj.size <- napply(names, object.size)\n  obj.dim <- t(napply(names, function(x)\n    as.numeric(dim(x))[1:2]))\n  vec <- is.na(obj.dim)[, 1] & (obj.type != \"function\")\n  obj.dim[vec, 1] <- napply(names, length)[vec]\n  out <- data.frame(obj.type, obj.size, obj.dim)\n  names(out) <- c(\"Type\", \"Size\", \"Rows\", \"Columns\")\n  if (!missing(order.by))\n    out <- out[order(out[[order.by]], decreasing=decreasing), ]\n  if (head)\n    out <- head(out, n)\n  out\n}\n# shorthand\nlsos <- function(..., n=10) {\n  .ls.objects(..., order.by=\"Size\", decreasing=TRUE, head=TRUE, n=n)\n}\n\n\n### Old stuff\n\n\nlmm.err.fo <- lmer(Err.t ~ Trial + 1 \n                   + Friendliness + Friendliness:Trial\n                   + Openness + Openness:Trial\n                   + (1 + Trial|Subject/Date)\n                   #+ (1 + Trial|Subject)                   \n                   #+ (1 + Trial|Friendliness) \n                   #+ (1 + Trial|Openness)\n                   #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                   , data = trial.dat, REML=FALSE)\n\nanova(lmm.err.0,lmm.err.fo,lmm.err.f,lmm.err.fB,lmm.err.o,lmm.err.oB)\n# is f on B and o on c the meaningful interactions?\n\nlmm.err.Bf <- lmer(Err.t ~ Trial + 1 \n                   + Friendliness:Trial\n                   + (1 + Trial|Subject/Date)\n                   , data = trial.dat, REML=FALSE)\n\nlmm.err.Co <- lmer(Err.t ~ Trial + 1 \n                   + Openness\n                   + (1 + Trial|Subject/Date)\n                   , data = trial.dat, REML=FALSE)\n\n\nlmm.err.BfCo <- lmer(Err.t ~ Trial + 1 \n                     + Friendliness:Trial + Openness\n                     + (1 + Trial|Subject/Date)\n                     , data = trial.dat, REML=FALSE)\n\nlmm.err.Bf_o <- lmer(Err.t ~ Trial + 1 \n                     + Friendliness:Trial + Openness + Openness:Trial\n                     + (1 + Trial|Subject/Date)\n                     , data = trial.dat, REML=FALSE)\n\nanova(lmm.err.0,lmm.err.fo,lmm.err.f,lmm.err.fB,lmm.err.o,lmm.err.oB, lmm.err.Bf,lmm.err.Co,lmm.err.BfCo, lmm.err.Bf_o)\nanova(lmm.err.0,lmm.err.f,lmm.err.fB,lmm.err.o, lmm.err.Bf,lmm.err.BfCo, lmm.err.Bf_o)\n\n\n# lmm.err.fxo <- lmer(Err.t ~ Trial + 1 \n#                    #+ (1 + Trial|Subject)                   \n#                    + (1 + Trial|Friendliness:Openness)\n#                    #+ Openness + Friendliness + Dominance + Confidence + Activity)\n#                    , data = trial.dat)\n\nlmm.err.ac <- lmer(Err.t ~ Trial + 1 \n                   #+ (1 + Trial|Subject) \n                   + (1 + Trial|Activity)\n                   #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                   , data = trial.dat)\n\nlmm.err.an <- lmer(Err.t ~ Trial + 1 \n                   #+ (1 + Trial|Subject) \n                   + (1 + Trial|Anxiety)\n                   #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                   , data = trial.dat)\n\nlmm.err.c <- lmer(Err.t ~ Trial + 1 \n                  #+ (1 + Trial|Subject) \n                  + (1 + Trial|Confidence)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat)\n\nlmm.err.d <- lmer(Err.t ~ Trial + 1 \n                  #+ (1 + Trial|Subject) \n                  + (1 + Trial|Dominance)\n                  #+ Openness + Friendliness + Dominance + Confidence + Activity)\n                  , data = trial.dat)\n\nlmm.err.all <- lmer(Err.t ~ Trial + 1 + \n                      #(1 + Trial| Subject)\n                      + (1 + Trial|Friendliness) \n                    + (1 + Trial|Openness)\n                    + (1 + Trial|Anxiety)\n                    + (1 + Trial|Activity)\n                    + (1 + Trial|Confidence)\n                    + (1 + Trial|Dominance)                    \n                    ,data = trial.dat)\n\n\nerr.AIC <- AICctab(lmm.err.0,lmm.err.f,lmm.err.o,lmm.err.fo,lmm.err.all,\n                   lmm.err.c, lmm.err.ac,lmm.err.an,lmm.err.d,\n                   #type=c(\"BIC\",\"AIC\",\"AICc\",\"qAIC\",\"qAICc\"),\n                   logLik=TRUE, delta=TRUE, base=TRUE, dispersion=TRUE)\n\nBICtab(lmm.err.0,lmm.err.f,lmm.err.o,lmm.err.fo,lmm.err.all, #type=c(\"BIC\",\"AIC\",\"AICc\",\"qAIC\",\"qAICc\"),\n       logLik=TRUE)\n\nlibrary(lmtest)\n\nlrtest(lmm.err.f)\n\nDfo_0 = -2*logLik(lmm.err.0, REML = TRUE) + 2*logLik(lmm.err.fo, REML = TRUE)\nddf = 3\nchi.fo_0 <- pchisq(Dfo_0, ddf, ncp=0, lower.tail=FALSE, log.p=FALSE)\n\n\n",
    "created" : 1437495176449.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1139192029",
    "id" : "E76909F",
    "lastKnownWriteTime" : 1442245599,
    "path" : "C:/Users/s1229179/GitHub/R/personality/nlmods.R",
    "project_path" : "nlmods.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}